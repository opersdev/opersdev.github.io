<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机专业如何高质量的走完大学四年</title>
      <link href="/2021/11/06/ji-suan-ji-zhuan-ye-ru-he-gao-zhi-liang-de-zou-wan-da-xue-si-nian/"/>
      <url>/2021/11/06/ji-suan-ji-zhuan-ye-ru-he-gao-zhi-liang-de-zou-wan-da-xue-si-nian/</url>
      
        <content type="html"><![CDATA[<p>前言：迷茫本就是青春该有的模样，但不要让未来的你讨厌现在的自己。</p><p>“就要毕业了。</p><p>回头看自己所谓的大学生活，</p><p>我想哭，不是因为离别，而是因为什么都没学到。</p><p>我不知，简历该怎么写，若是以往我会让它空白。</p><p>最大的收获也许是……对什么都没有的忍耐和适应……”</p><p>这是一个大四同学给李开复的信，这封来信道出了不少大三、大四学生的心声。大学期间，有许多学生放任自己、虚度光阴，还有许多学生始终也找不到正确的学习方向。当他们被第一次补考通知唤醒时，当他们收到第一封来自应聘企业的婉拒信时，这些学生才惊讶地发现，自己的前途是那么渺茫，一切努力似乎都为时已晚……</p><p>在大学期间，我自己也是非常努力，得过国家励志奖学金、连续四年获得学校一等奖学金、国家助学金、英语六级、中级软考证书、四级测试工程师证书、学校组织的各种竞赛/活动证书一大堆。当时的我，觉得自己很牛Ｂ……直到毕业，才发现，根本找不到工作，能进得去的都是些几个人的小公司，后来，读了研究生……</p><p>现在毕业六年，辗转几个大厂，做过几年校招＼社招面试官，再回首大学生涯，才知道很多努力都是白费，很多奖项其实无用。</p><p>青春总是如此开场，憧憬又迷茫，有时却贻笑大方。人啊，总是错过一次，才知道珍惜，可人生却只有一次。</p><p>有些同学毕业时，很快能找到工作，人称OFFER收割机，而有些同学经历完秋招＼春招，一个OFFER收不到。有些同学成绩不好，却处处有人要，有些同学绩点很高，却找不到工作。</p><p>经过几次校招，看过太多的期盼与落寞，太多的失望与痛苦，希望此类的事情不再发生在你身上。</p><p>四年的努力决定了你毕业时的高度，决定了你能进入什么样的公司，拿着什么样的薪资，过着什么样的生活。</p><p>毕业进大公司，之后BAT随便跳，毕业进创业公司，想进大公司至少五年后。大学四年，决定着你一生的命运。多努力点，生活总不会亏待于你。</p><p>结合自己的经历和这几年的校招社招经验， 和大家分享下，大学四年里要怎么度过，什么才是真正要追逐的东西，如何规划你的大学四年，才能成为OFFER收割机，记得帮我点赞哦。</p><p>长文预警，涉及面较广，耐着性子看看，这或许是改变你一生的文章。</p><p>目录：</p><p>四年真的很长?</p><p>大学的本质是什么</p><p>目标导向，以终为始，规划人生</p><p>啥都不会怎么办</p><p>计算机专业哪些课程必须学</p><p>哪些比赛才真的有用</p><p>计算机专业如何找实习</p><p>一些建议</p><h3 id="一、四年真的很长？"><a href="#一、四年真的很长？" class="headerlink" title="一、四年真的很长？"></a>一、四年真的很长？</h3><p>刚进校的时候，可能每个人都有这样那样的可能，将来可能读研，可能出国，可能…当老师问你，你毕业了想干嘛？那时的你，可以开足了马力展开想象。</p><p>但当你真的毕业时，当时的想象，可能还只是想象……</p><p>千万不要觉得大学四年很长，其实大三就要开始找实习了，你最多只有三年的学习时间，三年时间内你还有很多事要做。</p><p>如果以就业为导向，大四上学期的9月份开始校招。至此，大学基本划上句号，之前所有的努力，此刻就是试金石，所有的努力都会在此刻体现。从大一入学到大四校招，总共三年准备时间。</p><p>如果以考研为目标，大三上学期过完的12月份很多人就已经在开始准备初试，为了防止考研落榜，必然需要在大三上学期前把所找工作所需要的技能准备好，不然当考研考不上的时候，连个工作都找不到。你的时间会更短，只有两年半的准备时间。</p><p>我曾经写过一篇文章，详细讲述了，在校招时，非常有用的几个光环：名校光环、竞赛光环、项目光环、实习光环。</p><p>如果你想毕业时在众人中独占鳌头，实习经验不能少。所以，到了大三，你还要想办法去参加实习，这又将你的准备时间向前提了半年。</p><p>所以，整个大学生涯如果真的想不枉此行，最多只有两年半的时间给你学习。<br>当然，可能有些同学说，我什么也不会，校招时也能进大厂。我前面也说了，校招时有几个光环，如果你学校足够好，绩点也还行。校招时也会有人要。</p><p>但如果你把自己的一生都赌在学校光环上，如果校招不利，恐怕也只有培训才能救你。凡有所失，必有所得，凡有所得，必有所失。每个时代都会悄悄犒赏努力的人。</p><p>没有人生来就是主角，所有主角都是从龙套开始，一步一步脚印，才能把自己的路走出万丈光芒。</p><p>不少人在高中时候，尤其是高三的时候，会听老师说：高中是最辛苦的，辛苦了这阵，等考上了大学，想怎么玩就怎么玩！</p><p>这只是善意的谎言，不要当真。</p><p>但凡表面光鲜的人，背后都有不为人知的辛酸。加油吧，趁现在还不晚。</p><h3 id="二、大学的本质是什么？"><a href="#二、大学的本质是什么？" class="headerlink" title="二、大学的本质是什么？"></a>二、大学的本质是什么？</h3><p>你真的以为：</p><p>老师眼里的好学生，上课时的乖乖仔，门门考第一，毕业时就真的能找到好工作？</p><p>天天翘课的坏学生，毕业就一定不如你？</p><p>以找工作而言，讲究的实战能力，项目经验，能不能直接上手干活的能力。这些东西，学校里都是不会教的。</p><p>或许，你跟我有一样的疑惑：“上完大学，连写个软件都不教，那上大学有什么用？”</p><p>直到，我看到李开复对于大学本质的讨论，才豁然开朗：</p><p>记得我在哥伦比亚大学任助教时，曾有位中国学生的家长向我抱怨说：“你们大学里到底在教些什么？我孩子读完了大二计算机系，居然连VisiCalc都不会用。”</p><p>我当时回答道：“电脑的发展日新月异。我们不能保证大学里所教的任何一项技术在五年以后仍然管用，我们也不能保证学生可以学会每一种技术和工具。我们能保证的是，你的孩子将学会思考，并掌握学习的方法，这样，无论五年以后出现什么样的新技术或新工具，你的孩子都能游刃有余。”</p><p>她接着问：“学最新的软件不是教育，那教育的本质究竟是什么呢？”</p><p>我回答说：“如果我们将学过的东西忘得一干二净时，最后剩下来的东西就是教育的本质了。</p><p>我当时说的这句话来自教育家B. F. Skinner的名言。所谓“剩下来的东西”，其实就是自学的能力，也就是举一反三或无师自通的能力。大学不是“职业培训班”，而是一个让学生适应社会，适应不同工作岗位的平台。在大学期间，学习专业知识固然重要，但更重要的还是要学习独立思考的方法，培养举一反三的能力，只有这样，大学毕业生才能适应瞬息万变的未来世界。我认识的不少在中国读完大学来美国念研究生的朋友。他们认为来美国后，不论是学习，工作还是生活他们最缺乏的是独立思考的能力因为在国内时他们很少独立思考和独立决策。</p><p>我们都喜欢看武侠小说，但凡练武，都讲究内练心法、外练招式。内功足够强大，没有招式还是施展不出来。只有招式，没有内功支撑，则只是花架子，没有攻击力。但凡高手，都是内外兼修。</p><p>大家总是在讲科班与非科班的区别，区别大概就在于此。我在一篇文章中详细讲过初级的软件编程，只是熟悉工具的使用。这就是为什么培训机构能在短时间内培训出来的原因。有兴趣的可以看看，《启舰：如何系统地学习计算机编程？自学还是培训？怎么选？》。</p><p>所有语法、框架，说到底都只是工具。只要熟悉了工具的使用，就能够编出来软件。这就是武功里的招式。</p><p>而学校里教的内容，则是基本、核心，虽无招式，但是内功，受用一辈子的东西。而非科班出身的同学，这部分缺乏。</p><p>经过培训的同学可能会知道，虽然经过短期培训能很快入门，但基本知识匮乏的话，还是要慢慢补的。缺少的总是要还的，初级不重要，高级进阶就会用得到。</p><p>这里要说的是，要想学的好，核心专业课和自学编程，一样不能少！！！</p><h3 id="三、目标导向，以终为始，规划人生"><a href="#三、目标导向，以终为始，规划人生" class="headerlink" title="三、目标导向，以终为始，规划人生"></a>三、目标导向，以终为始，规划人生</h3><p>学校里不教如何写软件，不教如何做产品，不教如何做运营……要想跟工作匹配，是需要自已自学的。</p><p>这里教大家使用“以终为始”的思维方式来规划人生。</p><p>“以终为始”思维是一种反向思维方式。就是从最终的结果出发，反向分析过程或原因，寻找关键因素或对策，采取相应策略，从而达成结果或解决问题。</p><p>简单来讲，就是根据自己的目的，向前推，看自己需要学什么，给自己规划路径，在指定的时间段内完成，以在毕业时，达到目的。</p><h3 id="四、如何系统学习"><a href="#四、如何系统学习" class="headerlink" title="四、如何系统学习"></a>四、如何系统学习</h3><p>我推荐某些同学去培训时，又给咔咔咔亮出了几个帖子，说培训出来的受歧视啊、有些同学培训出来还是找不到工作啊，等等。</p><p>其实，选择自学还是培训是看自身情况而定，无论选择自学还是培训，都只是入门的一种手段，各有优劣势，本文就详细说说自学/培训怎么选，选择以后怎么办，记得帮我点赞哦。</p><p>目录：</p><p>自学还是培训，怎么选？<br>自学怎么学？<br>培训班到底在培训什么？<br>有些企业歧视培训班学员，培训班的问题到底出在哪？<br>一些建议</p><h4 id="一、自学还是培训，怎么选？"><a href="#一、自学还是培训，怎么选？" class="headerlink" title="一、自学还是培训，怎么选？"></a>一、自学还是培训，怎么选？</h4><p>无论你是什么学历、有没有计算机基础，这些都不是决定你适合自学的条件，具备如下三个条件的人都可以选择自学：</p><h5 id="（1）、时间充足"><a href="#（1）、时间充足" class="headerlink" title="（1）、时间充足"></a>（1）、时间充足</h5><p>如果说从零基础靠自学达到找工作的水平，需要多久呢？我觉得至少一年，有的人可能需要两年。所以，如果你是大一、大二、大三的学生，你还有时间，可以选择自学。如果你是已经工作的，想转行计算机，可以边工作边学习，这个过程会比较辛苦，但也不是绝对不可行。</p><p>对于大四的同学，以就业为导向，建议你去培训。不可否认，培训是最快入门的方式，对于时间不足的同学而言，培训是最优解。同样地，如果你是已工作的，不存在财务压力，我同样建议你去培训，工作后的时间很珍贵，比不上在校期间有大把时间可以浪费，如果做好了必转的决心，以最快速度转行才是最优解。</p><h5 id="（2）、自控力强"><a href="#（2）、自控力强" class="headerlink" title="（2）、自控力强"></a>（2）、自控力强</h5><p>能管得住自己，自己定的目标能想尽一切办法实现的同学，真不多，能占人群中1/4已经不错了。</p><p>有些人学了半小时就会累，休息一会，就成这样：</p><p>我见过太多的半途而废的同学，也见过太多自己安慰自己式的学习方式，但就业就是一个试金石，你这段时间的努力有没有回报，去找工作的时候，就水落石出。</p><h5 id="（3）、具备高中以上学历"><a href="#（3）、具备高中以上学历" class="headerlink" title="（3）、具备高中以上学历"></a>（3）、具备高中以上学历</h5><p>计算机本身是数学家发明的，或多或少会用到一些基本的数学知识、经常用到的很多算法都是数学知识的延伸，没有基本的数学功底，自学确实很难。</p><p>至于英语阅读能力还好说，只要会用有道词典，不会的去搜去看，总会读懂的，而且入门级的文献和视频中文版的资料已足够你入门，英语应该不是太大的问题。</p><p>如果你这三点都满足，恭喜你，你具有了自学的基础，可以选择自学。</p><h4 id="二、自学怎么学？"><a href="#二、自学怎么学？" class="headerlink" title="二、自学怎么学？"></a>二、自学怎么学？</h4><h5 id="1、选定一个方向"><a href="#1、选定一个方向" class="headerlink" title="1、选定一个方向"></a>1、选定一个方向</h5><p>首先，我们选择方向的目的是什么？不就是为了找份工作吗？那直接到招聘类网站去搜下相关的岗位数量及要求不就好了，哪个数量多，自己也喜欢，那就选这个即可。</p><p>其次，如果是大三、大四即将毕业的同学，想知道最近哪个岗位好找工作的话。还可以看看很多培训机构的培训内容，现在很多培训机构都声称保就业，真的以为，培训几个月能培训出朵花来吗？不可能的，编程是个需要长期训练的活，几个月的培训，仅是入门而已，入门的水平能保证找份工作，就靠的是这个岗位门槛低，需求大，好找工作。</p><p>如果实在不知道选什么，我帮你找几个方向：python、java后端、Html5就业岗位都挺多，就业门槛低，相对好就业，如果也有其它方向推荐，大家可以留言。</p><h5 id="2、找到几套视频教材"><a href="#2、找到几套视频教材" class="headerlink" title="2、找到几套视频教材"></a>2、找到几套视频教材</h5><p>在入门时强烈不建议跟着书学</p><p>第一，不一定能看得懂</p><p>第二，书本的知识不成体系，入门有入门的书，进阶有进阶的书，实战有实战的书，需要自己去选择，本身就不是一件易事。</p><p>第三，视频可以看到老师的操作，而书本全靠自己摸</p><p>现在某某培训班的入门、进阶、实战的系列视频不要太好找，找到这么两套视频，对比着看，或者跟着一套视频深入看，来得更容易。人家培训班安排好的路线跟着学，不懂的自己搜，就已经排除了自已给自己安排路线的难点，况且人家本身就是面向就业的，培训出来的同学能保就业，只要你能跟着学通学会，自然找到工作也不是问题。</p><h5 id="3、自学，除了知识，你还能学到什么？"><a href="#3、自学，除了知识，你还能学到什么？" class="headerlink" title="3、自学，除了知识，你还能学到什么？"></a>3、自学，除了知识，你还能学到什么？</h5><p>自学的缺点很明显：</p><p>第一：速度慢，所有进度完全靠自己把控，没有氛围</p><p>第二：遇到问题需要自己解决，无人请教</p><p>那优点恰恰是从这些缺点中磨练出来的，进度靠自己把握，完全磨练了你的意志力。而所有问题靠自己解决，恰恰培养了你的解决问题的能力。</p><p>而这些能力都是培训班教不出来的、无法速成的。而这些能力却是真正的开发高手所必备的</p><p>问题定义、分析与设计阶段，这是最需要智商、创造力和经验的阶段，真正的开发高手，就是在这一阶段体现出远超普通人的水平，而在这一阶段所需要的能力，对不起，培训班教不出来，也无法速成，只能靠人自己的努力，慢慢地培养和增强。</p><h5 id="4、自学建议"><a href="#4、自学建议" class="headerlink" title="4、自学建议"></a>4、自学建议</h5><p>（1）、多做笔记、多复习</p><p>刚开始学习时，很难，真的很难。很多东西听不懂，很多东西需要自己搜，自己定的进度很可能完不成。</p><p>没关系，坚持下去，都是这么过来的。我刚开始自学的时候，也是无数次想死的冲动……</p><p>学会做笔记，把自己学到的东西及时记下来，形成目录，在后面用到的时候，根据笔记再去看一遍，刚开始经常会出现，听得懂，跟着学会，自己弄就不会的现象。这都是正常的，技术本就是个熟能生巧的过程。</p><p>多动手，多总结，就慢慢熟练了。</p><p>（2）、多写代码！听得懂、看得懂，并没什么用</p><p>入门级知识，本就是语法和框架的熟悉过程，说到底就是工具的使用方法熟悉的过程。既然是工具，那就必然要多用。熟能生巧，指的是用的熟。很多同学看的懂，听的会，自己一下手就问题百出，就是练的少！</p><p>（3）、听不懂，搜一下，再不懂就放过</p><p>刚学的时候很多概念听不懂，没关系，自己搜一下，能理解了就理解，理解不了就算。听一遍就行，学到后面的时候，你就懂些了回头，再看看那些知识，基本上你都懂了。</p><p>（4）、多写注释</p><p>刚开始的时候，很多逻辑弄不懂，没关系，自己把代码拆解，并对其加以注释，这样，你在反过来再看这些代码时，能很快弄懂它的逻辑。你要知道，你后面学习时还是会碰到这些知识的，而在只看一遍的情况下是不可能记得住的，到时候，你还是会返回来复习这些知识的。</p><p>增加注释，看起来浪费时间，其实是整理代码逻辑的过程。浑浑噩噩敲出来的代码，自己都不明白什么意思的话，其实相当于没有真正学会。</p><h4 id="三、培训班到底在培训什么？"><a href="#三、培训班到底在培训什么？" class="headerlink" title="三、培训班到底在培训什么？"></a>三、培训班到底在培训什么？</h4><p>去培训的主要原因，说到底还是因为自己啥都不会。但不会与不会间是有区别的。</p><p>对于科班出身的，上学又好好学了的同学，虽然他们没有系统的编程知识，没有项目经验，但他们有计算机基础，他懂得操作系统原理、数据结构与算法等原理性知识。</p><p>而对于跨专业和在玩了四年的同学而言，那才是真正的零基础。</p><p>而对于培训机构而言，它的责任就是让你实现从0到1的入门过程，而有经验的老鸟都知道，编程入门仅仅是知识的堆积，并没有什么技巧性可言。所有的语法和框架运用，简单来说，就是学会编程套路，学习工具使用。</p><p>而培训机构的责任，就是把这些套路教给你。只要你不太笨，经过几个月的强化训练，大部分人都能学得会。</p><p>所以，培训班教你的就是工具的使用，目的，就是以最快的速度塞给你，助你找到工作。</p><p>四、有些企业歧视培训班学员，培训班的问题到底出在哪？<br>培训机构有着熟练的授课体系，老师手把手答疑，让你在学习路上没有一丁点的思考时间，为的就是以最快的速度让你达标，好结课，开始下一波培训。</p><h5 id="1、问题就出在速度上。"><a href="#1、问题就出在速度上。" class="headerlink" title="1、问题就出在速度上。"></a>1、问题就出在速度上。</h5><p>认知科学的研究成果表明，知识的消化与吸收，职业技能的学习与精通，本质上是在大脑神经元之间建立连接，重塑大脑结构的过程，这个过程的时间可以缩短，但不能无限地缩短。另外，不同的人，拥有不同的背景和基础，在学习与掌握相同的知识与职业技能时，所花的时间是不一样的。</p><p>而培训机构才不管这些，他的目的就是挣钱，以最快的速度挣钱，能在三天内把所有内容塞给你绝不用四天，只要最终能糊弄住面试官，让学员找到一份工作就可以了。</p><p>所以，必然会出现下面的现象：</p><p>对于原来有一些基础的，学习能力较强的同学，在学习之前已经有较扎实的基础，所以在培训期间能够自己构建成技术体系，知识吸收相对较好</p><h5 id="2、培训后遗症"><a href="#2、培训后遗症" class="headerlink" title="2、培训后遗症"></a>2、培训后遗症</h5><p>对于软件开发而言，所有的软件开发都大致分为两个阶段：</p><p>1、分析、定义、设计阶段。这个阶段是需要有解决问题、分析问题的能力。而这个能力培训班培训不出来，只能是慢慢增强。</p><p>2、语法、工具的使用，将设计的内容实现出来。这一块就比较机械了，工具嘛，学一学都能会，培训班在这一块的效率是很高效的，它们多半能在较短的时间内，教会学员特定编程语言（比如Python）特定工具（比如Git）与特定技术的使用（比如Spring MVC），并且传授给他们一些开发的“套路”（比如分层架构与设计模式），从而将学员成功地培养成为一个能够“搬砖”的软件工人，即初级程序员。</p><p>培训班一般都会选择门槛低、就业岗位多的方向进行培训，对于这类岗位，人才缺口大，只要能直接上手写代码的初级程序员，都很容易找到一份工作。这也就是为什么培训班多半会收学生五位数的学费，而学生也愿意支付的根本原因。</p><p>（1）、解决问题能力差，动不动就得人教</p><p>经过几个月饭来张口、衣来伸手的填鸭式集训，有些人在工作后，却依然认为，当他遇到问题时，从来不想着自己搜搜资料解决，而是依赖同事帮他答疑！</p><p>自学能力差、解决问题能力差，是很多人找到了工作，过不了试用期的根本原因。</p><p>（2）、培训效果立竿见影，却又很快遗忘</p><p>任何的知识都是一样，短时间内填鸭式学到的知识，在一段时间不用后，就会遗忘。这就是有些同学刚从培训班出来时，能找到份工作，当学到的东西在工作中几个月用不到时，就很快忘记，总觉得自己还是啥都不会的原因。</p><p>永远要记住：学历不行靠实力，实力不行靠态度！！！<br>当我们初入职场，尽心尽责地把自己的工作做完做好的同时，千万不要忘记像海绵一样，以最快的速度给自己充水。</p><p>像培训完的同学，在校期间已经做了很多的笔记，工作之余，多复习，重新练，利用时间将它理解，真正内化为自己的本领。</p><p>对于自学的同学，多找进阶性书籍和视频去看，以最快的速度提升自己。</p><h4 id="五、一些建议"><a href="#五、一些建议" class="headerlink" title="五、一些建议"></a>五、一些建议</h4><h5 id="1、非科班同学建议"><a href="#1、非科班同学建议" class="headerlink" title="1、非科班同学建议"></a>1、非科班同学建议</h5><p>对于非科班转行计算机的同学，有太多的知识需要补足，如果你靠的是自学，需要强有力的自律能力，只要时间还够，是可以靠自学的，在跟着视频学的时候，哪里听不懂及时去搜相关的资料去补足。</p><p>刚开始自学时，即便是科班出身也是有想死的冲动的，大家都一样。我也是靠自学过来的，很多的东西不会，很多的东西听不懂。没关系，多做笔试，多搜资料，把不会的弄会，你会发现，学习起来越来越容易。</p><p>所有的困难只不过是纸老虎，坚持过去就成功了。</p><p>如果你是通过培训找到了一份工作，你需要比别人更努力补充计算机知识，基础知识的缺乏，会使你很难在这条路上走很远，所有的大神，都是自学能力很强的人，你想，你也可以。</p><h5 id="2、所有开发方向都必须从C-开始？"><a href="#2、所有开发方向都必须从C-开始？" class="headerlink" title="2、所有开发方向都必须从C++开始？"></a>2、所有开发方向都必须从C++开始？</h5><p>经常会有要校生问我：我要做H5开发，是不是要先学C++?</p><p>其实，各个语言之间是没有任何关联的，完全都是有各自的语法体系和开发工具的，简单来讲，他们都是不同类型的工具。</p><p>你学会一种工具，只会对另一种类似的工具更容易上手，而不是完全不用学。所以，想学哪个方向，直接去学就行了，没必须先从C++入手迂回一下，纯属浪费时间。</p><p>但，如果你还在上学，现在正在学C++，那我还是建议你好好学，必须C语言语法更接近低层编译器原理，学会了它，对理解低层分配、释放、编译机制都是很有用的，但就以工作为导向而言，如果你不从事C++相关工作，是没必要学的。</p><h3 id="五、一些建议-1"><a href="#五、一些建议-1" class="headerlink" title="五、一些建议"></a>五、一些建议</h3><p>1、花若盛开，蝴蝶自来<br>有些同学，找不到实习，有些同学，培训以后还是找不到工作，为什么？</p><p>要学会审视自己，不要被培训机构的宣传语骗了。找工作最终靠的是自己，而不是培训机构。</p><p>培训机构的口号，真可谓，人有多大胆，口号就有多不要脸：</p><p>“0基础入学，三个月包就业”</p><p>“毕业月入不过万，不收学费”</p><p>“从前是你找工作，接下来是工作找你”</p><p>认清自己的现状，补足短板，才是当务之急。有了技术，工作自然就来了。花若盛开，蝴蝶自来，就是这个道理。</p><p>2、所有的迷茫都是因为未知，所有的畏惧都是因为不够用强大<br>我经常会遇到一些同学还没毕业，就问我计算机行业是不是真的是青春饭啊，我学这个专业，以后会不会过的很悲惨啊。</p><p>我能怎么说，计算机行业确实是青春饭，我在一篇文章中详细论述了这个观点：启舰：在中国程序员是青春饭吗？</p><p>但你见哪个程序员饿死了？在上面的文章中我也详细论述了，程序员在35岁后的不同出路。</p><p>所有的迷茫都是因为未知，所有的畏惧都是因为不够用强大。与其患得患失，不如走好脚下。</p><p>3、谈场恋爱、考个驾照<br>大学生活是丰富多彩的，也应该是丰富多彩的。前面我们虽然说要学的东西多、时间紧。但也不是需要你天天泡在宿舍，一个入门视频，看一年还看不完了？</p><p>业余时间多的是，不要老泡在宿舍打游戏，参加些社团，参加些活动，青春本就是五彩斑斓,本应有“恰同学少年，风华正茂；书生意气，挥斥方遒”的豪迈，也应有你侬我侬的风花雪月。</p><p>吃饭睡觉玩手机，年纪青青却过着老年人的生活，不应是年青人该有的生活态度，放荡不羁、无知无畏，方可成大事。</p><p>驾照总是要有的，毕业后，真的很少有时间去考驾照。趁在学校，抓紧考了吧。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo文档</title>
      <link href="/2021/10/29/hexo-docs/"/>
      <url>/2021/10/29/hexo-docs/</url>
      
        <content type="html"><![CDATA[<h2 id="利用hexo搭建博客"><a href="#利用hexo搭建博客" class="headerlink" title="利用hexo搭建博客"></a>利用hexo搭建博客</h2><p>首先安装npm和git</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对于熟悉 npm 的进阶用户，可以仅局部安装 <code>hexo</code> 包。</p><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在一个地方创建空文件夹（命名blog），所有东西将在里面生成。</p><p>打开文件夹，在此文件夹下运行git bash（右键单击空白处）</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">sudo hexo init #生成博客 初始化博客<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时候系统会自动克隆文件到blog，并默认landscape主题。再输入命令：</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo s#启动本地博客服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="部署到gitee"><a href="#部署到gitee" class="headerlink" title="部署到gitee"></a>部署到gitee</h2><p>输入命令：</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo clean #清理hexo g #生成hexo s  #启动本地服务器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h2><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo n &quot;我的第一篇文章&quot; #创建新的文章 hexo d     # 部署到仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="如何消除首页的颜色变化蒙版效果"><a href="#如何消除首页的颜色变化蒙版效果" class="headerlink" title="如何消除首页的颜色变化蒙版效果"></a>如何消除首页的颜色变化蒙版效果</h2><p>打开themes文件夹→matery→source→css→matery.css，找到这么一大段代码，注释其中的代码。</p><pre class="line-numbers language-none"><code class="language-none">@-webkit-keyframes rainbow &#123;    &#x2F;*注释内容*&#x2F;&#125;@keyframes rainbow &#123;    &#x2F;*注释内容*&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Hexo文章中如何插入图片"><a href="#Hexo文章中如何插入图片" class="headerlink" title="Hexo文章中如何插入图片"></a>Hexo文章中如何插入图片</h1><p>在hexo中发表文章时发现自己的图片无法显示，这是因为hexo在解析你的文章时找不到你的图片路径，下面说一下如何配置文章中的图片路径</p><p><strong>打开在hexo根目录下的 <code>_config.yml</code> 配置文件，找到 <code>post_asset_folder</code> 属性，默认为 <code>false</code> 改为 <code>true</code></strong></p><p>在hexo根目录下执行如下命令</p><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">cnpm install hexo-asset-image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时再执行命令 <code>hexo n article_name</code> 创建新的文章，在 <code>source/_posts</code> 中会生成文章 <code>post_name.md</code> 和同名文件夹 <code>post_name</code>,<strong>我们将文章中所使用到的将图片资源均放在 <code>post_name</code> 中</strong>，这时就可以在文章中使用相对路径引用图片资源了<br> <code>[img_name](img_name.jpg) #文章中的图片资源路径格式</code></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>您可以在 <code>_config.yml</code> 中修改大部分的配置。</p><h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支持多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td></tr></tbody></table><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址, 必须以 <code>http://</code> 或 <code>https://</code> 开头</td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"><code>url&#39;s pathname</code></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>pretty_urls.trailing_html</code></td><td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td><td align="left"><code>true</code></td></tr></tbody></table><blockquote><p>网站存放在子目录</p><p>如果您的网站存放在子目录中，例如 <code>http://example.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://example.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code>。</p></blockquote><p>例如：</p><pre class="line-numbers language-none"><code class="language-none"># 比如，一个页面的永久链接是 http:&#x2F;&#x2F;example.com&#x2F;foo&#x2F;bar&#x2F;index.htmlpretty_urls:  trailing_index: false# 此时页面的永久链接会变为 http:&#x2F;&#x2F;example.com&#x2F;foo&#x2F;bar&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>source_dir</code></td><td align="left">资源文件夹，这个文件夹用来存放内容。</td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>public_dir</code></td><td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td><td align="left"><code>public</code></td></tr><tr><td align="left"><code>tag_dir</code></td><td align="left">标签文件夹</td><td align="left"><code>tags</code></td></tr><tr><td align="left"><code>archive_dir</code></td><td align="left">归档文件夹</td><td align="left"><code>archives</code></td></tr><tr><td align="left"><code>category_dir</code></td><td align="left">分类文件夹</td><td align="left"><code>categories</code></td></tr><tr><td align="left"><code>code_dir</code></td><td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td><td align="left"><code>downloads/code</code></td></tr><tr><td align="left"><code>i18n_dir</code></td><td align="left">国际化（i18n）文件夹</td><td align="left"><code>:lang</code></td></tr><tr><td align="left"><code>skip_render</code></td><td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 <code>public</code> 目录中。您可使用 <a href="https://github.com/micromatch/micromatch#extended-globbing">glob 表达式</a>来匹配路径。</td><td align="left"></td></tr></tbody></table><p>例如：</p><pre class="line-numbers language-none"><code class="language-none">skip_render: &quot;mypage&#x2F;**&#x2F;*&quot;# 将会直接将 &#96;source&#x2F;mypage&#x2F;index.html&#96; 和 &#96;source&#x2F;mypage&#x2F;code.js&#96; 不做改动地输出到 &#39;public&#39; 目录# 你也可以用这种方法来跳过对指定文章文件的渲染skip_render: &quot;_posts&#x2F;test-post.md&quot;# 这将会忽略对 &#39;test-post.md&#39; 的渲染<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>提示</p><p>如果您刚刚开始接触 Hexo，通常没有必要修改这一部分的值。</p></blockquote><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>new_post_name</code></td><td align="left">新文章的文件名称</td><td align="left">:title.md</td></tr><tr><td align="left"><code>default_layout</code></td><td align="left">预设布局</td><td align="left">post</td></tr><tr><td align="left"><code>auto_spacing</code></td><td align="left">在中文和英文之间加入空格</td><td align="left">false</td></tr><tr><td align="left"><code>titlecase</code></td><td align="left">把标题转换为 title case</td><td align="left">false</td></tr><tr><td align="left"><code>external_link</code></td><td align="left">在新标签中打开链接</td><td align="left">true</td></tr><tr><td align="left"><code>external_link.enable</code></td><td align="left">在新标签中打开链接</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>external_link.field</code></td><td align="left">对整个网站（<code>site</code>）生效或仅对文章（<code>post</code>）生效</td><td align="left"><code>site</code></td></tr><tr><td align="left"><code>external_link.exclude</code></td><td align="left">需要排除的域名。主域名和子域名如 <code>www</code> 需分别配置</td><td align="left"><code>[]</code></td></tr><tr><td align="left"><code>filename_case</code></td><td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td><td align="left">0</td></tr><tr><td align="left"><code>render_drafts</code></td><td align="left">显示草稿</td><td align="left">false</td></tr><tr><td align="left"><code>post_asset_folder</code></td><td align="left">启动 <a href="https://hexo.io/zh-cn/docs/asset-folders">Asset 文件夹</a></td><td align="left">false</td></tr><tr><td align="left"><code>relative_link</code></td><td align="left">把链接改为与根目录的相对位址</td><td align="left">false</td></tr><tr><td align="left"><code>future</code></td><td align="left">显示未来的文章</td><td align="left">true</td></tr><tr><td align="left"><code>highlight</code></td><td align="left">代码块的设置, 请参考 <a href="https://hexo.io/docs/syntax-highlight#Highlight-js">Highlight.js</a> 进行设置</td><td align="left"></td></tr><tr><td align="left"><code>prismjs</code></td><td align="left">代码块的设置, 请参考 <a href="https://hexo.io/docs/syntax-highlight#PrismJS">PrismJS</a> 进行设置</td><td align="left"></td></tr></tbody></table><blockquote><p>相对地址</p><p>默认情况下，Hexo 生成的超链接都是绝对地址。例如，如果您的网站域名为 <code>example.com</code>,您有一篇文章名为 <code>hello</code>，那么绝对链接可能像这样：<code>http://example.com/hello.html</code>，它是<strong>绝对</strong>于域名的。相对链接像这样：<code>/hello.html</code>，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p></blockquote><h2 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>default_category</code></td><td align="left">默认分类</td><td align="left"><code>uncategorized</code></td></tr><tr><td align="left"><code>category_map</code></td><td align="left">分类别名</td><td align="left"></td></tr><tr><td align="left"><code>tag_map</code></td><td align="left">标签别名</td><td align="left"></td></tr></tbody></table><h2 id="日期-时间格式"><a href="#日期-时间格式" class="headerlink" title="日期 / 时间格式"></a>日期 / 时间格式</h2><p>Hexo 使用 <a href="http://momentjs.com/">Moment.js</a> 来解析和显示时间。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>date_format</code></td><td align="left">日期格式</td><td align="left"><code>YYYY-MM-DD</code></td></tr><tr><td align="left"><code>time_format</code></td><td align="left">时间格式</td><td align="left"><code>HH:mm:ss</code></td></tr><tr><td align="left"><code>updated_option</code></td><td align="left">当 Front Matter 中没有指定 <a href="https://hexo.io/zh-cn/docs/variables#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F"><code>updated</code></a> 时 <code>updated</code> 的取值</td><td align="left"><code>mtime</code></td></tr></tbody></table><blockquote><p>updated_option</p><p><code>updated_option</code> 控制了当 Front Matter 中没有指定 <code>updated</code> 时，<code>updated</code> 如何取值：</p><ul><li><code>mtime</code>: 使用文件的最后修改时间。这是从 Hexo 3.0.0 开始的默认行为。</li><li><code>date</code>: 使用 <code>date</code> 作为 <code>updated</code> 的值。可被用于 Git 工作流之中，因为使用 Git 管理站点时，文件的最后修改日期常常会发生改变</li><li><code>empty</code>: 直接删除 <code>updated</code>。使用这一选项可能会导致大部分主题和插件无法正常工作。</li></ul><p><code>use_date_for_updated</code> 选项已经被废弃，将会在下个重大版本发布时去除。请改为使用 <code>updated_option: &#39;date&#39;</code>。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">use_date_for_updated&#96; | 启用以后，如果 Front Matter 中没有指定 &#96;updated&#96;， [&#96;post.updated&#96;](https:&#x2F;&#x2F;hexo.io&#x2F;zh-cn&#x2F;docs&#x2F;configuration) 将会使用 &#96;date&#96; 的值而不是文件的创建时间。在 Git 工作流中这个选项会很有用 | &#96;true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>per_page</code></td><td align="left">每页显示的文章量 (0 = 关闭分页功能)</td><td align="left"><code>10</code></td></tr><tr><td align="left"><code>pagination_dir</code></td><td align="left">分页目录</td><td align="left"><code>page</code></td></tr></tbody></table><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>theme</code></td><td align="left">当前主题名称。值为<code>false</code>时禁用主题</td></tr><tr><td align="left"><code>theme_config</code></td><td align="left">主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置</td></tr><tr><td align="left"><code>deploy</code></td><td align="left">部署部分的设置</td></tr><tr><td align="left"><code>meta_generator</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#%E5%B1%9E%E6%80%A7">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签</td></tr></tbody></table><h3 id="包括或不包括目录和文件"><a href="#包括或不包括目录和文件" class="headerlink" title="包括或不包括目录和文件"></a>包括或不包括目录和文件</h3><p>在 Hexo 配置文件中，通过设置 include/exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用 <a href="https://github.com/isaacs/minimatch">glob 表达式</a> 对目录和文件进行匹配。</p><p><code>include</code> and <code>exclude</code> options only apply to the <code>source/</code> folder, whereas <code>ignore</code> option applies to all folders.</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>include</code></td><td align="left">Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 <code>.</code> 开头的文件和文件夹，Hexo 的 <code>_posts</code> 和 <code>_data</code> 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 <code>source</code> 目录下。</td></tr><tr><td align="left"><code>exclude</code></td><td align="left">Hexo 会忽略这些文件和目录</td></tr><tr><td align="left"><code>ignore</code></td><td align="left">Ignore files/folders</td></tr></tbody></table><p>举例：</p><pre class="line-numbers language-none"><code class="language-none"># Include&#x2F;Exclude Files&#x2F;Foldersinclude:  - &quot;.nojekyll&quot;  # 包括 &#39;source&#x2F;css&#x2F;_typing.css&#39;  - &quot;css&#x2F;_typing.css&quot;  # 包括 &#39;source&#x2F;_css&#x2F;&#39; 中的任何文件，但不包括子目录及其其中的文件。  - &quot;_css&#x2F;*&quot;  # 包含 &#39;source&#x2F;_css&#x2F;&#39; 中的任何文件和子目录下的任何文件  - &quot;_css&#x2F;**&#x2F;*&quot;exclude:  # 不包括 &#39;source&#x2F;js&#x2F;test.js&#39;  - &quot;js&#x2F;test.js&quot;  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 中的文件、但包括子目录下的所有目录和文件  - &quot;js&#x2F;*&quot;  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 中的文件和子目录下的任何文件  - &quot;js&#x2F;**&#x2F;*&quot;  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 目录下的所有文件名以 &#39;test&#39; 开头的文件，但包括其它文件和子目录下的单文件  - &quot;js&#x2F;test*&quot;  # 不包括 &#39;source&#x2F;js&#x2F;&#39; 及其子目录中任何以 &#39;test&#39; 开头的文件  - &quot;js&#x2F;**&#x2F;test*&quot;  # 不要用 exclude 来忽略 &#39;source&#x2F;_posts&#x2F;&#39; 中的文件。你应该使用 &#39;skip_render&#39;，或者在要忽略的文件的文件名之前加一个下划线 &#39;_&#39;  # 在这里配置一个 - &quot;_posts&#x2F;hello-world.md&quot; 是没有用的。ignore:  # Ignore any folder named &#39;foo&#39;.  - &quot;**&#x2F;foo&quot;  # Ignore &#39;foo&#39; folder in &#39;themes&#x2F;&#39; only.  - &quot;**&#x2F;themes&#x2F;*&#x2F;foo&quot;  # Same as above, but applies to every subfolders of &#39;themes&#x2F;&#39;.  - &quot;**&#x2F;themes&#x2F;**&#x2F;foo&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>列表中的每一项都必须用单引号或双引号包裹起来。</p><p><code>include</code> 和 <code>exclude</code> 并不适用于 <code>themes/</code> 目录下的文件。如果需要忽略 <code>themes/</code> 目录下的部分文件或文件夹，可以使用 <code>ignore</code> 或在文件名之前添加下划线 <code>_</code>。</p><h3 id="使用代替配置文件"><a href="#使用代替配置文件" class="headerlink" title="使用代替配置文件"></a>使用代替配置文件</h3><p>可以在 hexo-cli 中使用 <code>--config</code> 参数来指定自定义配置文件的路径。你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><pre class="line-numbers language-none"><code class="language-none"># use &#39;custom.yml&#39; in place of &#39;_config.yml&#39;$ hexo server --config custom.yml# use &#39;custom.yml&#39; &amp; &#39;custom2.json&#39;, prioritizing &#39;custom3.yml&#39;, then &#39;custom2.json&#39;$ hexo generate --config custom.yml,custom2.json,custom3.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><p>例如，使用 <code>--options</code> 指定了两个自定义配置文件：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo generate --config custom.yml,custom2.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果 <code>custom.yml</code> 中指定了 <code>foo: bar</code>，在 custom2.json 中指定了 <code>&quot;foo&quot;: &quot;dinosaur&quot;</code>，那么在 <code>_multiconfig.yml</code> 中你会得到 <code>foo: dinosaur</code>。</p><h3 id="使用代替主题配置文件"><a href="#使用代替主题配置文件" class="headerlink" title="使用代替主题配置文件"></a>使用代替主题配置文件</h3><p>通常情况下，Hexo 主题是一个独立的项目，并拥有一个独立的 <code>_config.yml</code> 配置文件。</p><p>除了自行维护独立的主题配置文件，你也可以在其它地方对主题进行配置。</p><p><strong>配置文件中的 <code>theme_config</code></strong></p><blockquote><p>该特性自 Hexo 2.8.2 起提供</p></blockquote><pre class="line-numbers language-none"><code class="language-none"># _config.ymltheme: &quot;my-theme&quot;theme_config:  bio: &quot;My awesome bio&quot;  foo:    bar: &#39;a&#39;# themes&#x2F;my-theme&#x2F;_config.ymlbio: &quot;Some generic bio&quot;logo: &quot;a-cool-image.png&quot;  foo:    baz: &#39;b&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终主题配置的输出是：</p><pre class="line-numbers language-none"><code class="language-none">&#123;  bio: &quot;My awesome bio&quot;,  logo: &quot;a-cool-image.png&quot;,  foo: &#123;    bar: &quot;a&quot;,    baz: &quot;b&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>独立的 <code>_config.[theme].yml</code> 文件</strong></p><blockquote><p>该特性自 Hexo 5.0.0 起提供</p></blockquote><p>独立的主题配置文件应放置于站点根目录下，支持 <code>yml</code> 或 <code>json</code> 格式。需要配置站点 <code>_config.yml</code> 文件中的 <code>theme</code> 以供 Hexo 寻找 <code>_config.[theme].yml</code> 文件。</p><pre class="line-numbers language-none"><code class="language-none"># _config.ymltheme: &quot;my-theme&quot;# _config.my-theme.ymlbio: &quot;My awesome bio&quot;foo:  bar: &#39;a&#39;# themes&#x2F;my-theme&#x2F;_config.ymlbio: &quot;Some generic bio&quot;logo: &quot;a-cool-image.png&quot;  foo:    baz: &#39;b&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终主题配置的输出是：</p><pre class="line-numbers language-none"><code class="language-none">&#123;  bio: &quot;My awesome bio&quot;,  logo: &quot;a-cool-image.png&quot;,  foo: &#123;    bar: &quot;a&quot;,    baz: &quot;b&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们强烈建议你将所有的主题配置集中在一处。如果你不得不在多处配置你的主题，那么这些信息对你将会非常有用：Hexo 在合并主题配置时，Hexo 配置文件中的 <code>theme_config</code> 的优先级最高，其次是 <code>_config.[theme].yml</code> 文件，最后是位于主题目录下的 <code>_config.yml</code> 文件。</p></blockquote><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo init [folder]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><p>本命令相当于执行了以下几步：</p><ol><li>Git clone <a href="https://github.com/hexojs/hexo-starter">hexo-starter</a> 和 <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> 主题到当前目录或指定目录。</li><li>使用 <a href="https://classic.yarnpkg.com/lang/en/">Yarn 1</a>、<a href="https://pnpm.js.org/">pnpm</a> 或 <a href="https://docs.npmjs.com/cli/install">npm</a> 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 <a href="https://hexo.io/docs/#Install-Node-js">Node.js</a> 安装。</li></ol><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo new [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;post title with whitespace&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--path</code></td><td align="left">自定义新文章的路径</td></tr><tr><td align="left"><code>-r</code>, <code>--replace</code></td><td align="left">如果存在同名文章，将其替换</td></tr><tr><td align="left"><code>-s</code>, <code>--slug</code></td><td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page --path about&#x2F;me &quot;About me&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p><p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page --path about&#x2F;me<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成静态文件。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-d</code>, <code>--deploy</code></td><td align="left">文件生成后立即部署网站</td></tr><tr><td align="left"><code>-w</code>, <code>--watch</code></td><td align="left">监视文件变动</td></tr><tr><td align="left"><code>-b</code>, <code>--bail</code></td><td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="left"><code>-f</code>, <code>--force</code></td><td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td align="left"><code>-c</code>, <code>--concurrency</code></td><td align="left">最大同时生成文件的数量，默认无限制</td></tr></tbody></table><p>该命令可以简写为</p><pre class="line-numbers language-none"><code class="language-none">$ hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo publish [layout] &lt;filename&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发表草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--port</code></td><td align="left">重设端口</td></tr><tr><td align="left"><code>-s</code>, <code>--static</code></td><td align="left">只使用静态文件</td></tr><tr><td align="left"><code>-l</code>, <code>--log</code></td><td align="left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署网站。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-g</code>, <code>--generate</code></td><td align="left">部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo render &lt;file1&gt; [file2] ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染文件。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-o</code>, <code>--output</code></td><td align="left">设置输出路径</td></tr></tbody></table><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo migrate &lt;type&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo list &lt;type&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>列出网站资料。</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><pre class="line-numbers language-none"><code class="language-none">$ hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示 Hexo 版本。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><pre class="line-numbers language-none"><code class="language-none">$ hexo --safe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><pre class="line-numbers language-none"><code class="language-none">$ hexo --debug<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new">提交调试信息到 GitHub</a>。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><pre class="line-numbers language-none"><code class="language-none">$ hexo --silent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><pre class="line-numbers language-none"><code class="language-none"># 使用 custom.yml 代替默认的 _config.yml$ hexo server --config custom.yml# 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高$ hexo generate --config custom.yml,custom2.json,custom3.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><pre class="line-numbers language-none"><code class="language-none"># 使用 custom.yml 代替默认的 _config.yml$ hexo server --config custom.yml# 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json$ hexo generate --config custom.yml,custom2.json,custom3.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><pre class="line-numbers language-none"><code class="language-none">$ hexo --draft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><pre class="line-numbers language-none"><code class="language-none">$ hexo --cwd &#x2F;path&#x2F;to&#x2F;cwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>自定义当前工作目录（Current working directory）的路径。</p><h1 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h1><h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><p>首先，安装 <code>hexo-migrator-rss</code> 插件。</p><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-migrator-rss --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>插件安装完成后，执行下列命令，从 RSS 迁移所有文章。<code>source</code> 可以是文件路径或网址。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo migrate rss &lt;source&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h2><p>把 <code>_posts</code> 文件夹内的所有文件复制到 <code>source/_posts</code> 文件夹，并在 <code>_config.yml</code> 中修改 <code>new_post_name</code> 参数。</p><pre class="line-numbers language-none"><code class="language-none">new_post_name: :year-:month-:day-:title.md<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Octopress"><a href="#Octopress" class="headerlink" title="Octopress"></a>Octopress</h2><p>把 Octopress <code>source/_posts</code> 文件夹内的所有文件转移到 Hexo 的 <code>source/_posts</code> 文件夹，并修改 <code>_config.yml</code> 中的 <code>new_post_name</code> 参数。</p><pre class="line-numbers language-none"><code class="language-none">new_post_name: :year-:month-:day-:title.md<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>首先，安装 <code>hexo-migrator-wordpress</code> 插件。</p><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-migrator-wordpress --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 WordPress 仪表盘中导出数据(“Tools” → “Export” → “WordPress”)（详情参考<a href="https://wordpress.com/zh-cn/support/export/">WP支持页面</a>）。</p><p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo migrate wordpress &lt;source&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意</p><p>这个插件并不能完美地实现WordPress-&gt;Hexo的数据转换，尤其是在处理WordPress的分类方面存在问题（见<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter中的分类与标签</a>）。因此，建议您在迁移完成后，手工审阅所有生成的markdown文件，检查其中是否有错误。对于文章数量较大的WordPress站点，这项工作可能要花很长的时间。</p></blockquote><h2 id="Joomla"><a href="#Joomla" class="headerlink" title="Joomla"></a>Joomla</h2><p>首先，安装 <code>hexo-migrator-joomla</code> 插件。</p><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-migrator-joomla --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用 <a href="http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ==">J2XML</a> 组件导出 Joomla 文章。<br>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 Joomla 导出的文件路径或网址。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo migrate joomla &lt;source&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><blockquote><p>Disabling layout</p><p>If you don’t want an article (post/page) to be processed with a theme, set <code>layout: false</code> in its front-matter. Refer to <a href="https://hexo.io/zh-cn/docs/front-matter#%E5%B8%83%E5%B1%80">this section</a> for more details.</p></blockquote><h3 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h3><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>:title</code></td><td align="left">标题（小写，空格将会被替换为短杠）</td></tr><tr><td align="left"><code>:year</code></td><td align="left">建立的年份，比如， <code>2015</code></td></tr><tr><td align="left"><code>:month</code></td><td align="left">建立的月份（有前导零），比如， <code>04</code></td></tr><tr><td align="left"><code>:i_month</code></td><td align="left">建立的月份（无前导零），比如， <code>4</code></td></tr><tr><td align="left"><code>:day</code></td><td align="left">建立的日期（有前导零），比如， <code>07</code></td></tr><tr><td align="left"><code>:i_day</code></td><td align="left">建立的日期（无前导零），比如， <code>7</code></td></tr></tbody></table><h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo publish [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><h2 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h2><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new photo &quot;My Gallery&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td></tr><tr><td align="left"><code>date</code></td><td align="left">文件建立日期</td></tr></tbody></table><h3 id="支持的格式"><a href="#支持的格式" class="headerlink" title="支持的格式"></a>支持的格式</h3><p>Hexo 支持以任何格式书写文章，只要安装了相应的渲染插件。</p><p>例如，Hexo 默认安装了 <code>hexo-renderer-marked</code> 和 <code>hexo-renderer-ejs</code>，因此你不仅可以用 Markdown 写作，你还可以用 EJS 写作。如果你安装了 <code>hexo-renderer-pug</code>，你甚至可以用 Pug 模板语言书写文章。</p><p>只需要将文章的扩展名从 <code>md</code> 改成 <code>ejs</code>，Hexo 就会使用 <code>hexo-renderer-ejs</code> 渲染这个文件，其他格式同理。</p><h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><pre class="line-numbers language-none"><code class="language-none">---title: Hello Worlddate: 2013&#x2F;7&#x2F;13 20:46:25---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>excerpt</code></td><td align="left">Page excerpt in plain text. Use <a href="https://hexo.io/docs/tag-plugins#Post-Excerpt">this plugin</a> to format the text</td><td align="left"></td></tr><tr><td align="left"><code>disableNunjucks</code></td><td align="left">Disable rendering of Nunjucks tag <code>&#123;&#123; &#125;&#125;</code>/<code>&#123;% %&#125;</code> and <a href="https://hexo.io/docs/tag-plugins">tag plugins</a> when enabled</td><td align="left"></td></tr><tr><td align="left"><code>lang</code></td><td align="left">Set the language to override <a href="https://hexo.io/docs/internationalization#Path">auto-detection</a></td><td align="left">Inherited from <code>_config.yml</code></td></tr></tbody></table><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>The default layout is <code>post</code>, in accordance to the value of <a href="https://hexo.io/zh-cn/docs/(/docs/configuration#Writing)"><code>default_layout</code></a> setting in <code>_config.yml</code>. When the layout is disabled (<code>layout: false</code>) in an article, it will not be processed with a theme. However, it will still be rendered by any available renderer: if an article is written in Markdown and a Markdown renderer (like the default <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>) is installed, it will be rendered to HTML.</p><p><a href="https://hexo.io/docs/tag-plugins">Tag plugins</a> are always processed regardless of layout, unless disabled by the <code>disableNunjucks</code> setting or <a href="https://hexo.io/api/renderer#Disable-Nunjucks-tags">renderer</a>.</p><h2 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><pre class="line-numbers language-none"><code class="language-none">categories:- Diarytags:- PS3- Games<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>分类方法的分歧</p><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><pre class="line-numbers language-none"><code class="language-none">categories:  - Diary  - Life<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><pre class="line-numbers language-none"><code class="language-none">categories:- [Diary, PlayStation]- [Diary, Games]- [Life]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p></blockquote><h2 id="JSON-Front-matter"><a href="#JSON-Front-matter" class="headerlink" title="JSON Front-matter"></a>JSON Front-matter</h2><p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p><pre class="line-numbers language-none"><code class="language-none">&quot;title&quot;: &quot;Hello World&quot;,&quot;date&quot;: &quot;2013&#x2F;7&#x2F;13 20:46:25&quot;;;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="标签插件（Tag-Plugins）"><a href="#标签插件（Tag-Plugins）" class="headerlink" title="标签插件（Tag Plugins）"></a>标签插件（Tag Plugins）</h1><p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p><p>虽然你可以使用任何格式书写你的文章，但是标签插件永远可用，且语法也都是一致的。</p><p><em>Tag plugins should not be wrapped inside Markdown syntax, e.g. <code>[](&#123;% post_path lorem-ipsum %&#125;)</code> is not supported.</em></p><h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。</p><p><strong>别号：</strong> quote</p><pre class="line-numbers language-none"><code class="language-none">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;content&#123;% endblockquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p><strong>没有提供参数，则只输出普通的 blockquote</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% blockquote %&#125;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.&#123;% endblockquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><p><strong>引用书上的句子</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% blockquote David Levithan, Wide Awake %&#125;Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.&#123;% endblockquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><p><strong>David Levithan</strong>Wide Awake</p></blockquote><p><strong>引用 Twitter</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% blockquote @DevDocs https:&#x2F;&#x2F;twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752 %&#125;NEW: DevDocs now comes with syntax highlighting. http:&#x2F;&#x2F;devdocs.io&#123;% endblockquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/">http://devdocs.io</a></p><p><strong>@DevDocs</strong><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></p></blockquote><p><strong>引用网络上的文章</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% blockquote Seth Godin http:&#x2F;&#x2F;sethgodin.typepad.com&#x2F;seths_blog&#x2F;2009&#x2F;07&#x2F;welcome-to-island-marketing.html Welcome to Island Marketing %&#125;Every interaction is both precious and an opportunity to delight.&#123;% endblockquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><p><strong>Seth Godin</strong><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></p></blockquote><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在文章中插入代码。</p><p><strong>别名：</strong> code</p><pre class="line-numbers language-none"><code class="language-none">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;code snippet&#123;% endcodeblock %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p><table><thead><tr><th align="left">Extra Options</th><th align="left">Description</th><th align="left">Default</th></tr></thead><tbody><tr><td align="left"><code>line_number</code></td><td align="left">Show line number</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>highlight</code></td><td align="left">Enable code highlighting</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>first_line</code></td><td align="left">Specify the first line number</td><td align="left"><code>1</code></td></tr><tr><td align="left"><code>mark</code></td><td align="left">Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: <code>mark:1,4-7,10</code> will mark line 1, 4 to 7 and 10.</td><td align="left"></td></tr><tr><td align="left"><code>wrap</code></td><td align="left">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">``</a></td><td align="left"><code>true</code></td></tr></tbody></table><h3 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h3><p><strong>普通的代码块</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% codeblock %&#125;alert(&#39;Hello World!&#39;);&#123;% endcodeblock %&#125;alert(&#39;Hello World!&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>指定语言</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% codeblock lang:objc %&#125;[rectangle setX: 10 y: 10 width: 20 height: 20];&#123;% endcodeblock %&#125;[rectangle setX: 10 y: 10 width: 20 height: 20];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>附加说明</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% codeblock Array.map %&#125;array.map(callback[, thisArg])&#123;% endcodeblock %&#125;Array.maparray.map(callback[, thisArg])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>附加说明和网址</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% codeblock _.compact http:&#x2F;&#x2F;underscorejs.org&#x2F;#compact Underscore.js %&#125;_.compact([0, 1, false, 2, &#39;&#39;, 3]);&#x3D;&gt; [1, 2, 3]&#123;% endcodeblock %&#125;_.compactUnderscore.js_.compact([0, 1, false, 2, &#39;&#39;, 3]);&#x3D;&gt; [1, 2, 3]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="反引号代码块"><a href="#反引号代码块" class="headerlink" title="反引号代码块"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p><p>``` [language] [title] [url] [link text] code snippet ```</p><h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% pullquote [class] %&#125;content&#123;% endpullquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>在文章中嵌入 Gist。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% gist gist_id [filename] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>在文章中插入 iframe。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% iframe url [width] [height] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>在文章中插入指定大小的图片。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% img [class names] &#x2F;path&#x2F;to&#x2F;image [width] [height] &#39;&quot;title text&quot; &quot;alt text&quot;&#39; %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% link text url [external] [title] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>插入 <code>source/downloads/code</code> 文件夹内的代码文件。<code>source/downloads/code</code> 不是固定的，取决于你在配置文件中 <code>code_dir</code> 的配置。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% include_code [title] [lang:language] [from:line] [to:line] path&#x2F;to&#x2F;file %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h3><p><strong>嵌入 test.js 文件全文</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% include_code lang:javascript test.js %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>只嵌入第 3 行</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% include_code lang:javascript from:3 to:3 test.js %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>嵌入第 5 行至第 8 行</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% include_code lang:javascript from:5 to:8 test.js %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>嵌入第 5 行至文件结束</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% include_code lang:javascript from:5 test.js %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>嵌入第 1 行至第 8 行</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% include_code lang:javascript to:8 test.js %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% youtube video_id [type] [cookie] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p><strong>视频</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% youtube lJIrF4YjHfQ %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>播放列表</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#39;playlist&#39; %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>隐私模式</strong></p><p>禁止 YouTube cookie</p><pre class="line-numbers language-none"><code class="language-none">&#123;% youtube lJIrF4YjHfQ false %&#125;&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#39;playlist&#39; false %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% vimeo video_id %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p>引用其他文章的链接。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% post_path filename %&#125;&#123;% post_link filename [title] [escape] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。</p><p>例如，在文章中使用 <code>&#123;% post_link how-to-bake-a-cake %&#125;</code> 时，只需有一个名为 <code>how-to-bake-a-cake.md</code> 的文章文件即可。即使这个文件位于站点文件夹的 <code>source/posts/2015-02-my-family-holiday</code> 目录下、或者文章的永久链接是 <code>2018/en/how-to-bake-a-cake</code>，都没有影响。</p><p>默认链接文字是文章的标题，你也可以自定义要显示的文本。</p><p>默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用<code>escape</code>选项，禁止对特殊字符进行转义。</p><p><strong>链接使用文章的标题</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% post_link hexo-3-8-released %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">Hexo 3.8.0 Released</a></p><p><strong>链接使用自定义文字</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% post_link hexo-3-8-released &#39;通往文章的链接&#39; %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">通往文章的链接</a></p><p><strong>对标题的特殊字符进行转义</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% post_link hexo-4-released &#39;How to use &lt;b&gt; tag in title&#39; %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/">How to use  tag in title</a></p><p><strong>禁止对标题的特殊字符进行转义</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% post_link hexo-4-released &#39;&lt;b&gt;bold&lt;&#x2F;b&gt; custom title&#39; false %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/"><strong>bold</strong> custom title</a></p><h2 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h2><p>引用文章的资源。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_path filename %&#125;&#123;% asset_img [class names] slug [width] [height] [title text [alt text]] %&#125;&#123;% asset_link filename [title] [escape] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Embed-image"><a href="#Embed-image" class="headerlink" title="Embed image"></a>Embed image</h3><p><em>hexo-renderer-marked 3.1.0+ can (optionally) resolves the post’s path of an image automatically, refer to <a href="https://hexo.io/docs/asset-folders#Embedding-an-image-using-markdown">this section</a> on how to enable it.</em></p><p>“foo.jpg” is located at <code>http://example.com/2020/01/02/hello/foo.jpg</code>.</p><p><strong>Default (no option)</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_img foo.jpg %&#125;&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Custom class</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_img post-image foo.jpg %&#125;&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot; class&#x3D;&quot;post-image&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Display size</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_img foo.jpg 500 400 %&#125;&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot; width&#x3D;&quot;500&quot; height&#x3D;&quot;400&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Title &amp; Alt</strong></p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_img logo.svg &quot;lorem ipsum&#39;dolor&#39;&quot; %&#125;&lt;img src&#x3D;&quot;&#x2F;2020&#x2F;01&#x2F;02&#x2F;hello&#x2F;foo.jpg&quot; title&#x3D;&quot;lorem ipsum&quot; alt&#x3D;&quot;dolor&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% raw %&#125;content&#123;% endraw %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="文章摘要和截断"><a href="#文章摘要和截断" class="headerlink" title="文章摘要和截断"></a>文章摘要和截断</h2><p>在文章中使用 <code>&lt;!-- more --&gt;</code>，那么 <code>&lt;!-- more --&gt;</code> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。</p><p>例如：</p><pre class="line-numbers language-none"><code class="language-none">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&lt;!-- more --&gt;Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>首页中将只会出现</p><pre class="line-numbers language-none"><code class="language-none">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正文中则会出现</p><pre class="line-numbers language-none"><code class="language-none">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意，摘要可能会被 Front Matter 中的 <code>excerpt</code> 覆盖。</p><h1 id="资源文件夹"><a href="#资源文件夹" class="headerlink" title="资源文件夹"></a>资源文件夹</h1><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p><pre class="line-numbers language-none"><code class="language-none">_config.ymlpost_asset_folder: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><h2 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h2><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的<a href="https://hexo.io/docs/tag-plugins#Include-Assets">标签插件</a>被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>比如说：当你打开文章资源文件夹功能后，你把一个 <code>example.jpg</code> 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](example.jpg)</code> ，它将 <em>不会</em> 出现在首页上。（但是它会在文章中按你期待的方式工作）</p><p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p><pre class="line-numbers language-none"><code class="language-none">&#123;% asset_img example.jpg This is an example image %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><h2 id="Embedding-an-image-using-markdown"><a href="#Embedding-an-image-using-markdown" class="headerlink" title="Embedding an image using markdown"></a>Embedding an image using markdown</h2><p><a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a> 3.1.0 introduced a new option that allows you to embed an image in markdown without using <code>asset_img</code> tag plugin.</p><p>To enable:</p><pre class="line-numbers language-none"><code class="language-none">_config.ymlpost_asset_folder: truemarked:  prependRoot: true  postAsset: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Once enabled, an asset image will be automatically resolved to its corresponding post’s path. For example, “image.jpg” is located at “/2020/01/02/foo/image.jpg”, meaning it is an asset image of “/2020/01/02/foo/“ post, <code>![](image.jpg)</code> will be rendered as <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code>.</p><h1 id="数据文件"><a href="#数据文件" class="headerlink" title="数据文件"></a>数据文件</h1><p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。</p><p>举例来说，在 <code>source/_data</code> 文件夹中新建 <code>menu.yml</code> 文件：</p><pre class="line-numbers language-none"><code class="language-none">Home: &#x2F;Gallery: &#x2F;gallery&#x2F;Archives: &#x2F;archives&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>您就能在模板中使用这些资料：</p><pre class="line-numbers language-none"><code class="language-none">&lt;% for (var link in site.data.menu) &#123; %&gt;  &lt;a href&#x3D;&quot;&lt;%&#x3D; site.data.menu[link] %&gt;&quot;&gt; &lt;%&#x3D; link %&gt; &lt;&#x2F;a&gt;&lt;% &#125; %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>渲染结果如下 :</p><pre class="line-numbers language-none"><code class="language-none">&lt;a href&#x3D;&quot;&#x2F;&quot;&gt; Home &lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;&#x2F;gallery&#x2F;&quot;&gt; Gallery &lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;&#x2F;archives&#x2F;&quot;&gt; Archives &lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h2 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a><a href="https://github.com/hexojs/hexo-server">hexo-server</a></h2><p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 <a href="https://github.com/hexojs/hexo-server">hexo-server</a> 才能使用。</p><pre class="line-numbers language-none"><code class="language-none">$ npm install hexo-server --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果您想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口，如下：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo server -p 5000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h3><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo server -s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="自定义-IP"><a href="#自定义-IP" class="headerlink" title="自定义 IP"></a>自定义 IP</h3><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 IP 设置，如下：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo server -i 192.168.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>指定这个参数后，您就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的<code>127.0.0.1</code>外，通常还有一个<code>192.168.*.*</code>的局域网IP，如果像上面那样使用<code>-i</code>参数，就不能用<code>127.0.0.1</code>来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为<code>-i</code>参数的值，那么就无法通过公网来访问站点。</p><h2 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h2><p><a href="http://pow.cx/">Pow</a> 是一个 Mac 系统上的零配置 Rack 服务器，它也可以作为一个简单易用的静态文件服务器来使用。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-none"><code class="language-none">$ curl get.pow.cx | sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>在 <code>~/.pow</code> 文件夹建立链接（symlink）。</p><pre class="line-numbers language-none"><code class="language-none">$ cd ~&#x2F;.pow$ ln -s &#x2F;path&#x2F;to&#x2F;myapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>您的网站将会在 <code>http://myapp.dev</code> 下运行，网址根据链接名称而定。</p><h1 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h1><p>使用 Hexo 生成静态文件快速而且简单。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h3><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo generate --watch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p><pre class="line-numbers language-none"><code class="language-none">$ hexo generate --deploy$ hexo deploy --generate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>简写</p><p>上面两个命令可以简写为<br>$ hexo g -d<br>$ hexo d -g</p></blockquote><h1 id="永久链接（Permalinks）"><a href="#永久链接（Permalinks）" class="headerlink" title="永久链接（Permalinks）"></a>永久链接（Permalinks）</h1><p>您可以在 <code>_config.yml</code> 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>除了下列变量外，您还可使用 Front-matter 中的所有属性。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>:year</code></td><td align="left">文章的发表年份（4 位数）</td></tr><tr><td align="left"><code>:month</code></td><td align="left">文章的发表月份（2 位数）</td></tr><tr><td align="left"><code>:i_month</code></td><td align="left">文章的发表月份（去掉开头的零）</td></tr><tr><td align="left"><code>:day</code></td><td align="left">文章的发表日期 (2 位数)</td></tr><tr><td align="left"><code>:i_day</code></td><td align="left">文章的发表日期（去掉开头的零）</td></tr><tr><td align="left"><code>:hour</code></td><td align="left">文章发表时的小时 (2 位数)</td></tr><tr><td align="left"><code>:minute</code></td><td align="left">文章发表时的分钟 (2 位数)</td></tr><tr><td align="left"><code>:second</code></td><td align="left">文章发表时的秒钟 (2 位数)</td></tr><tr><td align="left"><code>:title</code></td><td align="left">文件名称 (relative to “source/_posts/“ folder)</td></tr><tr><td align="left"><code>:name</code></td><td align="left">文件名称</td></tr><tr><td align="left"><code>:post_title</code></td><td align="left">文章标题</td></tr><tr><td align="left"><code>:id</code></td><td align="left">文章 ID (<em>not persistent across <a href="https://hexo.io/zh-cn/docs/commands#clean">cache reset</a></em>)</td></tr><tr><td align="left"><code>:category</code></td><td align="left">分类。如果文章没有分类，则是 <code>default_category</code> 配置信息。</td></tr><tr><td align="left"><code>:hash</code></td><td align="left">SHA1 hash of filename (same as <code>:title</code>) and date (12-hexadecimal)</td></tr></tbody></table><p>您可在 <code>permalink_defaults</code> 参数下调整永久链接中各变量的默认值：</p><pre class="line-numbers language-none"><code class="language-none">permalink_defaults:  lang: en<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre class="line-numbers language-none"><code class="language-none">source&#x2F;_posts&#x2F;hello-world.mdtitle: Hello Worlddate: 2013-07-14 17:01:34categories:- foo- bar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">结果</th></tr></thead><tbody><tr><td align="left"><code>:year/:month/:day/:title/</code></td><td align="left">2013/07/14/hello-world/</td></tr><tr><td align="left"><code>:year-:month-:day-:title.html</code></td><td align="left">2013-07-14-hello-world.html</td></tr><tr><td align="left"><code>:category/:title/</code></td><td align="left">foo/bar/hello-world/</td></tr><tr><td align="left"><code>:title-:hash/</code></td><td align="left">hello-world-a2c8ac003b43/</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">source&#x2F;_posts&#x2F;lorem&#x2F;hello-world.mdtitle: Hello Worlddate: 2013-07-14 17:01:34categories:- foo- bar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">结果</th></tr></thead><tbody><tr><td align="left"><code>:year/:month/:day/:title/</code></td><td align="left">2013/07/14/lorem/hello-world/</td></tr><tr><td align="left"><code>:year/:month/:day/:name/</code></td><td align="left">2013/07/14/hello-world/</td></tr></tbody></table><h3 id="多语种支持"><a href="#多语种支持" class="headerlink" title="多语种支持"></a>多语种支持</h3><p>若要建立一个多语种的网站，您可修改 <code>new_post_name</code> 和 <code>permalink</code> 参数，如下：</p><pre class="line-numbers language-none"><code class="language-none">new_post_name: :lang&#x2F;:title.mdpermalink: :lang&#x2F;:title&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当您建立新文章时，文章会被储存到：</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new &quot;Hello World&quot; --lang tw# &#x3D;&gt; source&#x2F;_posts&#x2F;tw&#x2F;Hello-World.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>而网址会是：</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:4000&#x2F;tw&#x2F;hello-world&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><p>创建 Hexo 主题非常容易，您只要在 <code>themes</code> 文件夹内，新增一个任意名称的文件夹，并修改 <code>_config.yml</code> 内的 <code>theme</code> 设定，即可切换主题。一个主题可能会有以下的结构：</p><pre class="line-numbers language-none"><code class="language-none">.├── _config.yml├── languages├── layout├── scripts└── source<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启 Hexo Server。</p><h3 id="languages"><a href="#languages" class="headerlink" title="languages"></a>languages</h3><p>语言文件夹。请参见 <a href="https://hexo.io/zh-cn/docs/internationalization">国际化 (i18n)</a>。</p><h3 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h3><p>布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 <a href="https://github.com/node-swig/swig-templates">Swig</a> 模板引擎，您可以另外安装插件来获得 <a href="https://github.com/hexojs/hexo-renderer-ejs">EJS</a>、<a href="https://github.com/hexojs/hexo-renderer-haml">Haml</a>、<a href="https://github.com/hexojs/hexo-renderer-jade">Jade</a> 或 <a href="https://github.com/maxknee/hexo-render-pug">Pug</a> 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎，例如：</p><pre class="line-numbers language-none"><code class="language-none">layout.ejs   - 使用 EJSlayout.swig  - 使用 Swig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>您可参考 <a href="https://hexo.io/zh-cn/docs/templates">模板</a> 以获得更多信息。</p><h3 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h3><p>脚本文件夹。在启动时，Hexo 会载入此文件夹内的 JavaScript 文件，请参见 <a href="https://hexo.io/zh-cn/docs/plugins">插件</a> 以获得更多信息。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 <code>_</code>（下划线线）或隐藏的文件会被忽略。</p><p>如果文件可以被渲染的话，会经过解析然后储存到 <code>public</code> 文件夹，否则会直接拷贝到 <code>public</code> 文件夹。</p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>当您完成主题后，可以考虑将它发布到 <a href="https://hexo.io/themes">主题列表</a>，让更多人能够使用您的主题。在发布前建议先进行 <a href="https://github.com/hexojs/hexo-theme-unit-test">主题单元测试</a>，确保每一项功能都能正常使用。发布主题的步骤和 <a href="https://hexo.io/zh-cn/docs/contributing#%E6%9B%B4%E6%96%B0%E6%96%87%E6%A1%A3">更新文档</a> 非常类似。</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs/site</a></p></li><li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p><pre class="line-numbers language-none"><code class="language-none">$ git clone https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;site.git$ cd site$ npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>编辑 <code>source/_data/themes.yml</code>，在文件中新增您的主题，例如：</p><pre class="line-numbers language-none"><code class="language-none">- name: landscape  description: A brand new default theme for Hexo.  link: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-theme-landscape  preview: http:&#x2F;&#x2F;hexo.io&#x2F;hexo-theme-landscape  tags:    - official    - responsive    - widget    - two_column    - one_column<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在 <code>source/themes/screenshots</code> 新增同名的截图档案，图片必须为 800x500 的 PNG 文件。</p></li><li><p>推送（push）分支。</p></li><li><p>建立一个新的合并申请（pull request）并描述改动。</p></li></ol><h1 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h1><p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p><table><thead><tr><th align="left">模板</th><th align="left">用途</th><th align="left">回退</th></tr></thead><tbody><tr><td align="left"><code>index</code></td><td align="left">首页</td><td align="left"></td></tr><tr><td align="left"><code>post</code></td><td align="left">文章</td><td align="left"><code>index</code></td></tr><tr><td align="left"><code>page</code></td><td align="left">分页</td><td align="left"><code>index</code></td></tr><tr><td align="left"><code>archive</code></td><td align="left">归档</td><td align="left"><code>index</code></td></tr><tr><td align="left"><code>category</code></td><td align="left">分类归档</td><td align="left"><code>archive</code></td></tr><tr><td align="left"><code>tag</code></td><td align="left">标签归档</td><td align="left"><code>archive</code></td></tr></tbody></table><h2 id="布局（Layout）-1"><a href="#布局（Layout）-1" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p><pre class="line-numbers language-none"><code class="language-none">index.ejsindexlayout.ejs&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;body&gt;&lt;%- body %&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;body&gt;index&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p><h2 id="局部模版（Partial）"><a href="#局部模版（Partial）" class="headerlink" title="局部模版（Partial）"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p><pre class="line-numbers language-none"><code class="language-none">partial&#x2F;header.ejs&lt;h1 id&#x3D;&quot;logo&quot;&gt;&lt;%&#x3D; config.title %&gt;&lt;&#x2F;h1&gt;index.ejs&lt;%- partial(&#39;partial&#x2F;header&#39;) %&gt;&lt;div id&#x3D;&quot;content&quot;&gt;Home page&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>生成：</p><pre class="line-numbers language-none"><code class="language-none">&lt;h1 id&#x3D;&quot;logo&quot;&gt;My Site&lt;&#x2F;h1&gt;&lt;div id&#x3D;&quot;content&quot;&gt;Home page&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p><pre class="line-numbers language-none"><code class="language-none">partial&#x2F;header.ejs&lt;h1 id&#x3D;&quot;logo&quot;&gt;&lt;%&#x3D; title %&gt;&lt;&#x2F;h1&gt;index.ejs&lt;%- partial(&#39;partial&#x2F;header&#39;, &#123;title: &#39;Hello World&#39;&#125;) %&gt;&lt;div id&#x3D;&quot;content&quot;&gt;Home page&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>生成：</p><pre class="line-numbers language-none"><code class="language-none">&lt;h1 id&#x3D;&quot;logo&quot;&gt;Hello World&lt;&#x2F;h1&gt;&lt;div id&#x3D;&quot;content&quot;&gt;Home page&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p><p>本功能借鉴于 <a href="http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p><p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p><pre class="line-numbers language-none"><code class="language-none">&lt;%- fragment_cache(&#39;header&#39;, function()&#123;  return &#39;&lt;header&gt;&lt;&#x2F;header&gt;&#39;;&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果您使用局部模板的话，可以更简单：</p><pre class="line-numbers language-none"><code class="language-none">&lt;%- partial(&#39;header&#39;, &#123;&#125;, &#123;cache: true&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>fragment_cache()</code> 将会缓存第一次的渲染结果，并在之后直接输出缓存的结果。因此只有在不同页面的渲染结果都相同时才应使用局部缓存。<br>比如，在配置中启用了 <code>relative_link</code> 后不应该使用局部缓存，因为相对链接在每个页面可能不同。</p></blockquote><h1 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h1><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>site</code></td><td align="left"><a href="https://hexo.io/zh-cn/docs/variables#%E7%BD%91%E7%AB%99%E5%8F%98%E9%87%8F">网站变量</a></td><td align="left"><code>object</code>; 见 <a href="https://hexo.io/zh-cn/docs/variables#%E7%BD%91%E7%AB%99%E5%8F%98%E9%87%8F">网站变量</a></td></tr><tr><td align="left"><code>page</code></td><td align="left">针对该页面的内容以及 front-matter 中自定义的变量。</td><td align="left"><code>object</code>; 见 <a href="https://hexo.io/zh-cn/docs/variables#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F">页面变量</a></td></tr><tr><td align="left"><code>config</code></td><td align="left">网站配置</td><td align="left"><code>object</code> (站点的配置文件)</td></tr><tr><td align="left"><code>theme</code></td><td align="left">主题配置。继承自网站配置。</td><td align="left"><code>object</code> (主题配置文件)</td></tr><tr><td align="left"><code>path</code></td><td align="left">当前页面的路径（不含根路径）</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>url</code></td><td align="left">当前页面的完整网址</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>env</code></td><td align="left">环境变量</td><td align="left">???</td></tr></tbody></table><blockquote><p>从 Hexo 5.0.0 开始，Lodash 已从全局变量中移除。迁移时 <a href="https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore">You-Dont-Need-Lodash-Underscore</a> 或许能为你提供帮助。</p></blockquote><h3 id="网站变量"><a href="#网站变量" class="headerlink" title="网站变量"></a>网站变量</h3><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>site.posts</code></td><td align="left">所有文章</td><td align="left"><code>array</code> of <code>post</code> objects</td></tr><tr><td align="left"><code>site.pages</code></td><td align="left">所有分页</td><td align="left"><code>array</code> of <code>page</code> objects</td></tr><tr><td align="left"><code>site.categories</code></td><td align="left">所有分类</td><td align="left"><code>object</code>，包含了站点全部的分类</td></tr><tr><td align="left"><code>site.tags</code></td><td align="left">所有标签</td><td align="left"><code>array</code>，包含了站点全部的标签</td></tr></tbody></table><h3 id="页面变量"><a href="#页面变量" class="headerlink" title="页面变量"></a>页面变量</h3><p><strong>页面（<code>page</code>）</strong></p><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>page.title</code></td><td align="left">页面标题</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.date</code></td><td align="left">页面建立日期</td><td align="left"><a href="http://momentjs.com/">Moment.js</a> 对象</td></tr><tr><td align="left"><code>page.updated</code></td><td align="left">页面更新日期</td><td align="left"><a href="http://momentjs.com/">Moment.js</a> 对象</td></tr><tr><td align="left"><code>page.comments</code></td><td align="left">留言是否开启</td><td align="left"><code>boolean</code></td></tr><tr><td align="left"><code>page.layout</code></td><td align="left">布局名称</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.content</code></td><td align="left">页面的完整内容</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.excerpt</code></td><td align="left">页面摘要</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.more</code></td><td align="left">除了页面摘要的其余内容</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.source</code></td><td align="left">页面原始路径</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.full_source</code></td><td align="left">页面的完整原始路径</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.path</code></td><td align="left">页面网址（不含根路径）。我们通常在主题中使用 <code>url_for(page.path)</code>。</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.permalink</code></td><td align="left">页面的完整网址</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.prev</code></td><td align="left">上一个页面。如果此为第一个页面则为 <code>null</code>。</td><td align="left"><code>string</code> or <code>null</code></td></tr><tr><td align="left"><code>page.next</code></td><td align="left">下一个页面。如果此为最后一个页面则为 <code>null</code>。</td><td align="left"><code>string</code> or <code>null</code></td></tr><tr><td align="left"><code>page.raw</code></td><td align="left">文章的原始内容</td><td align="left">???</td></tr><tr><td align="left"><code>page.photos</code></td><td align="left">文章的照片（用于相簿）</td><td align="left"><code>array</code></td></tr><tr><td align="left"><code>page.link</code></td><td align="left">文章的外部链接（用于链接文章）</td><td align="left"><code>string</code></td></tr></tbody></table><p><strong>文章 (<code>post</code>):</strong> 与 <code>page</code> 布局相同，但新增以下变量。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>page.published</code></td><td align="left">如果该文章已发布则为 true</td><td align="left"><code>boolean</code></td></tr><tr><td align="left"><code>page.categories</code></td><td align="left">该文章的所有分类</td><td align="left"><code>array</code> of ???</td></tr><tr><td align="left"><code>page.tags</code></td><td align="left">该文章的所有标签</td><td align="left"><code>array</code> of ???</td></tr></tbody></table><p><strong>首页（<code>index</code>）</strong></p><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>page.per_page</code></td><td align="left">每页显示的文章数量</td><td align="left"><code>number</code></td></tr><tr><td align="left"><code>page.total</code></td><td align="left">总页数</td><td align="left"><code>number</code></td></tr><tr><td align="left"><code>page.current</code></td><td align="left">目前页数</td><td align="left"><code>number</code></td></tr><tr><td align="left"><code>page.current_url</code></td><td align="left">目前分页的网址</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.posts</code></td><td align="left">本页文章 (<a href="https://hexojs.github.io/warehouse/">Data Model</a>)</td><td align="left"><code>object</code></td></tr><tr><td align="left"><code>page.prev</code></td><td align="left">上一页的页数。如果此页是第一页的话则为 <code>0</code>。</td><td align="left"><code>number</code></td></tr><tr><td align="left"><code>page.prev_link</code></td><td align="left">上一页的网址。如果此页是第一页的话则为 <code>&#39;&#39;</code>。</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.next</code></td><td align="left">下一页的页数。如果此页是最后一页的话则为 <code>0</code>。</td><td align="left"><code>number</code></td></tr><tr><td align="left"><code>page.next_link</code></td><td align="left">下一页的网址。如果此页是最后一页的话则为 <code>&#39;&#39;</code>。</td><td align="left"><code>string</code></td></tr><tr><td align="left"><code>page.path</code></td><td align="left">当前页面的路径（不含根目录）。我们通常在主题中使用 <code>url_for(page.path)</code>。</td><td align="left"><code>string</code></td></tr></tbody></table><p>**归档 (<code>archive</code>)**：与 <code>index</code> 布局相同，但新增以下变量。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>page.archive</code></td><td align="left">等于 <code>true</code></td><td align="left"><code>boolean</code></td></tr><tr><td align="left"><code>page.year</code></td><td align="left">年份归档 (4位)</td><td align="left"><code>number</code></td></tr><tr><td align="left"><code>page.month</code></td><td align="left">月份归档 (没有前导零的2位数)</td><td align="left"><code>number</code></td></tr></tbody></table><p>**分类 (<code>category</code>)**：与 <code>index</code> 布局相同，但新增以下变量。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>page.category</code></td><td align="left">分类名称</td><td align="left"><code>string</code></td></tr></tbody></table><p>**标签 (<code>tag</code>)**：与 <code>index</code> 布局相同，但新增以下变量。</p><table><thead><tr><th align="left">变量</th><th align="left">描述</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left"><code>page.tag</code></td><td align="left">标签名称</td><td align="left"><code>string</code></td></tr></tbody></table><h1 id="国际化（i18n）"><a href="#国际化（i18n）" class="headerlink" title="国际化（i18n）"></a>国际化（i18n）</h1><p>若要让您的网站以不同语言呈现，您可使用国际化（internationalization）功能。请先在 <code>_config.yml</code> 中调整 <code>language</code> 设定，这代表的是预设语言，您也可设定多个语言来调整预设语言的顺位。</p><pre class="line-numbers language-none"><code class="language-none">language: zh-twlanguage: - zh-tw- en<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="语言文件"><a href="#语言文件" class="headerlink" title="语言文件"></a>语言文件</h3><p>语言文件可以使用 YAML 或 JSON 编写，并放在主题文件夹中的 <code>languages</code> 文件夹。您可以在语言文件中使用 <a href="https://github.com/alexei/sprintf.js">printf 格式</a>。</p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p>在模板中，透过 <code>__</code> 或 <code>_p</code> 辅助函数，即可取得翻译后的字符串，前者用于一般使用；而后者用于复数字符串。例如：</p><pre class="line-numbers language-none"><code class="language-none">en.ymlindex:  title: Home  add: Add  video:    zero: No videos    one: One video    other: %d videos&lt;%&#x3D; __(&#39;index.title&#39;) %&gt;&#x2F;&#x2F; Home&lt;%&#x3D; _p(&#39;index.video&#39;, 3) %&gt;&#x2F;&#x2F; 3 videos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>您可在 front-matter 中指定该页面的语言，也可在 <code>_config.yml</code> 中修改 <code>i18n_dir</code> 设定，让 Hexo 自动侦测。</p><pre class="line-numbers language-none"><code class="language-none">i18n_dir: :lang<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>i18n_dir</code> 的预设值是 <code>:lang</code>，也就是说 Hexo 会捕获网址中的第一段以检测语言，举例来说：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;index.html &#x3D;&gt; en&#x2F;archives&#x2F;index.html &#x3D;&gt; en&#x2F;zh-tw&#x2F;index.html &#x3D;&gt; zh-tw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>捕获到的字符串唯有在语言文件存在的情况下，才会被当作是语言，因此例二 <code>/archives/index.html</code> 中的 <code>archives</code> 就不被当成是语言。</p><h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><p>Hexo 对 <a href="https://github.com/highlightjs/highlight.js">highlight.js</a> 与 <a href="https://github.com/PrismJS/prism">prismjs</a> 两种代码高亮库提供内建支持。本篇教程将展示如何将 Hexo 的内建语法高亮组件整合至你的模板中。</p><h2 id="如何在文章中插入代码块"><a href="#如何在文章中插入代码块" class="headerlink" title="如何在文章中插入代码块"></a>如何在文章中插入代码块</h2><p>Hexo 支持两种代码块写法——<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">代码块标签插件</a>和<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%8F%8D%E5%BC%95%E5%8F%B7%E4%BB%A3%E7%A0%81%E5%9D%97">反引号代码块标签插件</a>：</p><pre class="line-numbers language-none"><code class="language-none">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;code snippet&#123;% endcodeblock %&#125;&#123;% code [title] [lang:language] [url] [link text] [additional options] %&#125;code snippet&#123;% endcode %&#125;​&#96;&#96;&#96; [language] [title] [url] [link text] [additional options]code snippet​&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的第三种是 Markdown 的 fenced code block 语法。Hexo 对其进行了扩展，使其支持更多特性。在<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">标签插件文档</a>中你可以找到可用的选项。</p><blockquote><p>提示：Hexo 支持用任何格式书写文章，只需安装相应渲染插件即可。不论文章以何种格式书写（Markdown、EJS、Swig、Nunjuck、Pug、ASCIIDoc），上述三种代码块语法总是可用。</p></blockquote><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><pre class="line-numbers language-none"><code class="language-none"># _config.ymlhighlight:  enable: true  auto_detect: false  line_number: true  tab_replace: &#39;&#39;  wrap: true  hljs: falseprismjs:  enable: false  preprocess: true  line_number: true  tab_replace: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上为 Hexo 的默认配置。</p><h2 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h2><pre class="line-numbers language-none"><code class="language-none"># _config.ymlhighlight:  enable: falseprismjs:  enable: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当 <code>highlight.enable</code> 和 <code>prismjs.enable</code> 均为 <code>false</code> 时，代码块输出的 HTML 由相应的渲染器控制。举个例子：<a href="https://github.com/markedjs/marked"><code>marked.js</code></a>（Hexo 的默认 Markdown 渲染器 <a href="https://github.com/hexojs/hexo-renderer-marked"><code>hexo-renderer-marked</code></a> 由此驱动）会把语言加入 <code>&lt;code&gt;</code> 标签的 <code>class</code> 中：</p><pre class="line-numbers language-none"><code class="language-none">​&#96;&#96;&#96;yamlhello: hexo​&#96;&#96;&#96;&lt;pre&gt;  &lt;code class&#x3D;&quot;yaml&quot;&gt;hello: hexo&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果内建语法高亮器均未启用，你可以安装第三方语法高亮插件，也可以使用浏览器端的语法高亮库（例如 <code>highlight.js</code> 和 <code>prism.js</code> 也都支持在浏览器中运行）。</p><h2 id="Highlight-js"><a href="#Highlight-js" class="headerlink" title="Highlight.js"></a>Highlight.js</h2><pre class="line-numbers language-none"><code class="language-none"># _config.ymlhighlight:  enable: true  auto_detect: false  line_number: true  tab_replace: &#39;  &#39;  wrap: true  hljs: falseprismjs:  enable: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>highlight.js</code> 默认开启，用作 Hexo 的服务端高亮组件。如果你需要在浏览器端运行 <code>highlight.js</code>，请把它关闭。</p><blockquote><p>「服务端高亮」指语法高亮在 <code>hexo generate</code> 或 <code>hexo server</code> 时完成。</p></blockquote><h3 id="auto-detect"><a href="#auto-detect" class="headerlink" title="auto_detect"></a>auto_detect</h3><p><code>auto_detect</code> 是 <code>highlight.js</code> 的特性，能够自动检测代码块的语言。</p><blockquote><p>提示：如果你想使用「子语言高亮」功能（例如在高亮 HTML 时同时高亮内部嵌入的 JavaScript 代码），请开启 <code>auto_detect</code>，并且在文章中插入代码块时不要标注语言。</p></blockquote><blockquote><p>警告！</p><p><code>auto_detect</code> 十分耗费资源。 如果你不需要使用「子语言高亮」功能，或者不介意在书写代码块时标记语言，请不要启用此功能。</p></blockquote><h3 id="line-number"><a href="#line-number" class="headerlink" title="line_number"></a>line_number</h3><p><code>highlight.js</code> <a href="https://highlightjs.readthedocs.io/en/latest/line-numbers.html">不支持</a>行号显示。</p><p>Hexo 通过用 <code>&lt;figure&gt;</code> 和 <code>&lt;table&gt;</code> 包裹其代码块为其添加了行号显示支持:</p><pre class="line-numbers language-none"><code class="language-none">&lt;figure class&#x3D;&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;  &lt;td class&#x3D;&quot;gutter&quot;&gt;    &lt;pre&gt;&lt;span class&#x3D;&quot;line&quot;&gt;1&lt;&#x2F;span&gt;&lt;br&gt;&lt;&#x2F;pre&gt;  &lt;&#x2F;td&gt;  &lt;td class&#x3D;&quot;code&quot;&gt;    &lt;pre&gt;&lt;span class&#x3D;&quot;line&quot;&gt;&lt;span class&#x3D;&quot;attr&quot;&gt;hello:&lt;&#x2F;span&gt;&lt;span class&#x3D;&quot;string&quot;&gt;hexo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;br&gt;&lt;&#x2F;pre&gt;  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;&lt;&#x2F;figure&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这不是 <code>highlight.js</code> 的行为，因此需要为 <code>&lt;figure&gt;</code> 和 <code>&lt;table&gt;</code> 添加自定义 CSS 代码。部分主题对此提供内建支持。</p><p>你大概也注意到了，所有代码块的 <code>class</code> 都没有 <code>hljs-</code> 前缀。我们 <a href="https://hexo.io/zh-cn/docs/syntax-highlight#hljs">为此专门准备了一个章节</a>。</p><h3 id="tab-replace"><a href="#tab-replace" class="headerlink" title="tab_replace"></a>tab_replace</h3><p>用代码内的 tab (<code>\t</code>) 替换为给定值，默认值是两个空格。</p><h3 id="wrap"><a href="#wrap" class="headerlink" title="wrap"></a>wrap</h3><p>为了支持行号显示，Hexo 将输出包裹在了 <code>&lt;figure&gt;</code> 和 <code>&lt;table&gt;</code> 内部。如果要保持 <code>highlight.js</code> 原来的行为，你需要将 <code>line_number</code> 和 <code>wrap</code> <strong>全部</strong>关闭。</p><pre class="line-numbers language-none"><code class="language-none">&lt;pre&gt;&lt;code class&#x3D;&quot;yaml&quot;&gt;&lt;span class&#x3D;&quot;comment&quot;&gt;# _config.yml&lt;&#x2F;span&gt;&lt;span class&#x3D;&quot;attr&quot;&gt;hexo:&lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;string&quot;&gt;hexo&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>警告！</p><p>因为 <code>line_number</code> 功能依赖 <code>wrap</code>，你无法在配置中关闭 <code>wrap</code> 而又开启 <code>line_number</code>。如果你将 <code>line_number</code> 设置为 <code>true</code> 的话，<code>wrap</code> 将被自动开启。</p></blockquote><h3 id="hljs"><a href="#hljs" class="headerlink" title="hljs"></a>hljs</h3><p>当 <code>hljs</code> 设置为 <code>true</code> 时，所有代码块的 HTML 输出均会给 <code>class</code> 添加 <code>hljs-</code> 前缀（无论 <code>wrap</code> 是否开启）：</p><pre class="line-numbers language-none"><code class="language-none">&lt;pre&gt;&lt;code class&#x3D;&quot;yaml hljs&quot;&gt;&lt;span class&#x3D;&quot;hljs-comment&quot;&gt;# _config.yml&lt;&#x2F;span&gt;&lt;span class&#x3D;&quot;hljs-attr&quot;&gt;hexo:&lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;hljs-string&quot;&gt;hexo&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>提示：当 <code>line_number</code> 和 <code>wrap</code> 为 <code>false</code>，<code>hljs</code> 为 <code>true</code> 的时候，你可以在站点上直接应用 <code>highlight.js</code> 的<a href="https://github.com/highlightjs/highlight.js/tree/master/src/styles">主题</a>。</p></blockquote><h2 id="PrismJS"><a href="#PrismJS" class="headerlink" title="PrismJS"></a>PrismJS</h2><pre class="line-numbers language-none"><code class="language-none"># _config.ymlhighlight:  enable: falseprismjs:  enable: true  preprocess: true  line_number: true  tab_replace: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>PrismJS 默认禁用。启用 PrimeJS 前应设置 <code>highlight.enable</code> 为 <code>false</code>。</p><h3 id="preprocess"><a href="#preprocess" class="headerlink" title="preprocess"></a>preprocess</h3><p>Hexo 内建的 PrismJS 支持浏览器端高亮（<code>preprocess</code> 设置为 <code>false</code>）和服务器端高亮（<code>preprocess</code> 设置为 <code>true</code>）两种方式。</p><p>使用服务器端高亮时（<code>preprocess</code> 设置为 <code>true</code>），只需要在站点引入 Prismjs 的主题（CSS 样式表）即可；而使用浏览器端高亮时（<code>preprocess</code> 设置为 <code>false</code>），需要将 JavaScript 文件也引入。</p><p>PrismJS 主要是面向浏览器的。因此，在服务器端高亮模式下只有部分插件可用：</p><ul><li><a href="https://prismjs.com/plugins/line-numbers/">行号显示</a>：需要引入<code>prism-line-numbers.css</code>，无需引入<code>prism-line-numbers.js</code>。Hexo 将生成其所需的 HTML 代码片段。</li><li><a href="https://prismjs.com/plugins/show-language/">语言显示</a>：当代码块有标注语言时，Hexo 总会添加 <code>data-language</code> 属性。</li><li>Hexo 也支持其它不需要特殊 HTML 代码格式的 PrismJS 插件，不过你需要引入它们的 JavaScript 文件。</li></ul><p><code>preprocess</code> 设置为 <code>false</code> 时所有 primejs 插件均可用，只需额外注意以下几点：</p><ul><li><a href="https://prismjs.com/plugins/line-numbers/">行号显示</a>：当 <code>preprocess</code> 设置为 <code>false</code> 时，Hexo 不会生成插件所需的 HTML 代码格式。<code>prism-line-numbers.css</code> 和 <code>prism-line-numbers.js</code>均需被引入。</li><li><a href="https://prismjs.com/plugins/show-language/">语言显示</a>：当代码块有标注语言时，Hexo 总会添加 <code>data-language</code> 属性。</li><li><a href="https://prismjs.com/plugins/line-highlight/">高亮特定行</a>: Hexo 的<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">代码块标签插件</a>和<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%8F%8D%E5%BC%95%E5%8F%B7%E4%BB%A3%E7%A0%81%E5%9D%97">反引号代码块标签插件</a>都支持高亮特定行的语法（即 <code>mark</code> 选项）。当 <code>mark</code> 项被设置时，Hexo 将生成其所需的 HTML 代码格式。</li></ul><h3 id="line-number-1"><a href="#line-number-1" class="headerlink" title="line_number"></a>line_number</h3><p>当 <code>preprocess</code> 与 <code>line_number</code> 均设置为 <code>true</code> 时，只需要引入 <code>prism-line-numbers.css</code> 即可启用行号显示。如果 <code>preprocess</code> 和 <code>line_number</code> 均被关闭，则需要将 <code>prism-line-numbers.css</code> 和 <code>prism-line-numbers.js</code> 都引入才能启用行号显示。</p><h3 id="tab-replace-1"><a href="#tab-replace-1" class="headerlink" title="tab_replace"></a>tab_replace</h3><p>用代码内的 tab (<code>\t</code>) 替换为给定值，默认值是两个空格。</p><h2 id="其它参考资料"><a href="#其它参考资料" class="headerlink" title="其它参考资料"></a>其它参考资料</h2><ul><li><a href="https://highlightjs.readthedocs.io/en/latest/">Highlight.js</a></li><li><a href="https://prismjs.com/">PrismJS</a></li></ul><p>Hexo 语法高亮部分的源码可参见：</p><ul><li><a href="https://github.com/hexojs/hexo-util/blob/master/lib/highlight.js">Highlight.js 工具函数</a></li><li><a href="https://github.com/hexojs/hexo-util/blob/master/lib/prism.js">PrismJS 工具函数</a></li><li><a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/tag/code.js">代码块标签插件</a></li><li><a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/filter/before_post_render/backtick_code_block.js">反引号代码块标签插件</a></li></ul><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：</p><h3 id="脚本（Scripts）"><a href="#脚本（Scripts）" class="headerlink" title="脚本（Scripts）"></a>脚本（Scripts）</h3><p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动载入。</p><h3 id="插件（Packages）"><a href="#插件（Packages）" class="headerlink" title="插件（Packages）"></a>插件（Packages）</h3><p>如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 <code>node_modules</code> 文件夹中建立文件夹，文件夹名称开头必须为 <code>hexo-</code>，如此一来 Hexo 才会在启动时载入；否则 Hexo 将会忽略它。</p><p>文件夹内至少要包含 2 个文件：一个是主程序，另一个是 <code>package.json</code>，描述插件的用途和所依赖的插件。</p><pre class="line-numbers language-none"><code class="language-none">.├── index.js└── package.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 属性，例如：</p><pre class="line-numbers language-none"><code class="language-none">package.json&#123;  &quot;name&quot;: &quot;hexo-my-plugin&quot;,  &quot;version&quot;: &quot;0.0.1&quot;,  &quot;main&quot;: &quot;index&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>您可以使用 Hexo 提供的官方工具插件来加速开发：</p><ul><li><a href="https://github.com/hexojs/hexo-fs">hexo-fs</a>：文件 IO</li><li><a href="https://github.com/hexojs/hexo-util">hexo-util</a>：工具程式</li><li><a href="https://github.com/hexojs/hexo-i18n">hexo-i18n</a>：本地化（i18n）</li><li><a href="https://github.com/hexojs/hexo-pagination">hexo-pagination</a>：生成分页资料</li></ul><h3 id="发布-1"><a href="#发布-1" class="headerlink" title="发布"></a>发布</h3><p>当您完成插件后，可以考虑将它发布到 <a href="https://hexo.io/plugins">插件列表</a>，让更多人能够使用您的插件。发布插件的步骤和 <a href="https://hexo.io/zh-cn/docs/contributing#%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6">更新文件</a> 非常类似。</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs/site</a></p></li><li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p><pre class="line-numbers language-none"><code class="language-none">$ git clone https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;site.git$ cd site$ npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>编辑 <code>source/_data/plugins.yml</code>，在档案中新增您的插件，例如：</p><pre class="line-numbers language-none"><code class="language-none">- name: hexo-server  description: Server module for Hexo.  link: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-server  tags:    - official    - server    - console<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>推送（push）分支。</p></li><li><p>建立一个新的合并申请（pull request）并描述改动。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux运维一天的工作时间是如何度过的？</title>
      <link href="/2021/10/12/linux-yun-wei-yi-tian-de-gong-zuo-shi-jian-shi-ru-he-du-guo/"/>
      <url>/2021/10/12/linux-yun-wei-yi-tian-de-gong-zuo-shi-jian-shi-ru-he-du-guo/</url>
      
        <content type="html"><![CDATA[<p>对于这个问题，我有相当的感触。在我面试了一些运维职位的同学以后，我觉得在中国，很大一部分运维的同学，都是每天过着我以下要提到的，我最不喜欢的最典型的一天。</p><p>我最不喜欢的一天：<br>早上一来到，刚坐下，被一个同事跑过来说一个需求打断一下。一位同事 im 上也提了一个需求。一位同事邮件上也提了一个需求。一位同事电话你也提了一个需求。好，默默地把这些需求记在 todo list 上。<br>刚坐下，临时被拉去开一次会，同事说要怎样怎样协助他。<br>刚回来，发现 10 分钟后有一个面试。<br>面试回来，发现 10 分钟后有一个计划中的会议。<br>会议回来，产品功能测试完毕，要协助上线操作。<br>上线过程没有标准化，生产环境出错，紧急回滚。<br>抓来这次上线相关人员，讨论为何会出现这样的事故，日后如何规避。<br>回来后，再次准备上线，这次上线过程全程跟进。<br>终于正常上线完成了。<br>噢，不。只是功能上线完成，原来还有一个很大的性能问题。继续救火。<br>调整参数，性能调优，服务器负载终于下去了。<br>看一下时间，已经差不多是下班的时间了。</p><p>对着一直在增长的 todo list ，一脸的茫然。</p><p>以上，略夸张，但是各种千奇百怪的中断，确实很可怕，各类中断还有上下文切换的。很多人就这样埋没在中断中了。  </p><p>个人认为一个运维最应该的一天工作时间安排：<br>20% ，处理紧急重要的事情。<br>80% ，开展重要不紧急的事情的工作。</p><p>紧急重要很容易理解，其实就是救火类工作。<br>重要不紧急的工作，才是最能体现运维的价值的工作。<br>监控系统，这个是一个大话题。除了被动地监控各类服务的正常与否，还有主动开发各类协助系统分析的系统，并对整个系统的未来有规划性。<br>性能调优，我最喜欢的一个方面。发现性能瓶颈，解决性能问题，都很喜欢。<br>开发工具型系统。提高自己，和团队内所有人的工作效率的一些工具。尤其是可以快速解决那些中断的工具。<br>学习。这个是最重要的。运维涉及的知识面非常广，不断学习才能顺利快速解决以上各类问题，不断尝试不断经历才有足够的经验遇神杀神，遇佛杀佛。一天一天，做好重要不紧急的工作，才能令到运维工作更有效率，整个系统更稳定，未来的发展更具有预见性。</p><p>1、全球化的认证有助于提升逼格，什么OCM、CCIE、RHCA、CISSP等等能考都考，再不济，也要有一张系统架构设计师或者网络规划设计师的信产部认证。每过一个认证，逼格提升一档。如果再有能一个211工程的MSC，那就再好不过了。</p><p>2、TCP/IP协议、Linux内核深入研究、ORACLE大全等等之类的超过1千页大本头的书能有效提升B格，一定要放手边。不懂不要紧，别人能看见就行了。真有人跟你谈这些，也别担心装B失败，谈网络就从TCP的实现谈起，谈Linux就从内存的管理谈起，谈数据库就从各数据库SQL语句的源码实现谈起。如果有人跟你谈MS的东西也不要紧，就说自己之前有多年的微软的工作经历，外包的也算。反正也不会有查。有人非要跟你谈硬件，最次也要从CPU的指令集的实现谈起吧。</p><p>3、大众化的东西要少用。能用ATS，就别用squid；能用postgresql，就别用MySQL；坚信什么nginx、lighty这种webserver要比apache好一万倍，而且apache能实现的功能，这些都能实现，不行就自己写模块、写扩展。实在要用apache，也别用高版本，抱死1.3的系统。有人要是问起，就说这是基于1.3的版是自己深度二次开发版本。实在要找不到的话也不要紧，没事在sf、oschina上看看什么下载量少的项目，背背项目简介啥的。不得不说，这两个网站太贴心，分类都给你做好了。总之，小众的东西能很有效的提升iBer的战斗力。</p><p>4、写脚本的话，别用grep、sort 、uniq、管道这类命令。iBer会选择使用纯粹的awk、sed的实现，长度不要紧，阅读性、性能也不是问题。功能实现了，别人都还不懂这就是关键。如果真有人来请教，也要装出一副很简单的表情。切记不要摇头尾巴晃。就算是你是从《sed和awk》这种书上抄你自己也不一定能看懂的代码。</p><p>5、虽然会shell，但也要少用shell。初级iBer，系统管理会首选perl、python、php这类3p的工具，而且要对shell这种语言有一种不屑。把什么性能、移植性、面向对象要常挂嘴边。,如果再能写二行什么erlang、ruby、lua这类语言做系统管理，绝对是iBer的装B神器，也是中级iBer的标准。高级IBer会有Haskell这类函数式语言进行系统管理，这绝对是装B的B2轰炸机呀。当然，资深iBer会返璞归真，使用面向对象进行shell编程。对，你没看错，是使用OO进行shell编程。</p><p>6、iBer对谈到Redhat、ubuntu这类大众发行版本时，会回复一个字“切！”LFS、Gentoo这类系统绝对是iBer们首选。不为什么，就为在无穷尽的编译中找到属于iBer的快感。如果非装大众发行版，iBer也会从开机画面、登陆提示等等地方打自己上深刻的烙印。iBer的寂寞岂是一般人能懂的。</p><p>7、iBer对什么checkpoint，juniper等表示不屑。必须天天把iptabes的链和表都挂在嘴边，尤其是mangle表。原则上对商用产品的一律不屑一顾，什么f5，radware一律自己开发实现。至于意外的将自己关在外面的事情一定要严格遵守各自公司的保密协议。</p><p>8、iBer的操作终端呢，像SecureCRT、xshell这种绝对是不用的，一定要用最原始的，什么黑屏绿字只是初级iBer的水平，中高级iBer的都是Alpha半透明终端，桌面背景在设置个全球internet流量趋势图。让你根本就不知道他天天对着屏幕在敲什么东西。有事没事编译一些大型软件，看着翻滚的屏幕做思考状。</p><p>9、名片的title一定要是系统架构师，没有名片也不要紧，什么QQ签名、人人状态、微博简介上，有人看的地方一定要写上。这些都是提升B格的好地方。</p><p>10、初级iBer谈流量、PV、自动化；中级iBer谈流程、谈规范，什么ITIL、ITSM要常挂嘴边；高级iBer谈架构、谈模式；资深iBer谈合同、谈成本。</p><p>11、混圈子对iBer来非常有必要的。什么XX沙龙、XX架构师大会、XX优化大会之类必要是常客，露个B脸就行。基本原则就是跟搞系统谈网络，跟搞网络的谈数据库，跟搞数据库的谈安全……对方不懂什么就谈什么对就了</p><p>12、骨灰级iBer早就超出三界外，不在五行中，他们注定有着传奇的色彩。他们正忙于对iBer们进行职业发展规划。iBer助理、iBer、高级iBer、资深iBer、iBer总监直至CBO。如果发展了到了CBO，那么你一定是一位惊天地、泣鬼神的一代B神，一统江湖的教主，供万千iBer敬仰。darling，我很看好你哟！</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 同事 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10年程序员老司机的酒后真言</title>
      <link href="/2021/07/14/10-nian-cheng-xu-yuan-lao-si-ji-de-jiu-hou-zhen-yan/"/>
      <url>/2021/07/14/10-nian-cheng-xu-yuan-lao-si-ji-de-jiu-hou-zhen-yan/</url>
      
        <content type="html"><![CDATA[<p>美国最大的论坛 Reddit，最近有一个热帖。</p><p>一个程序员说自己喝醉了，软件工程师已经当了10年，心里有好多话想说，”我可能会后悔今天说了这些话。”</p><p>他洋洋洒洒写了一大堆，获得9700多个赞。内容很有意思，值得一读，下面是节选。</p><p>（1）职业发展的最好方法是换公司。</p><p>（2）技术栈不重要。技术领域有大约 10-20 条核心原则，重要的是这些原则，技术栈只是落实它们的方法。你如果不熟悉某个技术栈，不需要过度担心。</p><p>（3）工作和人际关系是两回事。有一些公司，我交到了好朋友，但是工作得并不开心；另一些公司，我没有与任何同事建立友谊，但是工作得很开心。</p><p>（4）我总是对经理实话实说。怕什么？他开除我？我会在两周内找到一份新工作。</p><p>（5）如果一家公司的工程师超过 100 人，它的期权可能在未来十年内变得很有价值。对于工程师人数很少的公司，期权一般都是毫无价值。</p><p>（6）好的代码是初级工程师可以理解的代码。伟大的代码可以被第一年的 CS 专业的新生理解。</p><p>（7）作为一名工程师，最被低估的技能是记录。说真的，如果有人可以教我怎么写文档，我会付钱，也许是 1000 美元。</p><p>（8）网上的口水战，几乎都无关紧要，别去参与。</p><p>（9）如果我发现自己是公司里面最厉害的工程师，那就该离开了。</p><p>（10）我们应该雇佣更多的实习生，他们很棒。那些精力充沛的小家伙用他们的想法乱搞。如果他们公开质疑或批评某事，那就更好了。我喜欢实习生。</p><p>（11）技术栈很重要。如果你使用 Python 或 C++ 语言，就会忍不住想做一些非常不同的事情。因为某些工具确实擅长某些工作。</p><p>（12）如果你不确定自己想做什么东西，请使用 Java。这是一种糟糕的编程语言，但几乎无所不能。</p><p>（13）对于初学者来说，最赚钱的编程语言是 SQL，干翻所有其他语言。你只了解 SQL 而不会做其他事情，照样赚钱。人力资源专家的年薪？也许5万美元。懂 SQL 的人力资源专家？9万美元。</p><p>（14）测试很重要，但 TDD （测试驱动的开发）几乎变成了一个邪教。</p><p>（15） 政府单位很轻松，但并不像人们说的那样好。对于职业生涯早期到中期的工程师，12 万美元的年薪 + 各种福利 + 养老金听起来不错，但是你将被禁锢在深奥的专用工具里面，离开政府单位以后，这些知识就没用了。我非常尊重政府工作人员，但说真的，这些地方的工程师，年龄中位数在 50 岁以上是有原因的。</p><p>（16）再倒一杯酒。</p><p>（17）大多数头衔都无关紧要，随便什么公司都可以有首席工程师。</p><p>（18）手腕和背部的健康问题可不是开玩笑的，好的设备值得花钱。</p><p>（19）当一个软件工程师，最好的事情是什么？你可以结识很多想法相同的人，大家互相交流，不一定有相同的兴趣，但是对方会用跟你相同的方式思考问题，这很酷。</p><p>（20）有些技术太流行，我不得不用它。我心里就会很讨厌这种技术，但会把它推荐给客户，比如我恨 Jenkins，但把它推荐给新客户，我不觉得做错了。</p><p>（21）成为一名优秀的工程师意味着了解最佳实践，成为高级工程师意味着知道何时打破最佳实践。</p><p>（22）发生事故时，如果周围的人试图将责任归咎于外部错误或底层服务中断，那么是时候离开这家公司，继续前进了。</p><p>（23）我遇到的最好的领导，同意我的一部分观点，同时耐心跟我解释，为什么不同意我的另一部分观点。我正在努力成为像他们一样的人。</p><p>（24）算法和数据结构确实重要，但不应该无限夸大，尤其是面试的时候。我没见过药剂师面试时，还要测试有机化学的细节。这个行业的面试过程有时候很糟糕。</p><p>（25）做自己喜欢的事情并不重要，不要让我做讨厌的事情更重要。</p><p>（26）越接近产品，就越接近推动收入增长。无论工作的技术性如何，只要它接近产品，我都感到越有价值。</p><p>（27）即使我平时用 Windows 工作，Linux 也很重要。为什么？因为服务器是 Linux 系统，你最终在 Linux 系统上工作。</p><p>（28）人死了以后，你想让代码成为你的遗产吗？如果是那样，就花很多时间在代码上面吧，因为那是你的遗产。但是，如果你像我一样，更看重与家人、朋友和生活中其他人相处的时光，而不是写的代码，那就别对它太在意。</p><p>（29）我挣的钱还不错，对此心存感激，但还是需要省钱。</p><p>（30）糟糕，我没酒了。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 程序员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个人该如何更好地生活呢？</title>
      <link href="/2021/07/14/yi-ge-ren-gai-ru-he-geng-hao-di-sheng-huo-ne/"/>
      <url>/2021/07/14/yi-ge-ren-gai-ru-he-geng-hao-di-sheng-huo-ne/</url>
      
        <content type="html"><![CDATA[<p><strong>人生道路上没有人能永远陪伴自己，无论是培养还是家人，都有离开自己的一天，当自己一个人的时候该如何过得更好呢？很多人都很难承受孤独，那么这时候该如何过好个人生活呢？这里给大家简单介绍一下，希望对大家能有所帮助。</strong>  </p><h2 id="工具-原料"><a href="#工具-原料" class="headerlink" title="工具/原料"></a>工具/原料</h2><ul><li>内心足够强大。</li></ul><h2 id="方法-步骤"><a href="#方法-步骤" class="headerlink" title="方法/步骤"></a>方法/步骤</h2><ol><li><strong>方法一:一份稳定的收入。</strong> 一个人生活的时候是最能够让自己变得更为优秀的时候，也是最能积累自己资本的时候，所以在这样一个自己生活的时期，好好积累自己的小金库是非常重要的，你自己有资本了，别人才能接近你。</li><li><strong>方法二:与朋友常聚聚。</strong> 一个人久了也会有很多的朋友，无论男的女的都可以有很多，如果一个人心情不好，那么可以约他们出来一起去吃吃喝喝玩玩，排解一下自己内心的空虚，让自己活得更开心。</li><li><strong>方法三:充实自己的内心。</strong> 一个人时间最多了，但是可以利用这个时候好好充实自己，让自己变得更加强大，让自己可以一个人去探索更多未知的东西，也能让自己学习到更多，这是非常好的时期了。</li><li><strong>方法四:不要忧伤。</strong> 一个人虽然有的时候会觉得非常孤单孤独，但是很多时候又能非常自由，两个人或多人人生活都会有一些小的摩擦，而一个人会非常的舒服，没有人会限制自己的言行。</li><li><strong>方法五:让自己快乐。</strong> 一个最重要的是让自己过得快乐，这比什么都重要，不要让自己陷入很久的难过中，这很不值得，而应该让自己过得尽量的快乐。</li><li><strong>方法六:旅游。</strong> 一个人的旅游是非常酷的，也是非常快乐的事情，但是一定要注意自己的安全，最好可以结伴，不行也要保证自己有住的地方，出行的票也要买好，这样自己会玩得非常愉快的。 END</li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>  一个人的生活会很快乐的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自己 </tag>
            
            <tag> 内心 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖从物理蜗牛星际迁移到PVE photo station不显示相册解决</title>
      <link href="/2021/07/06/qun-hui-cong-wu-li-wo-niu-xing-ji-qian-yi-dao-pve-photo/"/>
      <url>/2021/07/06/qun-hui-cong-wu-li-wo-niu-xing-ji-qian-yi-dao-pve-photo/</url>
      
        <content type="html"><![CDATA[<p>刚开始蜗牛星际是DS918+ 6.22的引导和系统，迁移到PVE顺便升级到6.23 </p><p>迁移遇到的问题 </p><p>1、DS918+的引导必须使用UEFI模式，不然搜不到IP </p><p>2、直通i3 10100的核显没有驱动，导入大佬提供的i915显卡驱动（百度搜索就能得到，目前只有DS918的驱动） </p><p>3、硬盘需要直通SATA控制器，如果是添加PVE虚拟磁盘需要使用SATA模式   </p><p>一切安装和配置好发现打开photo station不显示相册，重新安装，重建索引和通过备份恢复依然没有效果，后来通过查看/var/log/messages日志发现有执行select查询数据库的错误 </p><p><img src="https://opstand.gitee.io/media/image/2021/7/vx1.png">   <img src="https://opstand.gitee.io/media/image/2021/7/vx2.png">   </p><p>根据错误知道数据库有错误，先把photo套件卸载，然后登陆到postgresql数据库把photo数据库删除，重新安装套件，然后等待重新索引即可 </p><p>相关命令需要在shell里面执行 </p><p>数据库登录  </p><p>psql -U postgres </p><p>删除photo数据库 </p><p>drop database photo </p><p>\list 列出所有数据库 </p><p>\quit退出</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ds </tag>
            
            <tag> photo </tag>
            
            <tag> pve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共享打印机安装 BAT脚本</title>
      <link href="/2021/02/22/gong-xiang-da-yin-ji-an-zhuang-bat-jue-ben/"/>
      <url>/2021/02/22/gong-xiang-da-yin-ji-an-zhuang-bat-jue-ben/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bat" data-language="bat"><code class="language-bat">@echo off rem 申请管理员权限 %1 mshta vbscript:CreateObject(&quot;Shell.Application&quot;).ShellExecute(&quot;cmd.exe&quot;,&quot;&#x2F;c %~s0 ::&quot;,&quot;&quot;,&quot;runas&quot;,1)(window.close)&amp;&amp;exit color 0a echo. title 打印机自动安装程序 echo. echo 正在安装打印机，请稍等…… echo. echo 如果杀毒软件拦截了，允许运行 echo. echo. echo .............................................. echo .............................................. rem 打印机IP set pip&#x3D;192.168.108.232 rem 打印机名称 set pname&#x3D;HP LaserJet 1018 echo 删除已经存在的同名打印机 rundll32 printui.dll,PrintUIEntry &#x2F;dl &#x2F;n &quot;%pname%&quot; &#x2F;q echo. echo 安装打印机...... echo. sc config spooler start&#x3D; auto net stop spooler &amp; net start spooler rem 只需替换以下ip、打印机名、帐号、密码为具体名称即可 &quot;passwd&quot; &#x2F;user:&quot;guest&quot; net use \\\\%pip%\\IPC$ rundll32 printui.dll,PrintUIEntry &#x2F;in &#x2F;n &quot;\\\\%pip%\\%pname%&quot; pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> echo </tag>
            
            <tag> 安装 </tag>
            
            <tag> 打印机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>切换网关菜单 BAT脚本</title>
      <link href="/2021/02/22/qie-huan-wang-guan-cai-dan-bat-jue-ben/"/>
      <url>/2021/02/22/qie-huan-wang-guan-cai-dan-bat-jue-ben/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bat" data-language="bat"><code class="language-bat">@echo off rem 申请管理员权限 rem %1 mshta vbscript:CreateObject(“Shell.Application”).ShellExecute(“cmd.exe”,”&#x2F;c %~s0 ::”,””,”runas”,1)(window.close)&amp;&amp;exittitle IP地址切换 color 80rem &#x2F;&#x2F;设置变量 set NAME&#x3D;”WAN” rem &#x2F;&#x2F;以下属性值可以根据需要更改 set ADDR&#x3D;192.168.1.250 set ADDR1&#x3D;172.16.200.250 set MASK&#x3D;255.255.255.0 set GATEWAY&#x3D;192.168.1.1 set GATEWAY1&#x3D;172.16.200.253 set DNS1&#x3D;114.114.114.114 set DNS2&#x3D;119.29.29.29 rem &#x2F;&#x2F;以上属性依次为IP地址、子网掩码、网关、首选DNS、备用DNSecho 当前可用操作有： echo 1 设置网关为172.16.200.253 echo 2 设置网关为192.168.1.1 echo 3 设置为动态IP echo 4 退出 echo 请选择后回车： set &#x2F;p operate&#x3D; if %operate%&#x3D;&#x3D;1 goto 1 if %operate%&#x3D;&#x3D;2 goto 2 if %operate%&#x3D;&#x3D;3 goto 3 if %operate%&#x3D;&#x3D;4 goto 4:1 echo 正在设置静态IP，请稍等… rem &#x2F;&#x2F;可以根据你的需要更改 echo IP地址 &#x3D; %ADDR%,%ADDR1% echo 掩码 &#x3D; %MASK% echo 网关 &#x3D; %GATEWAY1% netsh interface ipv4 set address %NAME% static %ADDR1% %MASK% %GATEWAY1% netsh interface ip add address %NAME% %ADDR% %MASK% echo 首选DNS &#x3D; %DNS1% netsh interface ipv4 set dns %NAME% static %DNS1% echo 备用DNS &#x3D; %DNS2% if “%DNS2%”&#x3D;&#x3D;”” (echo DNS2为空) else (netsh interface ipv4 add dns %NAME% %DNS2%) echo 静态IP已设置！ goto 4:2 echo 正在设置静态IP，请稍等… rem &#x2F;&#x2F;可以根据你的需要更改 echo IP地址 &#x3D; %ADDR%,%ADDR1% echo 掩码 &#x3D; %MASK% echo 网关 &#x3D; %GATEWAY% netsh interface ipv4 set address %NAME% static %ADDR% %MASK% %GATEWAY% netsh interface ip add address %NAME% %ADDR1% %MASK% echo 首选DNS &#x3D; %DNS1% netsh interface ipv4 set dns %NAME% static %DNS1% echo 备用DNS &#x3D; %DNS2% if “%DNS2%”&#x3D;&#x3D;”” (echo DNS2为空) else (netsh interface ipv4 add dns %NAME% %DNS2%) echo 静态IP已设置！ goto 4:3 echo 正在设置动态IP，请稍等… echo 正在从DHCP自动获取IP地址… netsh interface ip set address %NAME% dhcp echo 正在从DHCP自动获取DNS地址… netsh interface ip set dns %NAME% dhcp echo 动态IP已设置！ goto 4:4 pause exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rem </tag>
            
            <tag> set </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql主从同步方案</title>
      <link href="/2021/01/27/mysql-zhu-cong-tong-bu-fang-an/"/>
      <url>/2021/01/27/mysql-zhu-cong-tong-bu-fang-an/</url>
      
        <content type="html"><![CDATA[<p> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370257.png"> 1、高可用软件heartbeat,HA不但负责VIP的切换，还要负责数据库，DRBD服务的管理。 2、主库故障后业务自动切换到Backup,Slavel/2依然可以和新的主库同步。 3、Slavel/2支持读写分离，但是必须在程序上实现。 4、此方案也支持实时和异步写入。  MySQL第三方基于SAN共享存储高可用方案（一） <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370253.png"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370219.png"> 1、高可用软件：RedHat Cluster Site 2、BackuP无法正常开启。 3、Slavel/2支持读写分离． 4、业务依赖SAN存储。  MySQL第三方基于DNS解析高可用方案（一） <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370349.png">  MySQL第三方基于DBProxy高可用方案 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370329.png">  MySQL第三方分布式数据库高可用方案 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370368.png">  MySQL第三方分布式数据库集群百度二期案例 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370472.png">  MySQL第三方基于Galera高可用方案 架构方案：Ga1era是一套在MySQL InnoDB上面实现Multi-master且Synchronousreplication的集群系统。 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370464.png"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370483.png">  MySQL官方cluster高可用方案 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370418.png">  MySQL高可用架构方案的选择依据 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370519.png"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370551.png"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370542.png"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603370582.png"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这些年从弱电到网管再到Linux运维之路</title>
      <link href="/2021/01/26/zhei-xie-nian-cong-ruo-dian-dao-wang-guan-zai-dao-linux-yun/"/>
      <url>/2021/01/26/zhei-xie-nian-cong-ruo-dian-dao-wang-guan-zai-dao-linux-yun/</url>
      
        <content type="html"><![CDATA[<h2 id="这些年从弱电到网管再到Linux运维之路"><a href="#这些年从弱电到网管再到Linux运维之路" class="headerlink" title="这些年从弱电到网管再到Linux运维之路"></a>这些年从弱电到网管再到Linux运维之路</h2><p>转载自 <a href="https://bbs.51cto.com/thread-1592000-1-1.html">https://bbs.51cto.com/thread-1592000-1-1.html</a></p><p>最近公司不忙，到51翻着以前发过的帖子，不经感慨自己工作已经8年多了。从最初拿着2000块不到扛着网线、冲击钻去拉线、装摄像头的弱电公司到后来到甲方去担任IT，一步步的把公司的信息化搞起来，再到现在在一家互联网公司做Linux运维，从出处校园的毛头小子到如今媳妇快要生二娃的奶爸。</p><p>想想这一路走来真的不容易。有悲有喜，有精彩也有失落。待我好好梳理一番，把这些年的经历和大神们唠叨一下，欢迎大家吐槽。</p><p>首先挖下坟，大家看下我之前的几个帖子从弱电到IT。</p><p>1、晒一晒那些年做过的弱电工程</p><p>2、管了快4年的机房和设备</p><p>3、也说网管一天的流水账</p><p>2019年8月14日更新： <strong>2009年中—2010年底</strong>实习的时候老师推荐去了一家本以为是做路由交换调试的公司，面试的时候还傻兮兮的说自己会调试啥啥啥交换机，看着面试官(其实就是哪个公司的老板)频频点头，我“如愿”的进入了这家公司，并加入了工程部。接下来的一年多时间里哥们从帮老大们放线开始，慢慢的到会自己装摄像头、打配线架再到后来慢慢的带着工人开着车出去干活。一直到离职前已经能独自负责150路口的道路监控系统(从带队到和甲方沟通，做技术文档等)和一家公司整个弱电系统。那段时间虽然每天很累，但也系统的了解了整个弱电系统从开始到结束的整个流程，对后面的帮助很有帮助。就这样带着对薪资的不满我离职了。这一年的点点滴滴见上面的那些年做过的弱电工程帖。</p><p><strong>2011年初—2012年中</strong> 这份工作是在一家事业单位的酒店做网管，本人在校期间一直有帮老师管理学校机房啥的，日常修个电脑，搞个打印机，再加上之前的弱点经验，这份工作做起来还算得心应手。整个酒店办公大概30多台老破旧电脑，加上一个机房（各个客房的网络口、卫星电视系统、OA、网站、还有个金蝶再加上酒店的西软系统），东西不算多，但是每天也很忙。各种网络卡、客房不能上网，N次的调整位置需要更移电话等等一些烦而琐碎的事情。 这种情况持续了大概半年多，终于在我的强烈建议下，酒店更换了出口防火墙，隔离了办公和客房网络，解决了客房网一直存在的arp问题，并在同年完成了机房电话线路重整等问题。空闲的时候考了个CCNA，平时没事就研究下公司那几台windows服务器，也算是为下一份工作做了铺垫。</p><p><strong>2012年中—2016年底</strong> 这家公司是中午去面试的，下午就给了offer，速度还挺快，估计是看中了我多年的弱点经验和一点服务器的经验吧。 简单的说下这家民企的情况：该公司信息化项目开始于2011年，当时在只有一个IT的情况下完成了各种基础环境的搭设（域、邮件、OA、ERP），之后2012年我入职后和同事对公司的基础网络环境进行了改造，添置新的交换机、路由器，划分网段，还花钱买了台行为管理。接着2013-2014年，由于新业务的上线以ERP系统的升级，又添置了几台服务器，搭建了文件服务器、并对域服务器进行了升级，加了台BDC，并且还和和两个分公司建立了ipsec 。2015年的时候全公司采购了企业级的防病毒软件，购买了赛门铁克备份一体机，添置了SSL设备，加强了整个公司的安全防范。 说实在的，在这家公司是自己一个重要的拐点，作为一个IT人员，期间该接触的都接触到了，该用的也都用到了，挺庆幸自己有这么一段经历。期间自己考了软考的中级网络工程师。随着15年后娃的出生，生活上的压力也越来越大，身旁不时传来某某某同学去了上海啥啥的，自己在认真的思考和做了媳妇N多工作后于16年年底离职了。带着这份宝贵的工作经验来到了魔都。留下了那篇管了4年多的设备一贴。</p><p>2019年8月19日更新： <strong>2016年底—–现在</strong>看着同窗好友都去了上海，16年底带着几年的工作经验开始在各大招聘网站上投简历，面试了几家，感觉还不错。正准备和一家进一步交流的时候，突然来了个电话主动找上门来。一番了解下来，对方是个上市公司旗下刚刚成立的全资子公司，清一色的海龟背景，老总还特地从德国电话面试，说是成立初期需要一个懂IT方面的人来规划前期的信息化建设，本来想着不想再入这个坑，但对方说公司后续会有开发项目，运维这一块也会让我负责。回家和媳妇商量了一番，最终16年11月份决定入职。 入职后发现才10来个人，总感觉有点入坑的感觉。但既来之则安之，在16年11月份到17年9月份的10个月时间里将公司的文件服务器、邮件服务器、以及新办公室的网络等各种信息化基础环境搭建起来了。这段时间的自己内心很焦虑，一度想过辞职。但在媳妇的谆谆教导下还是坚持了下来。期间拿起了荒废好久的linux书一顿猛学。 17年9月公司终于迎来了第一个开发项目，招了3个开发人员，我的活也慢慢的多起来了。公司购买了服务器搭建了ESXI虚拟化集群用来左开发环境，在腾讯云购买了CVM主机做生产环境，接下来mongodb、redis、nginx、lvm负载均衡等在边看书边实验的基础下慢慢的起来了，这个时候的系统发布还是手动的。 18年开春公司接连接到了两个项目，而且用的是微服务架构并且需要docker容器化部署，又是一顿操作猛如虎，白天干活，晚上学习。公司的运维框架在我的努力下一步步的搭建起来。到目前公司的基本发布流程就是开发人员提交代码后，首先sonar会去扫描代码的规范性，接下来jenkins没5分钟扫描一下gitlab仓库，发现代码变动后自动调用jenkinsfile进行编译，编译后之后再打包成docker镜像并标记tag，然后上传到harbor镜像仓库，k8s集群检测到镜像tag发生变化后自动去仓库拉取最新的docker镜像并替换掉原来的来完成系统的发布。 目前公司本地大概15台服务器，腾讯云、阿里云加上华为云大概100台服务器（90%linux系统），这两年多在公司里学到了很多很多的东西，运维不单单只是单纯的敲敲linux，需要根据业务本身来确定方向，我们最早用的是程序打包后把jar包手动拷贝到服务器慢慢的进化到使用jenkins自动编译再到后来的打包成docker镜像并用了K8S容器集群，一步步走来要学的东西很多。前路漫漫。。。。</p><p>最后说下大家关心的薪资问题：2009实习—2012年差不多每个月3000不到，每天有苦又累，2012年—2016年，在这家公司呆了4年从3500到离职的时候6000，目前这家公司从16年底入职的8k到转正后的10k，到后来的13k，再到15k、20k。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 弱电 </tag>
            
            <tag> 网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql多实例安装</title>
      <link href="/2021/01/26/mysql-duo-shi-li-an-zhuang/"/>
      <url>/2021/01/26/mysql-duo-shi-li-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL数据库多实例介绍及安装"><a href="#MySQL数据库多实例介绍及安装" class="headerlink" title="MySQL数据库多实例介绍及安装"></a><a href="https://www.cnblogs.com/wangke2017/p/9482161.html">MySQL数据库多实例介绍及安装</a></h1><h4 id="1-mysql多实例实质"><a href="#1-mysql多实例实质" class="headerlink" title="1.mysql多实例实质"></a>1.mysql多实例实质</h4><p>在一台机器上开启多个不同的mysql服务端口（3306,3307），运行多个mysql服务进程，这些服务进程通过不同的socket监听不同的服务端口来提供各自的服务； </p><p>多个实例共用一套mysql安装程序，配置文件可以用同一个（最好不同），启动程序可以用同一个（最好不同），数据文件是不同的； </p><p>服务器的硬件资源是公用的； 逻辑上多实例是各自独立的</p><h4 id="2-多实例的作用"><a href="#2-多实例的作用" class="headerlink" title="2.多实例的作用"></a>2.多实例的作用</h4><p>有效利用服务器资源；                                  </p><p>#每台服务器的资源利用率要高 节约服务器资源； 但是多实例会存在资源互相抢占问题，当某个服务实例并发很高或者有慢查询时，会消耗整台服务器更多的内存、CPU等，导致其他实例运行也慢</p><h4 id="3-多实例的应用场景"><a href="#3-多实例的应用场景" class="headerlink" title="3.多实例的应用场景"></a>3.多实例的应用场景</h4><p>资金比较紧张的公司； 并发访问不是特别大的业务； </p><p>门户网站一般会采取：目的是配硬件好的服务器，节省IDC机柜空间，让硬件资源不浪费</p><h4 id="4-mysql多实例常见配置方案"><a href="#4-mysql多实例常见配置方案" class="headerlink" title="4.mysql多实例常见配置方案"></a>4.mysql多实例常见配置方案</h4><p>1）通过多个配置文件及多个启动程序来实现多实例                 </p><p>#生产中比较推荐此方法，本随笔中也将采取此方法 2）单一配置文件方案即一个配置文件里写多个实例的内容      </p><p>#通过mysqld_muti参数实现，此方法耦合性太高</p><h4 id="5-安装多实例数据库"><a href="#5-安装多实例数据库" class="headerlink" title="5.安装多实例数据库"></a>5.安装多实例数据库</h4><p>#生产硬件配置，32G MEM 8 CPU，硬盘6*600g  SAS 15k，跑2-3个实例 </p><p>1）安装好cmake及mysql依赖的包 </p><p>yum install ncurses-devel -y yum install libaio-devel -y </p><p>2）创建mysql多实例数据文件目录      </p><p>#此过程依赖于已经安装好mysql软件的单实例环境 </p><p>采用/data目录作为mysql多实例总的数据文件根目录 pkill mysqld                                         </p><p> #创建前需把创建好的mysql单实例杀掉 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414070.png" alt="IMG_256"> rm -f /etc/init.d/mysqld                          #删除单实例时的启动命令 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414039.png" alt="IMG_257"> mkdir -p /data/{3306,3307}/data tree /data <img src="https://opstand.gitee.io/media/uploads/2021/01/202101260341419.png" alt="IMG_258"> chown -R mysql.mysql /data                 </p><p>#授权data目录 </p><p>3）创建mysql配置文件并配置环境变量 </p><p>分别在/data/3306和/data/3307下创建my.conf文件 不像单实例放在/etc/下       </p><p> #my.cnf中主要修改port和server-id <img src="https://opstand.gitee.io/media/uploads/2021/01/202101260341412.png" alt="IMG_259"> echo ‘export PATH=/application/mysql/bin:$PATH’ &gt;&gt;/etc/profile                       </p><p>#环境变量设置单实例已设置 </p><p>4）初始化数据文件 初始化命令同单实例，只是更改数据路径： </p><p>在/application/mysql/scripts下执行./mysql_install_db –basedir=/application/mysql –defaults-file=/data/3306/my.cnf –datadir=/data/3306/data –user=mysql             </p><p>#同理实现3307初始化 #初始化的目的就是为了生成存放文件的地方，结果就是在/data下生成了一些系统化的文件 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414142.png" alt="IMG_260"> 5）配置开机自启动脚本&amp;启动多实例 </p><p>cd /home/coco/tools/mysql-5.5.32 /bin/cp support-files/mysql.server /data/3306/mysql /bin/cp support-files/mysql.server /data/3307/mysql <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414185.png" alt="IMG_261"> find /data/ -type f -name “mysql” xargs chmod +x                             #给启动文件授权执行权限 find /data/ -type f -name “mysql” xargs ls -l <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414214.png" alt="IMG_262"> 启动数据库： </p><p>/data/3306/mysql start /data/3307/mysql start netstat -lntupgrep 330[6-7] </p><p>多实例启动文件的启动mysql服务实质                        </p><p>#这里直接采用mysqld_safe启动多实例 </p><p>mysqld_safe –defaults-file=/data/3306/my.cnf 2&gt;&amp;1 &gt; /dev/null &amp; mysqld_safe –defaults-file=/data/3307/my.cnf 2&gt;&amp;1 &gt; /dev/null &amp; </p><p><img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414292.png" alt="IMG_263"> 6）登录多实例数据库 mysql -S /data/3306/mysql.sock             </p><p>#多实例的登录一定要指定特定的socket </p><p>mysqladmin -u root -S /data/3306/mysql.sock password ‘oldboy123’       </p><p>#多实例为root增加密码 </p><p>mysql -uroot -p’oldboy123’  -S /data/3306/mysql.sock                      </p><p>#密码外侧的单引号可省略 </p><p>#为了确保账户安全，因此要将启动脚本改权限，只有root可以更改密码：</p><p> find /data -type f -name “mysql” -exec chmod 700 {} \. </p><p>find /data -type f -name “mysql” -exec chown root.root {} \. </p><p>find /data -type f -name “mysql” -exec  ls -l  {} \. 7）</p><p>停止多实例数据库 多实例启动文件的停止mysql服务： </p><p>mysqladmin -u root -poldboy123 -S /data/3306/mysql.sock shutdown </p><p>mysqladmin -u root -poldboy123 -S /data/3307/mysql.sock shutdown </p><p><img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414234.png" alt="IMG_264"> 8）如果mysql服务没有起来，排查办法如下： </p><p>8.1）若发现没有mysql的端口，等几秒再看，可能是会比较慢 </p><p>8.2）查看错误日志，该日志路径在my.cnf最下面可以看到</p><p> grep log-error my.cnftail -l &gt;&gt;log-error=/data/3306/mysql_coco.err </p><p>8.3）前面每行命令执行的返回结果是否有错误 </p><p>8.4）查看系统的/var/log/messages </p><p>#Linux中可以用vimdiff   file1  file2 来同时对比两个文件内容        %附件为3306和3307两个实例的my.cnf对比 <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414260.png" alt="IMG_265"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414332.png" alt="IMG_266"> <img src="https://opstand.gitee.io/media/uploads/2021/01/2021012603414432.png" alt="IMG_267"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务 </tag>
            
            <tag> mysql </tag>
            
            <tag> 实例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对实施运维的一点心得体会</title>
      <link href="/2021/01/22/dui-shi-shi-yun-wei-de-yi-dian-xin-de-ti-hui/"/>
      <url>/2021/01/22/dui-shi-shi-yun-wei-de-yi-dian-xin-de-ti-hui/</url>
      
        <content type="html"><![CDATA[<p>好多人都说，知识必须得有个架构才行，不然就是“一盘沙”，自我感觉也是，感觉什么都会点，可是做起来，却那个都很费劲很费劲，其中吃的苦大概只有自己心中清楚。</p><p>做了十年的开发，突然发现实施运维这块的工作还是比较适合自己，起码适合自己的性格，也适合目前的状态（即不想做开发，也没平台让自己去当开发的项目经理），算是一种新的出路。</p><p>经历这快两年的实施运维，体会也颇深，同时也发现自己能力的不足，不仅是技术上的不足，还有对复杂局面的处理、如何梳理当前的工作情况等等。新的一年即将到来，我想着手改变这些，总结过去的以各种磨难换来的不易经验。自己的路是自己走出来的，别人永远也给不了。</p><p>刚开始，总觉得自己有10年的软件开发经验，做起运维来应该是没啥难度，可是经历了这两年才发现，还需要自己掌握的技能还很多：</p><p>1、积极的心态</p><p>干工作或者说做任何事情，没有一颗积极心态，做什么事情都会提不起精神，总感觉忙忙碌碌的，却又感觉自己什么事情也没做，及至出现怠工现象；干工作心中永远也别想着是给别人打工，心情好了多干点，不好了少干点，这样的话吃亏的是自己，而不是老板，因为自己的青春就耗在那，等自己上了一定的岁数，才发现自己啥也不会，到那时一切心中充满的是一切悔恨（或许目前的自己就是这种状态）。</p><p>2、对软件系统开发语言的熟悉</p><p>这个就不必多说了，如果对系统开发语言都不熟，做一般实施运维还行，如果想做大神级的，则明显就是一个短板。</p><p>3、对软件使用的数据库的熟悉</p><p>这个也是必修课，不管是实施还是运维都需要跟数据库打交道，尤其是运维，系统一旦出问题，数据库的备份、还原就会显得是多么的重要。</p><p>4、对软件的安装、培训、接口联调</p><p>对软件的安装一定要做好记录，详细记录目前更新的要点及相应的文件，这点对于系统还原、测试/正式环境、工作内容汇报都有着极其重要的作用，如果公司没有比较好的系统对其进行记录，则建议用Excel做好相应的记录，明确记录更新点、更新文件、更新SQL。</p><p>对软件的使用培训，这块做好系统使用手册、培训人员登记表（签到表）、培训现场照片采集就可以。</p><p>涉及接口联调的，一定要做好联调内容统计工作、做好困难点统计、未/需解决问题统计等工作；</p><p>a. 做好联调前的技术准备，尤其是技术对接文档要做好，不然对方都不知道如何与之对接；</p><p>b. 做好对系统、数据库的熟悉，不然会被对方的大神，问的哑口无言；</p><p>c. 联调过程中，一定要做好联调数据的统计工作，做了多少条数据，已经发给对方了几条、对方收到了几条、发现了那些问题、测试了那些问题、解决了那些问题、未解决那些问题、需协调的问题、未解决的原因，这些统计工作绝对会帮助你，帮助你了解当前的状况，帮助你说明一切，帮助自己面对各种复杂的、不可描述的情景时还能稳稳的面对。</p><p>d. 联调快结束时，如果时间、精力容许，一定要进行压力测试（批量数据联调）</p><p>5、对客户反馈问题、需求的收集</p><p>对客户反馈的问题及新的需求一定要整理好，同时发给相应的人员，对方的回复也一定要收集记录好，并给客户一个明确回复，让客户知道你再重视对方，这点很重要。</p><p>6、及时做好对客户、领导的工作汇报</p><p>针对工作情况，要给公司领导及客户做好相应的汇报，不然对方对你干了什么都不清楚，有时候会产生误解：这人经常忙，可是不见东西，同时，出了问题，也会怀疑你头上，而不是想到其他方面上去。</p><p>说实话有些时候，汇报工作真的不好做，做了会伤对方，不做又怕领导误解，更会担心自己在汇报工作的时候，用错了词，被对方抓住而被对方反击；甚至有时候会出现你用的措辞比较严厉时，对方也会瞅中机会反击你一下，找茬无时不在。</p><p>面对复杂局面的处理，当沉住气，冷静面对现状，对领导做如实汇报，工作汇报的时候，尽量要有理、有据，同时也要勇敢承担责任，不要怕承担责任，不要采取各种撒谎、抹黑他人的做法，这种做法的后果，虽然一时很美，但是往往是给自己挖了一个很大的坑。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自己 </tag>
            
            <tag> 运维 </tag>
            
            <tag> 适合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十条远离故障的运维工作经验分享</title>
      <link href="/2020/11/22/shi-tiao-yuan-li-gu-zhang-de-yun-wei-gong-zuo-jing-yan-fen/"/>
      <url>/2020/11/22/shi-tiao-yuan-li-gu-zhang-de-yun-wei-gong-zuo-jing-yan-fen/</url>
      
        <content type="html"><![CDATA[<p><strong>运维故障是DBA和运维人员心中永远的痛，而避免故障的方法却有迹可循。下面是本人总结的十条远离故障的运维工作经验。</strong></p><ol><li>确保变更可以回滚</li></ol><p>佛说：“每次创伤都是一次成熟”。这是运维人员的真实写照。从某种意义上讲，运维是一份不断犯错、不断积累经验的工作。以前没有经历的东西，总是不定期的给你痛击。所以请保护好变更的现场，使得变更有回头的机会。</p><ol start="2"><li>小心破坏性的操作</li></ol><p>什么是破坏性的操作？比如：对 Oracle 而言，有truncate table_name，delete table_name，drop table_name。这些语句执行起来轻松简单也惬意极了，但记住：即便数据可被回滚，其代价也是非常大！</p><p>对Linux而言，“rm -r” 将删除当前及其子目录的所有数据。有过这种教训的，一般都会给rm起个别名，如 alias rm=’rm -i’。同理，对cp和mv也可以这样做： alias cp=’cp -i’ alias mv=’mv -i’</p><ol start="3"><li>设置好命令提示</li></ol><p>在操作之前，先弄清楚所在的是主库还是备库？当前目录是什么？哪个schema？session？时间？ 比如，对Oracle来讲： idle&gt; set sqlprompt ‘RAC-node1-primary@10g&gt;&gt;’ RAC-node1-primary@10g&gt;&gt;</p><p>当然，你也可以在glogin.sql里面对其设置。</p><p>对Linux而言，可通过设置PS1来知道当前目录、登陆用户名和主机信息等。更多有关的PS1信息请参见：man PS1</p><ol start="4"><li>备份并验证</li></ol><p>人非圣贤，岂能无过？是机器总有计划内或计划外崩溃的一天。怎么办？备份！！！ 备份的学问很大，按照不同的维度可以分冷备和热备、实时和非实时、物理和逻辑。</p><p>OLTP 7*24 在线业务，DB 就需要有实时热备。这样就可以了吗？开发人员的一个不带任何条件的 delete 还是会误删所有数据。 所以，此时你除了实时备份还需要有非实时的备份。</p><p>备份有了，可以高忱无忧了吗？不行！尚须验证备份的有效性。总有那么几次备份无法保证100%恢复。简单的验证就是找个空库并恢复出来。</p><ol start="5"><li>对生产环境永保敬畏之心</li></ol><p>会计人员在从业之前，都有个职业操守的训练。同理这也应该是运维人员进入行业前首先需要具备的素养。比如：于Oracle而言，你可以跑一个RDA巡检DB的健康状况。 对Linux而言，是否有password aging，隔离外网等。</p><ol start="6"><li>交接和休假最容易出故障，变更请谨慎</li></ol><p>接手别人的工作要一而再，再而三的确认变更方案。请教人并不见得就是能力不行的表现。休假前最好各种可以做好的事情，最好能够准备一份文档，指明在什么情况下怎么做和联系哪些人。在别人放假的时候接手工作，“能拖则拖”，实在需要执行，必须不厌其烦的跟原运维者确认各个操作细节。</p><ol start="7"><li>搭建报警，及时获取出错信息；搭建性能监控，预测趋势</li></ol><p>运维人员赖于生存的工具就是报警和监控。</p><p>报警可以让你及时知道系统出现了什么异常，以便及时跟进和把故障扼杀于摇篮。</p><p>监控可以让你了解系统的历史性能信息，以历为鉴，可以知兴替和早做优化。</p><p>报警和优化是衣宽带水的好兄弟，它们相铺相成、互相促进。</p><ol start="8"><li>自动切换需谨慎</li></ol><p>例如，Oracle存储级的HA方案：Data Guard。主库提交了一笔订单，结果发生了switchover，这笔订单没有同步到备库。 那么卖家损失了一个销售单。这对对客户和公司都是损失。</p><ol start="9"><li>仔细一点、偏执一点、检查、检查、再检查</li></ol><p>有这么一个人：</p><p>1）做一个变更的时候，会先提前一两周发送邮件并电话手机通知相关人； 2）在测试机上写好脚本，召集大家review操作步骤和脚本； 3）测试完成以后拷贝到生产环境； 4）登录对应机器，“打开、关闭、打开、关闭”该脚本。 5）跟相关人员再次确认执行的操作、顺序、时间点、可能的影响和回滚是否都准备好了； 6）执行前还要退出这个机器，然后再登录进去，“打开，关闭”脚本； 7）最后才在后台运行脚本，同时在另外一个窗口登录，随时ps和查看结果输出。</p><p>期间姿势端正，呼吸急促而均匀，眼神凝重。操作的人不觉得累，倒是一边学习的人很累。</p><ol start="10"><li>简单即是美</li></ol><p>这有点禅的意境，和GNU/Linux的思想不谋而合。</p><p>我们总是面临各种诱惑：新的系统架构、新的更智能的命令和工具、最新的硬件平台、功能更全的HA软件。。。 你可以在线下安装、测试；怎么搞都行。但是如果想要在生产环境下使用起来，请三思！！</p><p>能够使用系统内置命令的话，就不用考虑其他要专门下载安装的软件了。 脚本本身就能完成的功能，就没有必要专门找一个功能丰富的软件来做。 linux本身自带的字符界面比那些复杂的图形界面要简洁方便。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> name </tag>
            
            <tag> table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle备份的几种方式</title>
      <link href="/2020/11/22/oracle-bei-fen-de-ji-zhong-fang-shi/"/>
      <url>/2020/11/22/oracle-bei-fen-de-ji-zhong-fang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle备份的几种方式"><a href="#Oracle备份的几种方式" class="headerlink" title="Oracle备份的几种方式"></a>Oracle备份的几种方式</h1><p>这里使用Oracle 12C来大概演示说明一下rman的基本用法，这里不会深入讨论，因为本人也只是刚刚才接触，只是结合了网上的一些文章以及自己的实践来总结并拿出来大家学习，谢谢</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a><strong>目录</strong></h3><ul><li>一、关于备份与恢复</li><li>二、逻辑备份（expdp和impdp）</li><li>三、物理备份</li><li>四、数据库日常备份计划及脚本参考</li></ul><h4 id="一、关于备份与恢复"><a href="#一、关于备份与恢复" class="headerlink" title="一、关于备份与恢复"></a><strong>一、关于备份与恢复</strong></h4><h5 id="1、备份定义"><a href="#1、备份定义" class="headerlink" title="1、备份定义"></a><strong>1、备份定义</strong></h5><p>备份就是把数据库复制到转储设备的过程。其中，转储设备是指用于放置数据库副本的磁带或磁盘。通常也将存放于转储设备中的数据库的副本称为原数据库的备份或转储。备份是一份数据副本</p><h5 id="2、备份分类"><a href="#2、备份分类" class="headerlink" title="2、备份分类"></a><strong>2、备份分类</strong></h5><p><strong>从物理与逻辑的角度来分类：</strong> 从物理与逻辑的，备份可以分为物理备份和逻辑备份。 <strong>物理备份</strong>：对数据库操作系统的物理文件（数据文件，控制文件和日志文件）的备份。物理备份又可以分为脱机备份（冷备份）和联机备份（热备份），前者是在关闭数据库的时候进行的，后者是以归档日志的方式对运行的数据库进行备份。可以使用oracle的恢复管理器（RMAN）或操作系统命令进行数据库的物理备份。 <strong>逻辑备份</strong>：对数据库逻辑组件（如表和存储过程等数据库对象）的备份。逻辑备份的手段很多，如传统的EXP，数据泵（EXPDP），数据库闪回技术等第三方工具，都可以进行数据库的逻辑备份。</p><p><strong>从数据库的备份角度分类：</strong> 从数据库的备份角度，备份可以分为完全备份和增量备份和差异备份 <strong>完全备份</strong>：每次对数据库进行完整备份，当发生数据丢失的灾难时，完全备份无需依赖其他信息即可实现100%的数据恢复，其恢复时间最短且操作最方便。 <strong>增量备份</strong>：只有那些在上次完全备份或增量备份后被修改的文件才会被备份。优点是备份数据量小，需要的时间短，缺点是恢复的时候需要依赖以前备份记录，出问题的风险较大。 <strong>差异备份</strong>：备份那些自从上次完全备份之后被修改过的文件。从差异备份中恢复数据的时间较短，因此只需要两份数据—最后一次完整备份和最后一次差异备份，缺点是每次备份需要的时间较长。</p><h5 id="3、恢复定义"><a href="#3、恢复定义" class="headerlink" title="3、恢复定义"></a><strong>3、恢复定义</strong></h5><p>恢复就是发生故障后，利用已备份的数据文件或控制文件，重新建立一个完整的数据库</p><h5 id="4、恢复分类"><a href="#4、恢复分类" class="headerlink" title="4、恢复分类"></a><strong>4、恢复分类</strong></h5><p><strong>实例恢复</strong>：当oracle实例出现失败后，oracle自动进行的恢复 介质恢复：当存放数据库的介质出现故障时所作的恢复。介质恢复又分为完全恢复和不完全恢复 <strong>完全恢复</strong>：将数据库恢复到数据库失败时的状态。这种恢复是通过装载数据库备份并应用全部的重做日志做到的。 <strong>不完全恢复</strong>：将数据库恢复到数据库失败前的某一时刻的状态。这种恢复是通过装载数据库备份并应用部分的重做日志做到的。进行不完全恢复后，必须在启动数据库时用resetlogs选项重设联机重做日志。</p><h4 id="二、逻辑备份（expdp和impdp）"><a href="#二、逻辑备份（expdp和impdp）" class="headerlink" title="二、逻辑备份（expdp和impdp）"></a><strong>二、逻辑备份（expdp和impdp）</strong></h4><h5 id="1、expdp-impdp和exp-imp的区别"><a href="#1、expdp-impdp和exp-imp的区别" class="headerlink" title="1、expdp/impdp和exp/imp的区别"></a><strong>1、expdp/impdp和exp/imp的区别</strong></h5><ol><li>exp和imp是客户端工具程序，它们既可以在客户端使用，也可以在服务端使用。</li><li>expdp和impdp是服务端的工具程序，他们只能在oracle服务端使用，不能在客户端使用。</li><li>imp只适用于exp导出的文件，不适用于expdp导出文件；impdp只适用于expdp导出的文件，而不适用于exp导出文件。</li><li>对于10g以上的服务器，使用exp通常不能导出0行数据的空表，而此时必须使用expdp导出。</li></ol><p>本节主要讲解的是expdp/impdp的用法，不涉及到exp和imp</p><h5 id="2、导出数据"><a href="#2、导出数据" class="headerlink" title="2、导出数据"></a><strong>2、导出数据</strong></h5><p>在准备要备份的数据库服务器上创建备份目录（在后面使用sql命令创建的逻辑目录并不是在OS上创建目录，所以我们先要在服务器上创建一个目录）</p><p># su oracle</p><p>$ mkdir /home/oracle/oracle_bak</p><p>用管理员身份登录到sqlplus</p><p>$ sqlplys /nolog</p><p>SQL&gt; conn sys/oracle as sysdba</p><p>创建逻辑目录</p><p>SQL&gt; create directory data_dir as ‘/home/oracle/oracle_bak’;</p><p>查看管理员目录是否存在</p><p>SQL&gt; select * from dba_direcories;</p><p>使用管理员用户给指定的用户赋予在该目录的操作权限（比如该用户需要备份自己的数据）</p><p>SQL&gt; grant read,write on directory data_dir to C##BAK_TEST_USER;</p><p>导出可有五种方式 1、“full=y”，全量导出数据库</p><p>$ expdp sys/oracle@orcl dumpfile=expdp.dmp directory=data_dir full=y logfile=expdp.log</p><p>2、schemas按用户导出</p><p>$ expdp user/passwd@orcl schemas=user dumpfile=expdp.dmp directory=data_dir logfile=expdp.log</p><p>3、按表空间导出</p><p>$ expdp sys/passwd@orcl tablespace=tbs1,tbs2 dumpfile=expdp.dmp directory=data_dir logfile=expdp.log</p><p>4、导出表</p><p>$ expdp user/passwd@orcl tables=table1,table2 dumpfile=expdp.dmp directory=data_dir logfile=expdp.log</p><p>5、按查询条件导出</p><p>$ expdp user/passwd@orcl tables=table1=’where number=1234′ dumpfile=expdp.dmp directory=data_dir logfile=expdp.log</p><h5 id="2、导入数据"><a href="#2、导入数据" class="headerlink" title="2、导入数据"></a><strong>2、导入数据</strong></h5><p>首先将需要导入的数据文件存放导需要导入的数据库服务器上</p><p>参照导出的时候的建立目录方式建立物理目录和逻辑目录（只是建目录即可，如果需要给用户权限则加上给用户权限的那步）</p><p>使用命令导入，同时，导入方式也可以分为五种，分别对应着导出的五种方式</p><p>1、“full=y”，全量导入数据库；</p><p>impdp user/passwd directory=data_dir dumpfile=expdp.dmp full=y</p><p>2、同名用户导入，从用户A导入到用户A；</p><p>impdp A/passwd schemas=A directory=data_dir dumpfile=expdp.dmp logfile=impdp.log;</p><p>3、 ①从A用户中把表table1和table2导入到B用户中；</p><p>impdp B/passwdtables=A.table1,A.table2 remap_schema=A:B directory=data_dir dumpfile=expdp.dmp logfile=impdp.log;</p><p>②将表空间TBS01、TBS02、TBS03导入到表空间A_TBS，将用户B的数据导入到A，并生成新的oid防止冲突；</p><p>impdp A/passwd remap_tablespace=TBS01:A_TBS,TBS02:A_TBS,TBS03:A_TBS remap_schema=B:A FULL=Y transform=oid:n</p><p>directory=data_dir dumpfile=expdp.dmp logfile=impdp.log</p><p>4、导入表空间；</p><p>impdp sys/passwd tablespaces=tbs1 directory=data_dir dumpfile=expdp.dmp logfile=impdp.log</p><p>5、追加数据；</p><p>impdp sys/passwd directory=data_dir dumpfile=expdp.dmp schemas=system table_exists_action=replace logfile=impdp.log; –table_exists_action:导入对象已存在时执行的操作。有效关键字:SKIP,APPEND,REPLACE和TRUNCATE</p><h5 id="3、并行操作"><a href="#3、并行操作" class="headerlink" title="3、并行操作"></a><strong>3、并行操作</strong></h5><p>可以通过 PARALLEL 参数为导出使用一个以上的线程来显著地加速作业。每个线程创建一个单独的转储文件，因此参数 dumpfile 应当拥有和并行度一样多的项目。您可以指定通配符作为文件名，而不是显式地输入各个文件名，例如：</p><p>expdp ananda/abc123 tables=CASES directory=DPDATA1 dumpfile=expCASES_%U.dmp parallel=4 job_name=Cases_Export</p><p>注意:dumpfile 参数拥有一个通配符 %U，它指示文件将按需要创建，格式将为expCASES_nn.dmp，其中nn 从 01 开始，然后按需要向上增加。</p><p>在并行模式下，状态屏幕将显示四个工作进程。（在默认模式下，只有一个进程是可见的）所有的工作进程同步取出数据，并在状态屏幕上显示它们的进度。 分离访问数据文件和转储目录文件系统的输入/输出通道是很重要的。否则，与维护 Data Pump 作业相关的开销可能超过并行线程的效益，并因此而降低性能。并行方式只有在表的数量多于并行值并且表很大时才是有效的。</p><p><strong>数据库监控</strong> 您还可以从数据库视图获得关于运行的 Data Pump 作业的更多信息。监控作业的主视图是 DBA_DATAPUMP_JOBS，它将告诉您在作业上有多少个工作进程（列 DEGREE）在工作。</p><p>另一个重要的视图是 DBA_DATAPUMP_SESSIONS，当它与上述视图和 V$SESSION 结合时将给出主前台进程的会话 SID。</p><p>select sid, serial# from v$session s, dba_datapump_sessions d where s.saddr = d.saddr;</p><p>这条指令显示前台进程的会话。更多有用的信息可以从警报日志中获得。当进程启动时，MCP 和工作进程在警报日志中显示如下：</p><p>kupprdp:master process DM00 started with pid=23, OS id=20530 to execute – SYS.KUPM$MCP.MAIN(‘CASES_EXPORT’, ‘ANANDA’); kupprdp:worker process DW01 started with worker id=1, pid=24, OS id=20532 to execute – SYS.KUPW$WORKER.MAIN(‘CASES_EXPORT’, ‘ANANDA’); kupprdp:worker process DW03 started with worker id=2, pid=25, OS id=20534 to execute – SYS.KUPW$WORKER.MAIN(‘CASES_EXPORT’, ‘ANANDA’);</p><p>它显示为数据泵操作启动的会话的 PID。您可以用以下查询找到实际的 SID：</p><p>select sid, program from v$session where paddr in (select addr from v$process where pid in (23,24,25));</p><p>PROGRAM 列将对应警报日志文件中的名称显示进程 DM （为主进程）或 DW （为工作进程）。如果一个工作进程使用了并行查询，比如说 SID 23，您可以在视图 V$PX_SESSION 中看到它，并把它找出来。它将为您显示从 SID 23 代表的工作进程中运行的所有并行查询会话：</p><p>select sid from v$px_session where qcsid = 23;</p><p>从视图 V$SESSION_LONGOPS 中可以获得其它的有用信息来预测完成作业将花费的时间。</p><p>select sid, serial#, sofar, totalwork from v$session_longops where opname = ‘CASES_EXPORT’ and sofar != totalwork;</p><p>列 totalwork 显示总工作量，该列的 sofar 数量被加和到当前的时刻 — 因而您可以用它来估计还要花多长时间。</p><h5 id="4、不同版本数据库之间数据互导"><a href="#4、不同版本数据库之间数据互导" class="headerlink" title="4、不同版本数据库之间数据互导"></a><strong>4、不同版本数据库之间数据互导</strong></h5><p>如将11g数据库的数据导入导10g数据库的服务器上 首先在11g服务器上导出</p><p>EXPDP USERID=’SYS/cuc2009@cuc as sysdba’ schemas=sybj directory=DATA_PUMP_DIR dumpfile=aa.dmp logfile=aa.log version=10.2.0.1.0</p><p>然后在10g数据库服务器上导入</p><p>IMPDP USERID=’SYS/cuc2009@cucf as sysdba’ schemas=sybj directory=DATA_PUMP_DIR dumpfile=aa.dmp logfile=aa.log version=10.2.0.1.0</p><h4 id="三、物理备份"><a href="#三、物理备份" class="headerlink" title="三、物理备份"></a><strong>三、物理备份</strong></h4><h5 id="1、使用rman工具备份及恢复"><a href="#1、使用rman工具备份及恢复" class="headerlink" title="1、使用rman工具备份及恢复"></a><strong>1、使用rman工具备份及恢复</strong></h5><p><strong>说明：</strong> 1. RMAN是 ORACLE提供的一个备份与恢复的工具，可以用来执行完全或不完全的数据库恢复。 2. RMAN不能用于备份初始化参数文件和口令文件。 3. 与传统工具相比，RMAN具有独特的优势：跳过未使用的数据块。当备份一个RMAN备份集时，RMAN不会备份从未被写入的数据块，而传统的方式无法获知那些是未被使用的数据块。 4. RMAN可以进行增量备份（增量备份是针对于上一次备份（无论是哪种备份）：备份上一次备份后，所有发生变化的文件）</p><h6 id="1、首先需要在将要备份的数据库服务器上切换服务器的归档模式，如果已经是归档模式了，那么可以跳过此步"><a href="#1、首先需要在将要备份的数据库服务器上切换服务器的归档模式，如果已经是归档模式了，那么可以跳过此步" class="headerlink" title="1、首先需要在将要备份的数据库服务器上切换服务器的归档模式，如果已经是归档模式了，那么可以跳过此步"></a><strong>1、首先需要在将要备份的数据库服务器上切换服务器的归档模式，如果已经是归档模式了，那么可以跳过此步</strong></h6><p># su oracle //切换到oracle用户</p><p>$ sqlplus /nolog //启动sqlplus</p><p>SQL&gt; conn / as sysdba //以DBA的身份连接数据库</p><p>SQL&gt; shutdown immediate; //立即关闭数据库</p><p>SQL&gt; startup mount //启动实例并加载数据库，但不打开</p><p>SQL&gt; alter database archivelog; //更改数据库为归档模式</p><p>SQL&gt; alter database open; //打开数据库</p><p>SQL&gt; alter system archive log start; //启用自动归档</p><p>SQL&gt; exit //退出</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202183876.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202183855.png" alt="Oracle备份的几种方式"></p><h6 id="2、启动并连接到rman（恢复管理器）"><a href="#2、启动并连接到rman（恢复管理器）" class="headerlink" title="2、启动并连接到rman（恢复管理器）"></a><strong>2、启动并连接到rman（恢复管理器）</strong></h6><p>可以开个专门用于备份的用户，不过这里使用了sys用户</p><p>$ rman target=sys/oracle@orcl</p><h6 id="3、基本设置"><a href="#3、基本设置" class="headerlink" title="3、基本设置"></a><strong>3、基本设置</strong></h6><p>具体路径可自己安装需求改，但是登录的用户需要对备份的目录有读写权限，目录建立方法可参考上面逻辑备份的备份目录建立</p><p>RMAN&gt; configure default device type to disk; //设置默认的备份设备为磁盘</p><p>RMAN&gt; configure device type disk parallelism 2; //设置备份的并行级别，通道数</p><p>RMAN&gt; configure channel 1 device type disk format ‘/home/oracle/oracle_bak/bakup_%U’; //设置备份的文件格式，只适用于磁盘设备</p><p>RMAN&gt; configure channel 2 device type disk format ‘/home/oracle/oracle_bak/bakup2_%U’; //设置备份的文件格式，只适用于磁盘设备</p><p>RMAN&gt; configure controlfile autobackup on; //打开控制文件与服务器参数文件的自动备份</p><p>RMAN&gt; configure controlfile autobackup format for device type disk to ‘/home/oracle/oracle_bak/ctl_%F’; //设置控制文件与服务器参数文件自动备份的文件格式</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202183897.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202183990.png" alt="Oracle备份的几种方式"></p><p><strong>说明：</strong> <strong>format:</strong> %c：备份片的拷贝数(从1开始编号)； %d：数据库名称； %D：位于该月中的天数(DD)； %M：位于该年中的月份(MM)； %F：一个基于DBID唯一的名称，这个格式的形式为c-xxx-YYYYMMDD-QQ,其中xxx位该数据库的DBID，YYYYMMDD为日期，QQ是一个1-256的序列； %n：数据库名称，并且会在右侧用x字符进行填充，使其保持长度为8； %u：是一个由备份集编号和建立时间压缩后组成的8字符名称。利用%u可以为每个备份集产生一个唯一的名称； %p：表示备份集中的备份片的编号，从1开始编号； %U：是%u_%p_%c的简写形式，利用它可以为每一个备份片段(既磁盘文件)生成一个唯一的名称，这是最常用的命名方式； %t：备份集时间戳; %T:年月日格式(YYYYMMDD);</p><p><strong>channel的概念</strong>：一个channel是rman于目标数据库之间的一个连接，”allocate channel”命令在目标数据库启动一个服务器进程，同时必须定义服务器进程执行备份和恢复操作使用的I/O类型</p><p><strong>通道控制命令可以用来:</strong></p><ul><li>控制rman使用的OS资源</li><li>影响并行度</li><li>指定I/O带宽的限制值(设置 limit read rate 参数)</li><li>指定备份片大小的限制(设置 limit kbytes)</li><li>指定当前打开文件的限制值(设置 limit maxopenfiles)</li></ul><h6 id="4、查看所有配置"><a href="#4、查看所有配置" class="headerlink" title="4、查看所有配置"></a><strong>4、查看所有配置</strong></h6><p>RMAN&gt; show all;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202183911.png" alt="Oracle备份的几种方式"></p><h6 id="5、查看数据库方案报表"><a href="#5、查看数据库方案报表" class="headerlink" title="5、查看数据库方案报表"></a><strong>5、查看数据库方案报表</strong></h6><p>RMAN&gt; report schema;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184149.png" alt="Oracle备份的几种方式"></p><h6 id="6、全量备份数据库及全量恢复"><a href="#6、全量备份数据库及全量恢复" class="headerlink" title="6、全量备份数据库及全量恢复"></a><strong>6、全量备份数据库及全量恢复</strong></h6><p>1、全量备份全库</p><p>RMAN&gt; backup database plus archivelog delete input; //备份全库及控制文件、服务器参数文件与所有归档的重做日志，并删除旧的归档日志</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184155.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218426.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184228.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184359.png" alt="Oracle备份的几种方式"></p><p>2、备份表空间 这里也可以改为备份某个表空间，比如 back tablespace users;就是备份users的表空间</p><p>RMAN&gt; backup tablespace system plus archivelog delete input; //备份指定表空间及归档的重做日志，并删除旧的归档日志</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184321.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184316.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184432.png" alt="Oracle备份的几种方式"></p><p>3、备份归档日志</p><p>RMAN&gt; backup archivelog all delete input;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184451.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184544.png" alt="Oracle备份的几种方式"></p><p>4、复制数据文件</p><p>RMAN&gt; copy datafile 1 to ‘/home/oracle/oracle_bak/bak/system.copy’;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184547.png" alt="Oracle备份的几种方式"></p><p>说明一下，这里的数字1对应着命令report schema结果中的1</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184598.png" alt="Oracle备份的几种方式"></p><p>5、查看备份和文件副本</p><p>RMAN&gt; list backup;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184668.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184753.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184799.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218487.png" alt="Oracle备份的几种方式"></p><p>查看复制文件</p><p>RMAN&gt; list copy</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184833.png" alt="Oracle备份的几种方式"></p><p>6、验证备份</p><p>RMAN&gt; validate backupset 3;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202184945.png" alt="Oracle备份的几种方式"></p><p>这里说明一下，3这个数字代表的是备份集的编号，可以在<strong>list backup</strong>命令的结果中查看</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218495.png" alt="Oracle备份的几种方式"></p><p>7、从自动备份中恢复表空间 如果只丢失了特定的表空间的数据文件，那么可以选择只恢复这个表空间，而不是恢复整个数据库，表空间恢复可以在不关闭数据库的情况下进行，只需要将需要恢复的表空间offline</p><p>现在模拟某个表空间丢失或损坏</p><p>$ cd /database/oracle/oracle/oradata/orcl</p><p>$ mv users01.dbf users01_bak.dbf</p><p>现在开始恢复表空间users01 进入到rman</p><p>$ rman target=sys/oracle@orcl</p><p>使表空间脱机</p><p>RMAN&gt; sql ‘alter tablespace users offline immediate’;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218494.png" alt="Oracle备份的几种方式"></p><p>还原表空间</p><p>RMAN&gt; restore tablespace users;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/20201122021850100.png" alt="Oracle备份的几种方式"></p><p>恢复表空间</p><p>RMAN&gt; recover tablespace users;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218507.png" alt="Oracle备份的几种方式"></p><p>将表空间联机</p><p>RMAN&gt; sql ‘alter tablespace users online’;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185030.png" alt="Oracle备份的几种方式"></p><p>8、恢复和复原全数据库</p><p>模拟数据文件丢失或损坏</p><p>$ cd /database/oracle/oracle/oradata/orcl</p><p>$ mv system01.dbf system01_bak.dbf</p><p>现在重新启动实例会报错</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185146.png" alt="Oracle备份的几种方式"></p><p>查看数据库当前状态</p><p>SQL&gt; select status from v$instance;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185194.png" alt="Oracle备份的几种方式"></p><p>登录到rman</p><p>$ rman target=sys/oracle@orcl</p><p>还原数据库</p><p>RMAN&gt; restore database;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185176.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185223.png" alt="Oracle备份的几种方式"></p><p>恢复数据库</p><p>RMAN&gt; recover database;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185266.png" alt="Oracle备份的几种方式"></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185383.png" alt="Oracle备份的几种方式"></p><p>打开数据库并登录数据库查看状态</p><p>RMAN&gt; alter database open;</p><p>SQL&gt; select status from v$instance;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218539.png" alt="Oracle备份的几种方式"></p><p>此时数据文件已恢复了</p><p>9、某一个数据文件恢复 查看系统当前的数据文件</p><p>SQL&gt; col file_name for a50</p><p>SQL&gt; select file_id,file_name,status from dba_data_files;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185341.png" alt="Oracle备份的几种方式"></p><p>查看文件状态</p><p>SQL&gt; select file#,status from v$datafile;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185498.png" alt="Oracle备份的几种方式"></p><p>模拟删除文件</p><p>$ mv sysaux01.dbf sysaux01_bak.dbf</p><p>将数据文件设置未offline状态</p><p>SQL&gt; alter database datafile 3 offline;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185439.png" alt="Oracle备份的几种方式"></p><p>此时数据文件状态未recover</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185490.png" alt="Oracle备份的几种方式"></p><p>现在来恢复数据文件 进入到rman</p><p>$ rman target=sys/oracle@orcl</p><p>还原和恢复数据文件</p><p>RMAN&gt; restore datafile 3;</p><p>RMAN&gt; recover datafile 3;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185554.png" alt="Oracle备份的几种方式"></p><p>将数据文件设置为online并查看状态</p><p>SQL&gt; alter database datafile 2 online;</p><p>SQL&gt; select file#,status form v$datafile;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185545.png" alt="Oracle备份的几种方式"></p><h6 id="7、增量备份数据库及增量恢复"><a href="#7、增量备份数据库及增量恢复" class="headerlink" title="7、增量备份数据库及增量恢复"></a><strong>7、增量备份数据库及增量恢复</strong></h6><p>本节从一个例子来说明增量恢复，首先在数据库表中插入一条数据</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218564.png" alt="Oracle备份的几种方式"></p><p>接着用rman做一次全量备份（设置的参数可参考上面的设置）</p><p>RMAN&gt; backup incremental level 0 database;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185664.png" alt="Oracle备份的几种方式"></p><p>然后对数据库数据作更改，这里添加了一条数据</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185642.png" alt="Oracle备份的几种方式"></p><p>然后再做一次差异增量备份</p><p>RMAN&gt; backup incremental level 1 database;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185766.png" alt="Oracle备份的几种方式"></p><p>这里再添加一条数据</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185742.png" alt="Oracle备份的几种方式"></p><p>然后再进行一次备份 然后再做一次差异增量备份</p><p>RMAN&gt; backup incremental level 1 database;</p><p>这里使用了scn的恢复方式 查看当前scn</p><p>SQL&gt; select dbms_flashback.get_system_change_number from dual;</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185756.png" alt="Oracle备份的几种方式"></p><p>然后对数据进行删除</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202185899.png" alt="Oracle备份的几种方式"></p><p>还有一种常用的获取到scn的方式就是执行下面语句，将删除的时间转换为scn</p><p>SQL&gt; select timestamp_to_scn(to_timestamp(‘2011-08-03 10:00:00′,’YYYY-MM-DD HH:MI:SS’)) from dual;</p><p>然后我们现在来进行恢复 关闭数据库实例，然后开启实例，单不打开数据库</p><p>SQL&gt; shutdown immediate;</p><p>SQL&gt; startup mount;</p><p>还原数据到指定scn的位置</p><p>RMAN&gt; restore database until scn 2092046;</p><p>恢复数据到指定scn的位置</p><p>RMAN&gt; recover database until scn 2092046;</p><p>因为是不完全恢复（指定了某个位置），所以在打开数据库的命令要加上resetlogs</p><p>SQL&gt; alter database open resetlogs;</p><p>然后再看看数据库，发现数据已经恢复了</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/202011220218585.png" alt="Oracle备份的几种方式"></p><p>如果需要基于时间点的恢复，可以参考一下（参考网上资料，没实践过）</p><p>SQL&gt; ALTER SESSION SET NLS_DATE_FORMAT=’YYYY-MM-DD HH24:MI:SS’;SQL&gt; shutdown immediate;SQL&gt; startup mount;RMAN&gt; restore database until time “to_date(‘2019-7-19 13:19:00′,’YYYY-MM-DD HH24:MI:SS’)”;RMAN&gt; recover database until time “to_date(‘2019-7-19 13:19:00′,’YYYY-MM-DD HH24:MI:SS’)”;SQL&gt; alter database open resetlogs;</p><p>基于日志序列的恢复（参考网上资料，没实践过）:</p><p>SQL&gt; shutdown immediate;SQL&gt; startup mount;RMAN&gt; restore database until SEQUENCE 100 thread 1; //100是日志序列RMAN&gt; recover database until SEQUENCE 100 thread 1;SQL&gt; alter database open resetlogs;</p><p>日志序列查看命令：</p><p>SQL&gt;select * from v$log;</p><p>其中有一个sequence字段.resetlogs就会把sequence 置为1</p><h6 id="8、删除备份文件"><a href="#8、删除备份文件" class="headerlink" title="8、删除备份文件"></a><strong>8、删除备份文件</strong></h6><p>删除无效备份。首先执行CROSSCHECK命令核对备份集，如果发现备份无效（比如备份对应的数据文件损坏或丢失），RMAN会将该备份集标记为 EXPIRED状态。要删除相应的备份记录，可以执行DELETE EXPIRED BACKUP命令：</p><p>RMAN&gt; DELETE EXPIRED BACKUP;</p><p>删除EXPIRED副本，如下所示：</p><p>RMAN&gt; DELETE EXPIRED COPY;</p><p>删除特定备份集，如下所示：</p><p>RMAN&gt; DELETE BACKUPSET 19;</p><p>删除特定备份片，如下所示：</p><p>RMAN&gt; DELETE BACKUPPIECE ‘d:/backup/DEMO_19.bak’;</p><p>删除所有备份集，如下所示：</p><p>RMAN&gt; DELETE BACKUP;</p><p>删除特定映像副本，如下所示：</p><p>RMAN&gt; DELETE DATAFILE COPY ‘d:/backup/DEMO_19.bak’;</p><p>删除所有映像副本，如下所示：</p><p>RMAN&gt; DELETE COPY;</p><h5 id="2、冷备"><a href="#2、冷备" class="headerlink" title="2、冷备"></a><strong>2、冷备</strong></h5><p>冷备相对来说比较简单，基本原来就是手动将日志文件、数据文件、控制文件复制到备份的目录 基本步骤是：shutdown数据库—&gt; copy文件—&gt; start数据库</p><p>$ sqlplus sys/ as sysdbaSQL&gt; shutdown immediate;SQL&gt; exit;</p><p>$ cd /database/oracle/oracle/oradata/orcl //数据库数据目录</p><p>$ cp -p * /home/oracle/oracle_bak //复制所有文件及目录到备份目录下</p><p>$ sqlplus sys/ as sysdbaSQL&gt; startup;</p><p><strong>说明:</strong> *.dbf：数据文件 *.ctl：控制文件 *.log：日志文件</p><h5 id="3、使用归档模式热备"><a href="#3、使用归档模式热备" class="headerlink" title="3、使用归档模式热备"></a><strong>3、使用归档模式热备</strong></h5><p><strong>说明</strong>：归档模式热备份的数据库是必须在归档模式下的（有点废话，但oracle默认安装是在非归档模式下） 将数据库转换为归档模式（注意数据库必须已装载到此实例并且不在任何实例中打开）：</p><p>$ sqlplus / as sysdba //登录数据库</p><p>SQL&gt; shutdown immediate;</p><p>SQL&gt; startup mount;（startup nomount 启动实例；startup mount 启动实例加载数据库； startup 启动实例加载数据库打开数据库）</p><p>SQL&gt; alter database archivelog;</p><p>一些归档的相关操作记录:</p><p>SQL&gt; archive log list;–查看是否出于归档模式;</p><p>SQL&gt; select name from v$archived_log; –查询归档日志</p><p>(10G之后)</p><p>SQL&gt; alter database archivelog;</p><p>SQL&gt; alter database noarchivelog;</p><p>(10G之前)</p><p>SQL&gt; archive log stop;</p><p>SQL&gt; archive log start;</p><p>SQL&gt; alter system set log_archive_start =true scope =spfile;</p><p>SQL&gt; alter system set log_achive_start=false scope=spfile;</p><p>热备的步骤如下：</p><p>SQL&gt; shutdown immediate;</p><p>SQL&gt; startup mount;</p><p>SQL&gt; alter database archivelog;</p><p>SQL&gt; alter database open;</p><p>SQL&gt; alter tablespace users begin backup; –设置备份模式;</p><p>$ cp -Rp oracle/ /home/oracle/oracle_bak/;–拷贝</p><p>SQL&gt; alter tablespace users end backup ;–结束备份状态</p><p>SQL&gt; alter system switch logfile–切换日志，使用当前日志归档</p><h4 id="四、数据库日常备份计划及脚本参考"><a href="#四、数据库日常备份计划及脚本参考" class="headerlink" title="四、数据库日常备份计划及脚本参考"></a><strong>四、数据库日常备份计划及脚本参考</strong></h4><h5 id="1、如果是使用RMAN"><a href="#1、如果是使用RMAN" class="headerlink" title="1、如果是使用RMAN"></a><strong>1、如果是使用RMAN</strong></h5><p>备份计划可参考： 1.星期天晚上：全备份 2.星期一晚上：增量备份 3.星期二晚上：增量备份 4.星期三晚上：累积备份 5.星期四晚上：增量备份 6.星期五晚上：增量备份 7.星期六晚上：增量备份 如果星期二需要恢复的话，只需要1+2 如果星期四需要恢复的话，只需要1+4 如果星期五需要恢复的话，只需要1+4+5 如果星期六需要恢复的话，只需要1+4+5+6</p><p>如果需要自动备份，可使用备份脚本+crontab的方式执行 执行脚本命令：</p><p>rman target / msglog=bakl0.log cmdfile=bakl0 (/表示需要连接的目标数据库,msglog表示日志文件，cmdfile表示的是脚本文件)</p><p>如：rman target sys/oracle@orcl msglog=/home/oracle/oracle_bak/bakl1.log cmdfile=/home/oracle/oracle_bak</p><p>脚本内容为：</p><p>run{</p><p>allocate channel cha1 type disk;</p><p>backup</p><p>incremental level 0</p><p>format ‘/u01/rmanbak/inc0_%u_%T’(u表示唯一的ID,大T是日期，小t是时间)</p><p>tag monday_inc0 //标签可以顺便起，没关系</p><p>database;</p><p>release channel cha1;</p><p>}</p><p>改动以上的备份等级可弄出全量、增量、累积备份的脚本，然后使用crontab自动执行即可</p><h5 id="2、如果是使用备份脚本"><a href="#2、如果是使用备份脚本" class="headerlink" title="2、如果是使用备份脚本"></a><strong>2、如果是使用备份脚本</strong></h5><p>备份脚本内容如下：</p><p>#!/bin/shexport ORACLE_BASE=/data/oracle</p><p>export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1</p><p>export ORACLE_SID=orcl</p><p>export ORACLE_TERM=xterm</p><p>export PATH=$ORACLE_HOME/bin:/usr/sbin:$PATH</p><p>export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib</p><p>export LANG=C</p><p>export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK</p><p>#以上代码为Oracle数据库运行账号oracle的系统环境变量设置，必须添加，否则crontab任务计划不能执行。</p><p># oracle用户的系统环境变量路径：/home/oracle/.bash_profile</p><p>date=date +%Y_%m_%d #获取系统当前日期时间</p><p>days=7 #设置删除7天之前的备份文件</p><p>orsid=192.168.0.198:1521/orcl #Oracle数据库服务器IP、端口、SID</p><p>orowner=OSYUNWEI #备份此用户下面的数据</p><p>bakuser=OSYUNWEI #用此用户来执行备份，必须要有备份操作的权限</p><p>bakpass=OSYUNWEI #执行备注的用户密码</p><p>bakdir=/backup/oracledata #备份文件路径，需要提前创建好</p><p>bakdata=$orowner”_”$date.dmp #备份数据库名称</p><p>baklog=$orowner”_”$date.log #备份执行时候生成的日志文件名称</p><p>ordatabak=$orowner”_”$date.tar.gz #最后保存的Oracle数据库备份文件</p><p>cd $bakdir #进入备份目录</p><p>mkdir -p $orowner #按需要备份的Oracle用户创建目录</p><p>cd $orowner #进入目录</p><p>exp $bakuser/$bakpass@$orsid grants=y owner=$orowner file=$bakdir/$orowner/$bakdata log=$bakdir/$orowner/$baklog #执行备份</p><p>tar -zcvf $ordatabak $bakdata $baklog #压缩备份文件和日志文件</p><p>find $bakdir/$orowner -type f -name “*.log” -exec rm {} ; #删除备份文件</p><p>find $bakdir/$orowner -type f -name “*.dmp” -exec rm {} ; #删除日志文件</p><p>find $bakdir/$orowner -type f -name “*.tar.gz” -mtime +$days -exec rm -rf {} ; #删除7天前的备份（注意：{} \中间有空格）</p><p>然后添加脚本执行权限：</p><p>chmod +x /backup/oracledata/ordatabak.sh #添加脚本执行权限</p><p>然后将脚本添加至crontab执行计划即可</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle的三种高可用集群方案</title>
      <link href="/2020/11/22/oracle-de-san-zhong-gao-ke-yong-ji-qun-fang-an/"/>
      <url>/2020/11/22/oracle-de-san-zhong-gao-ke-yong-ji-qun-fang-an/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle的三种高可用集群方案"><a href="#Oracle的三种高可用集群方案" class="headerlink" title="Oracle的三种高可用集群方案"></a><strong>Oracle的三种高可用集群方案</strong></h1><h3 id="转载自：http-www-cnblogs-com-baiboy-p-orc2-html-label1"><a href="#转载自：http-www-cnblogs-com-baiboy-p-orc2-html-label1" class="headerlink" title="转载自：http://www.cnblogs.com/baiboy/p/orc2.html#_label1"></a><strong>转载自：<a href="http://www.cnblogs.com/baiboy/p/orc2.html#_label1">http://www.cnblogs.com/baiboy/p/orc2.html#_label1</a></strong></h3><h3 id="Oracle的三种高可用集群方案-1"><a href="#Oracle的三种高可用集群方案-1" class="headerlink" title="Oracle的三种高可用集群方案"></a><strong>Oracle的三种高可用集群方案</strong></h3><p><em><strong>*1 RAC（Real Application Clusters）*</strong></em></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202231315.png" alt="Oracle的三种高可用集群方案"></p><p>多个Oracle服务器组成一个共享的Cache，而这些Oracle服务器共享一个基于网络的存储。这个系统可以容忍单机/或是多机失败。不过系统内部的多个节点需要高速网络互连，基本上也就是要全部东西放在在一个机房内，或者说一个数据中心内。如果机房出故障，比如网络不通，那就坏了。所以仅仅用RAC还是满足不了一般互联网公司的重要业务的需要，重要业务需要多机房来容忍单个机房的事故。</p><p><em><strong>*2 Data Guard.（最主要的功能是冗灾）*</strong></em></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202231467.png" alt="Oracle的三种高可用集群方案"></p><p>Data Guard这个方案就适合多机房的。某机房一个production的数据库，另外其他机房部署standby的数据库。Standby数据库分物理的和逻辑的。物理的standby数据库主要用于production失败后做切换。而逻辑的standby数据库则在平时可以分担production数据库的读负载。</p><p><em><strong>*3 MAA*</strong></em></p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202231562.png" alt="Oracle的三种高可用集群方案"></p><p>MAA(Maximum Availability Architecture)其实不是独立的第三种，而是前面两种的结合，来提供最高的可用性。每个机房内部署RAC集群，多个机房间用Data Guard同步。</p><h2 id="RAC概述"><a href="#RAC概述" class="headerlink" title="RAC概述"></a><strong>RAC概述</strong></h2><p>共享存储文件系统（NFS），或甚至集群文件系统（如：OCFS2）主要被用于存储区域网络（所有节点直接访问共享文件系统上存储器），这就使得节点失效而不影响来自其他节点对文件系统的访问，通常，共享磁盘文件系统用于高可用集群。</p><p>Oracle RAC的核心是共享磁盘子系统，集群中所有节点必须能够访问所有数据、重做日志文件、控制文件和参数文件，数据磁盘必须是全局可用的，允许所有节点访问数据库，每个节点有它自己的重做日志和控制文件，但是其他节点必须能够访问它们以便在那个节点出现系统故障时能够恢复。</p><p>Oracle RAC 运行于集群之上，为 Oracle 数据库提供了最高级别的可用性、可伸缩性和低成本计算能力。如果集群内的一个节点发生故障，Oracle 将可以继续在其余的节点上运行。Oracle 的主要创新是一项称为高速缓存合并的技术。高速缓存合并使得集群中的节点可以通过高速集群互联高效地同步其内存高速缓存，从而最大限度地低降低磁盘 I/O。高速缓存最重要的优势在于它能够使集群中所有节点的磁盘共享对所有数据的访问。数据无需在节点间进行分区。Oracle 是唯一提供具备这一能力的开放系统数据库的厂商。其它声称可以运行在集群上的数据库软件需要对数据库数据进行分区，显得不切实际。企业网格是未来的数据中心，构建于由标准化商用组件构成的大型配置之上，其中包括：处理器、网络和存储器。Oracle RAC 的高速缓存合并技术提供了最高等级的可用性和可伸缩性。Oracle 数据库 10g 和 OracleRAC 10g 显著降低了运营成本，增强了灵活性，从而赋予了系统更卓越的适应性、前瞻性和灵活性。动态提供节点、存储器、CPU 和内存可以在实现所需服务级别的同时，通过提高的利用率不断降低成本。</p><h2 id="RAC-集成集群件管理"><a href="#RAC-集成集群件管理" class="headerlink" title="RAC 集成集群件管理"></a><strong>RAC 集成集群件管理</strong></h2><p>Oracle RAC 10g 在 Oracle 数据库 10g 运行的所有平台上提供了一个完整集成的集群件管理解决方案。这一集群件功能包括<em>集群连接、消息处理服务和锁定、集群控制和恢复</em>，以及一个<em>工作负载管理</em>框架（将在下文探讨）。Oracle RAC 10g 的集成集群件管理具有以下优势：</p><p>(一) 成本低。Oracle 免费提供这一功能。</p><p>(二) 单一厂商支持。消除了相互推诿的问题。</p><p>(三) 安装、配置和持续维护更简单。Oracle RAC 10g 集群件使用标准 Oracle 数据库管理工具进行安装、配置和维护。这一过程无须其它的集成步骤。</p><p>(四) 所有平台，质量始终如一。与第三方产品相比，Oracle 对新软件版本进行了更严格的测试。</p><p>(五) 所有平台，功能始终如一。例如，一些第三方集群件产品限制了集群内可以支持的节点的数量。借助Oracle RAC 10g，所有平台可以支持多达 64 个节点。用户还可以在所有平台上获得一致的响应体验，从而有效解决了高可用性挑战，包括服务器节点故障、互连故障以及 I/O 隔离现象等。</p><p>(六) 支持高级功能。这包括集成监视和通知功能，从而在发生故障时，在数据库和应用层之间实现快速协调的恢复。</p><h2 id="RAC-的体系结构"><a href="#RAC-的体系结构" class="headerlink" title="RAC 的体系结构"></a><strong>RAC 的体系结构</strong></h2><p>RAC 是 Oracle 数据库的一个群集解决方案，是有着两个或者两个以上的数据库节点协调运作能力的。如下图所示的 RAC 结构图：</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202231554.png" alt="Oracle的三种高可用集群方案"></p><p>集群管理器（Cluster Manager）在集群系统中对其他各个模块进行整合，通过高速的内连接来提供群集节点之间的通信。各节点之间内连接使用心跳线互联，心跳线上的信息功能确定群集逻辑上的节点成员信息和节点更新情况，以及节点在某个时间点的运行状态，保证群集系统正常运行。通信层管理节点之间的通信。它的职责是配置，互联群集中节点信息，在群集管理器中使用由心跳机制产生的信息，由通信层负责传输，确保信息的正确到达。还有一些群集监视进程不断验证系统的不同领域运行状况。例如，心跳监测不断验证的心跳机制的运作是否良好。在一个应用环境当中，所有的服务器使用和管理同一个数据库，目的是<em>分散每一台服务器的工作量</em>。硬件上至少需要两台以上的服务器，而且还需要一个共享存储设备；同时还需要两类软件，一类是集群软件，另外一类就是 Oracle 数据库中的 RAC 组件。同时所有服务器上的 OS 都应该是同一类 OS，根据负载均衡的配置策略，当一个客户端发送请求到某一台服务的 listener 后，这台服务器根据负载均衡策略，会把请求发送给本机的 RAC组件处理，也可能会发送给另外一台服务器的 RAC 组件处理，处理完请求后，RAC 会通过群集软件来访问共享存储设备。逻辑结构上看，每一个参加群集的节点有一个独立的实例，这些实例访问同一个数据库。节点之间通过集群软件的通信层（Communication Layer）来进行通信。同时为了减少 I/O 的消耗，存在一个全局缓存服务，因此每一个数据库的实例，都保留了一份相同的数据库 cache。RAC 中的特点如下：</p><ul><li>l  每一个节点的实例都有自己的 SGA；</li><li>l  每一个节点的实例都有自己的后台进程</li><li>l  每一个节点的实力都有自己的 redo logs</li><li>l  每一个节点的实例都有自己的 undo 表空间</li><li>l  所有节点都共享一份 datafiles 和 controlfiles</li></ul><h2 id="RAC-的结构组成和机制"><a href="#RAC-的结构组成和机制" class="headerlink" title="RAC 的结构组成和机制"></a><strong>RAC 的结构组成和机制</strong></h2><p>在 Oracle9i 之前，RAC 称为 OPS（Oracle Parallel Server）。RAC 与 OPS 之间的一个较大区别是，RAC 采用了Cache Fusion（高缓存合并）技术，节点已经取出的数据块更新后没有写入磁盘前，可以被另外一个节点更新，然后以最后的版本写入磁盘。在 OPS 中，节点间的数据请求需要先将数据写入磁盘，然后发出请求的节点才可以读取该数据。使用 Cache Fusion 时，RAC 的各个节点间数据缓冲区通过高速、低延迟的内部网络进行数据块的传输。下图是一个典型的 RAC 对外服务的示意图，一个 Oracle RAC Cluster 包含了如下的部分</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202231624.png" alt="Oracle的三种高可用集群方案"></p><ol><li>集群的节点（Cluster node）——2 个到 N 个节点或者主机运行 Oracle Database Server。</li><li>私有网络（Network Interconnect）——RAC 之间需要一个高速互联的私有网络来处理通信和 Cache Fusion。</li><li>共享存储（shared Storage）——RAC 需要共享存储设备让所有的节点都可以访问数据文件。</li><li>对外服务的网络（Production Network）——RAC 对外服务的网络。客户端和应用都通过这个网络来访问。</li></ol><h2 id="RAC-后台进程"><a href="#RAC-后台进程" class="headerlink" title="RAC 后台进程"></a><strong>RAC 后台进程</strong></h2><p>Oracle RAC 有一些自己独特的后台进程，在单一实例中不发挥配置作用。如下图所示，定义了一些 RAC 运行的后台进程。这些后台进程的功能描述如下。</p><p><img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202231629.png" alt="Oracle的三种高可用集群方案"></p><p>（1）LMS（Global cache service processes 全局缓存服务进程）进程主要用来管理集群内数据块的访问，并在不同实例的 Buffer Cache 中传输数据块镜像。直接从控制的实例的缓存复制数据块，然后发送一个副本到请求的实例上。并保证在所有实例的 Buffer Cache 中一个数据块的镜像只能出现一次。LMS 进程靠着在实例中传递消息来协调数据块的访问，当一个实例请求数据块时，该实例的 LMD 进程发出一个数据块资源的请求，该请求指向主数据块的实例的 LMD 进程，主实例的 LMD 进程和正在使用的实例的 LMD 进程释放该资源，这时拥有该资源的实例的 LMS 进程会创建一个数据块镜像的一致性读然后把该数据块传递到请求该资源的实例的BUFFER CACHE 中。LMS 进程保证了在每一时刻只能允许一个实例去更新数据块，并负责保持该数据块的镜像记录（包含更新数据块的状态 FLAG)。RAC 提供了 10 个 LMS 进程（0~9），该进程数量随着节点间的消息传递的数据的增加而增加。（2）LMON（Lock Monitor Process，锁监控进程）是全局队列服务监控器，各个实例的 LMON 进程会定期通信，以检查集群中各个节点的健康状况，当某个节点出现故障时，负责集群重构、GRD 恢复等操作，它提供的服务叫做 Cluster Group Service（CGS）。</p><p>LMON 主要借助两种心跳机制来完成健康检查。</p><p>(一) <em>节点间的网络心跳（Network Heartbeat）</em>：可以想象成节点间定时的发送 ping 包检测节点状态，如果能在规定时间内收到回应，就认为对方状态正常。</p><p>(二) <em>通过控制文件的磁盘心跳（controlfile heartbeat）</em>：每个节点的 CKPT 进程每隔 3 秒钟更新一次控制文件的数据块，这个数据块叫做 Checkpoint Progress Record，控制文件是共享的，所以实例间可以互相检查对方是否及时更新来判断。</p><p>(三) <em>LMD（the global enqueue service daemon，锁管理守护进程）</em>是一个后台进程，也被称为全局的队列服务守护进程，因为负责对资源的管理要求来控制访问块和全局队列。在每一个实例的内部，LMD 进程管理输入的远程资源请求（即来自集群中其他实例的锁请求）。此外，它还负责死锁检查和监控转换超时。</p><p>(四) <em>LCK（the lock process，锁进程）</em>管理非缓存融合，锁请求是本地的资源请求。LCK 进程管理共享资源的实例的资源请求和跨实例调用操作。在恢复过程中它建立一个无效锁元素的列表，并验证锁的元素。由于处理过程中的 LMS 锁管理的首要职能，只有一个单一的 LCK 进程存在每个实例中。</p><p>(五) <em>DIAG（the diagnosability daemon，诊断守护进程）</em>负责捕获 RAC 环境中进程失败的相关信息。并将跟踪信息写出用于失败分析，DIAG 产生的信息在与 Oracle Support 技术合作来寻找导致失败的原因方面是非常有用的。每个实例仅需要一个 DIAG 进程。</p><p>(六) <em>GSD（the global service daemon，全局服务进程）</em>与 RAC 的管理工具 dbca、srvctl、oem 进行交互，用来完成实例的启动关闭等管理事务。为了保证这些管理工具运行正常必须在所有的节点上先start gsd，并且一个 GSD 进程支持在一个节点的多个 rac.gsd 进程位ORACLE_HOME/srvm/log/gsdaemon.log。GCS 和 GES 两个进程负责通过全局资源目录（Global Resource Directory GRD）维护每个数据的文件和缓存块的状态信息。当某个实例访问数据并缓存了数据之后，集群中的其他实例也会获得一个对应的块镜像，这样其他实例在访问这些数据是就不需要再去读盘了，而是直接读取 SGA 中的缓存。GRD 存在于每个活动的 instance 的内存结构中，这个特点造成 RAC 环境的 SGA 相对于单实例数据库系统的 SGA 要大。其他的进程和内存结构都跟单实例数据库差别不大。</p><h2 id="RAC-共享存储"><a href="#RAC-共享存储" class="headerlink" title="RAC 共享存储"></a><strong>RAC 共享存储</strong></h2><p>RAC 需要有共享存储，独立于实例之外的信息，如上面提到的ocr 和 votedisk 以及数据文件都存放在这个共享存储里的。有OCFS、OCFS2、RAW、NFS、ASM 等这样的一些存储方式。OCFS（Oracle Cluster File System） 和 OCFS2 就是一个文件系统而已，和 NFS 一样，提供一种集群环境中的共享存储的文件系统。RAW 裸设备也是一种存储方式，是 oracle11g 之前的版本中 RAC 支持的存储方式，在 Oralce9i 之前，OPS/RAC的支持只能使用这样的方式，也就是把共享存储映射到 RAW Device，然后把 Oracle 需要的数据选择 RAW device存储，但是 RAW 相对于文件系统来说不直观，不便于管理，而且 RAW Device 有数量的限制，RAW 显然需要有新的方案来代替，这样就有了 OCFS 这样的文件系统。当然，这只是 Oracle 自己的实现的集文件系统而已，还有其他厂商提供的文件系统可以作为存储的选择方案。ASM 只是数据库存储的方案而已，并不是 cluster 的方案，所以这里 ASM 应该是区别于 RAW 和 OCFS/OCFS2同一级别的概念，RAW 和 OCFS/OCFS2 不仅可以作为数据库存储的方案，同时也可以作为 Clusterware 里的存储方案，是 CRS 里需要的 storage，而 ASM 仅作为数据库的存储而已，严格来说仅是 RAC 中的一个节点应用（nodeapps）。ASM 对于 clusterware 安装时需要的 ocr 和 votedisk 这两项还不支持，毕竟 ASM 本身就需要一个实例，而 CRS 是完全在架构之外的，这也就是为什么使用了 ASM 的方案，却总还要加上 OCFS/OCFS2 和 RAW 其中的一个原因。各种 RAC 共享存储方式的对比如下：</p><ol><li>集群文件系统——支持 windows 和 Linux 的 OCFS/OCFS2</li><li>AIX 下的 GPFS 等方式——优点是管理方便，表示也很直观，但缺点是基于文件系统管理软件，又要经过 OS 的 cache 处理，性能上和稳定性上都有欠缺，所以不适合在生产环境下使用。可以支持 CRS 集群软件文件和数据库文件。</li><li>RAW 裸设备方式——通过硬件支持的共享存储系统，直接用 RAW 设备存储，可以支持集群软件文件和数据库文件。</li><li>网络文件系统（NFS）——通过 NFS 实现共享存储，不过需要经过 Oracle 认证的 NFS 才行，可以支持CRS 集群软件文件和数据库文件。</li><li>ASM——集合 RAW 方式 I/O 高性能和集群文件系统易管理等优点，Oracle10g 下推出的共享存储方式，但是本身 ASM 就是需要 Oracle 的实例支持，所以 ASM 仅支持数据库文件，而不支持 CRS 文件。</li></ol><h2 id="RAC-数据库和单实例数据库的区别"><a href="#RAC-数据库和单实例数据库的区别" class="headerlink" title="RAC 数据库和单实例数据库的区别"></a><strong>RAC 数据库和单实例数据库的区别</strong></h2><p>为了让 RAC 中的所有实例能够访问数据库，所有的 datafiles、control files、PFILE/Spfile 和 redo log files 必须保存在共享磁盘上，并且要都能被所有节点同时访问，就涉及到裸设备和集群文件系统等。RAC database 在结构上与单实例的不同之处：至少为每个实例多配置一个 redo 线程，比如：两个实例组成的集群至少要 4 个 redo log group。每个实例两个 redo group。另外要为每一个实例准备一个 UNDO 表空间。</p><p>1、redo 和 undo，每个实例在做数据库的修改时谁用谁的 redo 和 undo 段，各自锁定自己修改的数据，把不同实例的操作相对的独立开就避免了数据不一致。后面就要考虑备份或者恢复时 redo log 和归档日志在这种情况下的特殊考虑了。</p><p>2、内存和进程各个节点的实例都有自己的内存结构和进程结构.各节点之间结构是基本相同的.通过 Cache Fusion（缓存融合）技术，RAC 在各个节点之间同步 SGA 中的缓存信息达到提高访问速度的效果也保证了一致性。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
            <tag> 机房 </tag>
            
            <tag> 集群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动化运维-学习笔记第一天</title>
      <link href="/2020/11/22/python-zi-dong-hua-yun-wei-xue-xi-bi-ji-di-yi-tian/"/>
      <url>/2020/11/22/python-zi-dong-hua-yun-wei-xue-xi-bi-ji-di-yi-tian/</url>
      
        <content type="html"><![CDATA[<h2 id="本节内容"><a href="#本节内容" class="headerlink" title="本节内容"></a><strong>本节内容</strong></h2><ol><li> Python介绍</li><li> 发展史</li><li> Python 2 or 3?</li><li> 安装</li><li> Hello World程序</li><li> 变量</li><li> 用户输入</li><li> 模块初识</li><li> .pyc是个什么鬼？</li><li> 数据类型初识</li><li> 数据运算</li><li> 表达式if …else语句</li><li> 表达式for 循环</li><li> break and continue</li><li> 表达式while 循环</li><li> 作业需求</li></ol><p> </p><h3 id="一、-Python介绍"><a href="#一、-Python介绍" class="headerlink" title="一、 Python介绍"></a><strong>一、 Python介绍</strong></h3><p>python的创始人为吉多·范罗苏姆（Guido van Rossum）。1989年的圣诞节期间，吉多·范罗苏姆为了在阿姆斯特丹打发时间，决心开发一个新的脚本解释程序，作为ABC语言的一种继承。 最新的TIOBE排行榜，Python赶超PHP占据第五， Python崇尚优美、清晰、简单，是一个优秀并广泛使用的语言。 <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030165.jpeg" alt="IMG_256"></p><h1 id="Python之路-Day1-Python基础1"><a href="#Python之路-Day1-Python基础1" class="headerlink" title="Python之路,Day1 - Python基础1"></a><strong><a href="https://www.cnblogs.com/alex3714/articles/5465198.html">Python之路,Day1 - Python基础1</a></strong></h1><h2 id="本节内容-1"><a href="#本节内容-1" class="headerlink" title="本节内容"></a><strong>本节内容</strong></h2><ol><li> Python介绍</li><li> 发展史</li><li> Python 2 or 3?</li><li> 安装</li><li> Hello World程序</li><li> 变量</li><li> 用户输入</li><li> 模块初识</li><li> .pyc是个什么鬼？</li><li> 数据类型初识</li><li> 数据运算</li><li> 表达式if …else语句</li><li> 表达式for 循环</li><li> break and continue</li><li> 表达式while 循环</li><li> 作业需求</li></ol><p> </p><h3 id="一、-Python介绍-1"><a href="#一、-Python介绍-1" class="headerlink" title="一、 Python介绍"></a><strong>一、 Python介绍</strong></h3><p>python的创始人为吉多·范罗苏姆（Guido van Rossum）。1989年的圣诞节期间，吉多·范罗苏姆为了在阿姆斯特丹打发时间，决心开发一个新的脚本解释程序，作为ABC语言的一种继承。 最新的TIOBE排行榜，Python赶超PHP占据第五， Python崇尚优美、清晰、简单，是一个优秀并广泛使用的语言。 <img src="https://opstand.gitee.io/media/uploads/2020/11/202011220203154.jpeg" alt="IMG_256"> 由上图可见，Python整体呈上升趋势，反映出Python应用越来越广泛并且也逐渐得到业内的认可！！！ Python可以应用于众多领域，如：数据分析、组件集成、网络服务、图像处理、数值计算和科学计算等众多领域。目前业内几乎所有大中型互联网企业都在使用Python，如：Youtube、Dropbox、BT、Quora（中国知乎）、豆瓣、知乎、Google、Yahoo!、Facebook、NASA、百度、腾讯、汽车之家、美团等。 <strong>目前Python主要应用领域：</strong></p><ul><li>  <strong>云计算</strong>: 云计算最火的语言， 典型应用OpenStack</li><li>  <strong>WEB开发</strong>: 众多优秀的WEB框架，众多大型网站均为Python开发，Youtube, Dropbox, 豆瓣。。。， 典型WEB框架有Django</li><li>  <strong>科学运算、人工智能</strong>: 典型库NumPy, SciPy, Matplotlib, Enthought librarys,pandas</li><li>  <strong>系统运维</strong>: 运维人员必备语言</li><li>  <strong>金融</strong>：量化交易，金融分析，在金融工程领域，Python不但在用，且用的最多，而且重要性逐年提高。原因：作为动态语言的Python，语言结构清晰简单，库丰富，成熟稳定，科学计算和统计分析都很牛逼，生产效率远远高于c,c++,java,尤其擅长策略回测</li><li>  <strong>图形GUI</strong>: PyQT, WxPython,TkInter</li></ul><p><strong>Python在一些公司的应用：</strong> </p><ul><li>  谷歌：Google App Engine 、code.google.com 、Google earth 、谷歌爬虫、Google广告等项目都在大量使用Python开发</li><li>  CIA: 美国中情局网站就是用Python开发的</li><li>  NASA: 美国航天局(NASA)大量使用Python进行数据分析和运算</li><li>  YouTube:世界上最大的视频网站YouTube就是用Python开发的</li><li>  Dropbox:美国最大的在线云存储网站，全部用Python实现，每天网站处理10亿个文件的上传和下载</li><li>  Instagram:美国最大的图片分享社交网站，每天超过3千万张照片被分享，全部用python开发</li><li>  Facebook:大量的基础库均通过Python实现的</li><li>  Redhat: 世界上最流行的Linux发行版本中的yum包管理工具就是用python开发的</li><li>  豆瓣: 公司几乎所有的业务均是通过Python开发的</li><li>  知乎: 国内最大的问答社区，通过Python开发(国外Quora)</li><li>  春雨医生：国内知名的在线医疗网站是用Python开发的</li><li>  除上面之外，还有搜狐、金山、腾讯、盛大、网易、百度、阿里、淘宝 、土豆、新浪、果壳等公司都在使用Python完成各种各样的任务。</li></ul><h3 id="Python-是一门什么样的语言？"><a href="#Python-是一门什么样的语言？" class="headerlink" title="Python 是一门什么样的语言？"></a><strong><strong>Python 是一门什么样的语言？</strong></strong></h3><p>编程语言主要从以下几个角度为进行分类，编译型和解释型、静态语言和动态语言、强类型定义语言和弱类型定义语言，每个分类代表什么意思呢，我们一起来看一下。</p><h4 id="编译和解释的区别是什么？"><a href="#编译和解释的区别是什么？" class="headerlink" title="编译和解释的区别是什么？"></a><strong>编译和解释的区别是什么？</strong></h4><p><strong>编译器</strong>是把源程序的每一条语句都编译成机器语言,并保存成二进制文件,这样运行时计算机可以直接以机器语言来运行此程序,速度很快; 而<strong>解释器</strong>则是只在执行程序时,才一条一条的解释成机器语言给计算机来执行,所以运行速度是不如编译后的程序运行的快的. 这是因为计算机不能直接认识并执行我们写的语句,它只能认识机器语言(是二进制的形式) <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031620.png" alt="IMG_257">       <img src="https://opstand.gitee.io/media/uploads/2020/11/202011220203256.png" alt="IMG_258">  </p><h4 id="编译型vs解释型"><a href="#编译型vs解释型" class="headerlink" title="编译型vs解释型"></a><strong>编译型vs解释型</strong></h4><p><strong>编译型</strong> 优点：编译器一般会有预编译的过程对代码进行优化。因为编译只做一次，运行时不需要编译，所以编译型语言的程序执行效率高。可以脱离语言环境独立运行。 缺点：编译之后如果需要修改就需要整个模块重新编译。编译的时候根据对应的运行环境生成机器码，不同的操作系统之间移植就会有问题，需要根据运行的操作系统环境编译不同的可执行文件。 <strong>解释型</strong> 优点：有良好的平台兼容性，在任何环境中都可以运行，前提是安装了解释器（虚拟机）。灵活，修改代码的时候直接修改就可以，可以快速部署，不用停机维护。 缺点：每次运行的时候都要解释一遍，性能上不如编译型语言。     <strong>一、低级语言与高级语言</strong> 最初的计算机程序都是用0和1的序列表示的，程序员直接使用的是机器指令，无需翻译，从纸带打孔输入即可执行得到结果。后来为了方便记忆，就将用0、1序列表示的机器指令都用符号助记，这些与机器指令一一对应的助记符就成了汇编指令，从而诞生了汇编语言。无论是机器指令还是汇编指令都是面向机器的，统称为低级语言。因为是针对特定机器的机器指令的助记符，所以汇编语言是无法独立于机器(特定的CPU体系结构)的。但汇编语言也是要经过翻译成机器指令才能执行的，所以也有将运行在一种机器上的汇编语言翻译成运行在另一种机器上的机器指令的方法，那就是交叉汇编技术。 高级语言是从人类的逻辑思维角度出发的计算机语言，抽象程度大大提高，需要经过编译成特定机器上的目标代码才能执行，一条高级语言的语句往往需要若干条机器指令来完成。高级语言独立于机器的特性是靠编译器为不同机器生成不同的目标代码(或机器指令)来实现的。那具体的说，要将高级语言编译到什么程度呢，这又跟编译的技术有关了，既可以编译成直接可执行的目标代码，也可以编译成一种中间表示，然后拿到不同的机器和系统上去执行，这种情况通常又需要支撑环境，比如解释器或虚拟机的支持，Java程序编译成bytecode，再由不同平台上的虚拟机执行就是很好的例子。所以，说高级语言不依赖于机器，是指在不同的机器或平台上高级语言的程序本身不变，而通过编译器编译得到的目标代码去适应不同的机器。从这个意义上来说，通过交叉汇编，一些汇编程序也可以获得不同机器之间的可移植性，但这种途径获得的移植性远远不如高级语言来的方便和实用性大。 <strong>二、编译与解释</strong> 编译是将源程序翻译成可执行的目标代码，翻译与执行是分开的；而解释是对源程序的翻译与执行一次性完成，不生成可存储的目标代码。这只是表象，二者背后的最大区别是：对解释执行而言，程序运行时的控制权在解释器而不在用户程序；对编译执行而言，运行时的控制权在用户程序。 解释具有良好的动态特性和可移植性，比如在解释执行时可以动态改变变量的类型、对程序进行修改以及在程序中插入良好的调试诊断信息等，而将解释器移植到不同的系统上，则程序不用改动就可以在移植了解释器的系统上运行。同时解释器也有很大的缺点，比如执行效率低，占用空间大，因为不仅要给用户程序分配空间，解释器本身也占用了宝贵的系统资源。 编译器是把源程序的每一条语句都编译成机器语言,并保存成二进制文件,这样运行时计算机可以直接以机器语言来运行此程序,速度很快; 而解释器则是只在执行程序时,才一条一条的解释成机器语言给计算机来执行,所以运行速度是不如编译后的程序运行的快的.   <strong>编译型和解释型</strong> 我们先看看编译型，其实它和汇编语言是一样的：也是有一个负责翻译的程序来对我们的源代码进行转换，生成相对应的可执行代码。这个过程说得专业一点，就称为编译（Compile），而负责编译的程序自然就称为编译器（Compiler）。如果我们写的程序代码都包含在一个源文件中，那么通常编译之后就会直接生成一个可执行文件，我们就可以直接运行了。但对于一个比较复杂的项目，为了方便管理，我们通常把代码分散在各个源文件中，作为不同的模块来组织。这时编译各个文件时就会生成目标文件（Object   file）而不是前面说的可执行文件。一般一个源文件的编译都会对应一个目标文件。这些目标文件里的内容基本上已经是可执行代码了，但由于只是整个项目的一部分，所以我们还不能直接运行。待所有的源文件的编译都大功告成，我们就可以最后把这些半成品的目标文件“打包”成一个可执行文件了，这个工作由另一个程序负责完成，由于此过程好像是把包含可执行代码的目标文件连接装配起来，所以又称为链接（Link），而负责链接的程序就叫……就叫链接程序（Linker）。链接程序除了链接目标文件外，可能还有各种资源，像图标文件啊、声音文件啊什么的，还要负责去除目标文件之间的冗余重复代码，等等，所以……也是挺累的。链接完成之后，一般就可以得到我们想要的可执行文件了。 上面我们大概地介绍了编译型语言的特点，现在再看看解释型。噢，从字面上看，“编译”和“解释”的确都有“翻译”的意思，它们的区别则在于翻译的时机安排不大一样。打个比方：假如你打算阅读一本外文书，而你不知道这门外语，那么你可以找一名翻译，给他足够的时间让他从头到尾把整本书翻译好，然后把书的母语版交给你阅读；或者，你也立刻让这名翻译辅助你阅读，让他一句一句给你翻译，如果你想往回看某个章节，他也得重新给你翻译。 两种方式，前者就相当于我们刚才所说的编译型：一次把所有的代码转换成机器语言，然后写成可执行文件；而后者就相当于我们要说的解释型：在程序运行的前一刻，还只有源程序而没有可执行程序；而程序每执行到源程序的某一条指令，则会有一个称之为解释程序的外壳程序将源代码转换成二进制代码以供执行，总言之，就是不断地解释、执行、解释、执行……所以，解释型程序是离不开解释程序的。像早期的BASIC就是一门经典的解释型语言，要执行BASIC程序，就得进入BASIC环境，然后才能加载程序源文件、运行。解释型程序中，由于程序总是以源代码的形式出现，因此只要有相应的解释器，移植几乎不成问题。编译型程序虽然源代码也可以移植，但前提是必须针对不同的系统分别进行编译，对于复杂的工程来说，的确是一件不小的时间消耗，况且很可能一些细节的地方还是要修改源代码。而且，解释型程序省却了编译的步骤，修改调试也非常方便，编辑完毕之后即可立即运行，不必像编译型程序一样每次进行小小改动都要耐心等待漫长的Compiling…Linking…这样的编译链接过程。不过凡事有利有弊，由于解释型程序是将编译的过程放到执行过程中，这就决定了解释型程序注定要比编译型慢上一大截，像几百倍的速度差距也是不足为奇的。 编译型与解释型，两者各有利弊。前者由于程序执行速度快，同等条件下对系统要求较低，因此像开发操作系统、大型应用程序、数据库系统等时都采用它，像C/C++、Pascal/Object   Pascal（Delphi）、VB等基本都可视为编译语言，而一些网页脚本、服务器脚本及辅助开发接口这样的对速度要求不高、对不同系统平台间的兼容性有一定要求的程序则通常使用解释性语言，如Java、JavaScript、VBScript、Perl、Python等等。 但既然编译型与解释型各有优缺点又相互对立，所以一批新兴的语言都有把两者折衷起来的趋势，例如Java语言虽然比较接近解释型语言的特征，但在执行之前已经预先进行一次预编译，生成的代码是介于机器码和Java源代码之间的中介代码，运行的时候则由JVM（Java的虚拟机平台，可视为解释器）解释执行。它既保留了源代码的高抽象、可移植的特点，又已经完成了对源代码的大部分预编译工作，所以执行起来比“纯解释型”程序要快许多。而像VB6（或者以前版本）、C#这样的语言，虽然表面上看生成的是.exe可执行程序文件，但VB6编译之后实际生成的也是一种中介码，只不过编译器在前面安插了一段自动调用某个外部解释器的代码（该解释程序独立于用户编写的程序，存放于系统的某个DLL文件中，所有以VB6编译生成的可执行程序都要用到它），以解释执行实际的程序体。C#（以及其它.net的语言编译器）则是生成.net目标代码，实际执行时则由.net解释系统（就像JVM一样，也是一个虚拟机平台）进行执行。当然.net目标代码已经相当“低级”，比较接近机器语言了，所以仍将其视为编译语言，而且其可移植程度也没有Java号称的这么强大，Java号称是“一次编译，到处执行”，而.net则是“一次编码，到处编译”。呵呵，当然这些都是题外话了。总之，随着设计技术与硬件的不断发展，编译型与解释型两种方式的界限正在不断变得模糊。 <strong>动态语言和静态语言</strong> 通常我们所说的动态语言、静态语言是指动态类型语言和静态类型语言。 （1）动态类型语言：动态类型语言是指在运行期间才去做数据类型检查的语言，也就是说，在用动态类型的语言编程时，永远也不用给任何变量指定数据类型，该语言会在你第一次赋值给变量时，在内部将数据类型记录下来。Python和Ruby就是一种典型的动态类型语言，其他的各种脚本语言如VBScript也多少属于动态类型语言。 （2）静态类型语言：静态类型语言与动态类型语言刚好相反，它的数据类型是在编译其间检查的，也就是说在写程序时要声明所有变量的数据类型，C/C++是静态类型语言的典型代表，其他的静态类型语言还有C#、JAVA等。   <strong>强类型定义语言和弱类型定义语言</strong> （1）强类型定义语言：强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过强制转换，那么它就永远是这个数据类型了。举个例子：如果你定义了一个整型变量a,那么程序根本不可能将a当作字符串类型处理。强类型定义语言是类型安全的语言。 （2）弱类型定义语言：数据类型可以被忽略的语言。它与强类型定义语言相反, 一个变量可以赋不同数据类型的值。 强类型定义语言在速度上可能略逊色于弱类型定义语言，但是强类型定义语言带来的严谨性能够有效的避免许多错误。另外，“这门语言是不是动态语言”与“这门语言是否类型安全”之间是完全没有联系的！ 例如：Python是动态语言，是强类型定义语言（类型安全的语言）; VBScript是动态语言，是弱类型定义语言（类型不安全的语言）; JAVA是静态语言，是强类型定义语言（类型安全的语言）。   通过上面这些介绍，我们可以得出，<strong>python是一门动态解释性的强类型定义语言。</strong>那这些基因使成就了Python的哪些优缺点呢？我们继续往下看。</p><h3 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a><strong><strong>Python的优缺点</strong></strong></h3><p>先看优点</p><ol><li> Python的定位是“优雅”、“明确”、“简单”，所以Python程序看上去总是简单易懂，初学者学Python，不但入门容易，而且将来深入下去，可以编写那些非常非常复杂的程序。</li><li> 开发效率非常高，Python有非常强大的第三方库，基本上你想通过计算机实现任何功能，Python官方库里都有相应的模块进行支持，直接下载调用后，在基础库的基础上再进行开发，大大降低开发周期，避免重复造轮子。</li><li> 高级语言————当你用Python语言编写程序的时候，你无需考虑诸如如何管理你的程序使用的内存一类的底层细节</li><li> 可移植性————由于它的开源本质，Python已经被移植在许多平台上（经过改动使它能够工 作在不同平台上）。如果你小心地避免使用依赖于系统的特性，那么你的所有Python程序无需修改就几乎可以在市场上所有的系统平台上运行</li><li> 可扩展性————如果你需要你的一段关键代码运行得更快或者希望某些算法不公开，你可以把你的部分程序用C或C++编写，然后在你的Python程序中使用它们。</li><li> 可嵌入性————你可以把Python嵌入你的C/C++程序，从而向你的程序用户提供脚本功能。</li></ol><p>再看缺点：</p><ol><li> 速度慢，Python 的运行速度相比C语言确实慢很多，跟JAVA相比也要慢一些，因此这也是很多所谓的大牛不屑于使用Python的主要原因，但其实这里所指的运行速度慢在大多数情况下用户是无法直接感知到的，必须借助测试工具才能体现出来，比如你用C运一个程序花了0.01s,用Python是0.1s,这样C语言直接比Python快了10倍,算是非常夸张了，但是你是无法直接通过肉眼感知的，因为一个正常人所能感知的时间最小单位是0.15-0.4s左右，哈哈。其实在大多数情况下Python已经完全可以满足你对程序速度的要求，除非你要写对速度要求极高的搜索引擎等，这种情况下，当然还是建议你用C去实现的。</li><li> 代码不能加密，因为PYTHON是解释性语言，它的源码都是以名文形式存放的，不过我不认为这算是一个缺点，如果你的项目要求源代码必须是加密的，那你一开始就不应该用Python来去实现。</li><li> 线程不能利用多CPU问题，这是Python被人诟病最多的一个缺点，GIL即全局解释器锁（Global Interpreter Lock），是[计算机程序设计语言](<a href="http://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80&quot;">http://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80&quot;</a> \o “计算机程序设计语言)[解释器](<a href="http://zh.wikipedia.org/wiki/%E8%A7%A3%E9%87%8A%E5%99%A8&quot;">http://zh.wikipedia.org/wiki/%E8%A7%A3%E9%87%8A%E5%99%A8&quot;</a> \o “解释器)用于[同步](<a href="http://zh.wikipedia.org/wiki/%E5%90%8C%E6%AD%A5&quot;">http://zh.wikipedia.org/wiki/%E5%90%8C%E6%AD%A5&quot;</a> \o “同步)[线程](<a href="http://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B&quot;">http://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B&quot;</a> \o “线程)的工具，使得任何时刻仅有一个线程在执行，Python的线程是操作系统的原生线程。在Linux上为pthread，在Windows上为Win thread，完全由操作系统调度线程的执行。一个python解释器进程内有一条主线程，以及多条用户程序的执行线程。即使在多核CPU平台上，由于GIL的存在，所以禁止多线程的并行执行。关于这个问题的折衷解决方法，我们在以后线程和进程章节里再进行详细探讨。</li></ol><p>  当然，Python还有一些其它的小缺点，在这就不一一列举了，我想说的是，任何一门语言都不是完美的，都有擅长和不擅长做的事情，建议各位不要拿一个语言的劣势去跟另一个语言的优势来去比较，语言只是一个工具，是实现程序设计师思想的工具，就像我们之前中学学几何时，有的时候需要要圆规，有的时候需要用三角尺一样，拿相应的工具去做它最擅长的事才是正确的选择。之前很多人问我Shell和Python到底哪个好？我回答说Shell是个脚本语言，但Python不只是个脚本语言，能做的事情更多，然后又有钻牛角尖的人说完全没必要学Python, Python能做的事情Shell都可以做，只要你足够牛B,然后又举了用Shell可以写俄罗斯方块这样的游戏，对此我能说表达只能是，不要跟SB理论，SB会把你拉到跟他一样的高度，然后用充分的经验把你打倒。    </p><h3 id="Python解释器"><a href="#Python解释器" class="headerlink" title="Python解释器"></a><strong><strong>Python解释器</strong></strong></h3><p>当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。 由于整个Python语言从规范到解释器都是开源的，所以理论上，只要水平够高，任何人都可以编写Python解释器来执行Python代码（当然难度很大）。事实上，确实存在多种Python解释器。</p><h4 id="CPython"><a href="#CPython" class="headerlink" title="CPython"></a><strong>CPython</strong></h4><p>当我们从<a href="https://www.python.org/">Python官方网站</a>下载并安装好Python 2.7后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。 CPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。</p><h4 id="IPython"><a href="#IPython" class="headerlink" title="IPython"></a><strong>IPython</strong></h4><p>IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。 CPython用&gt;&gt;&gt;作为提示符，而IPython用In [序号]:作为提示符。</p><h4 id="PyPy"><a href="#PyPy" class="headerlink" title="PyPy"></a><strong>PyPy</strong></h4><p>PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用<a href="http://en.wikipedia.org/wiki/Just-in-time_compilation">JIT技术</a>，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。 绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解<a href="http://pypy.readthedocs.org/en/latest/cpython_differences.html">PyPy和CPython的不同点</a>。</p><h4 id="Jython"><a href="#Jython" class="headerlink" title="Jython"></a><strong>Jython</strong></h4><p>Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。</p><h4 id="IronPython"><a href="#IronPython" class="headerlink" title="IronPython"></a><strong>IronPython</strong></h4><p>IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h3><p>Python的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。 </p><h3 id="二、Python发展史"><a href="#二、Python发展史" class="headerlink" title="二、Python发展史"></a><strong>二、Python发展史</strong></h3><ul><li>  1989年，为了打发圣诞节假期，Guido开始写Python语言的编译器。Python这个名字，来自Guido所挚爱的电视剧Monty Python’s Flying Circus。他希望这个新的叫做Python的语言，能符合他的理想：创造一种C和shell之间，功能全面，易学易用，可拓展的语言。</li><li>  1991年，第一个Python编译器诞生。它是用C语言实现的，并能够调用C语言的库文件。从一出生，Python已经具有了：类，函数，异常处理，包含表和词典在内的核心数据类型，以及模块为基础的拓展系统。</li><li>  Granddaddy of Python web frameworks, Zope 1 was released in 1999</li><li>  Python 1.0 - January 1994 增加了 <a href="https://en.wikipedia.org/wiki/Lambda_calculus">lambda</a>, <a href="https://en.wikipedia.org/wiki/Map_(higher-order_function)">map</a>, <a href="https://en.wikipedia.org/wiki/Filter_(higher-order_function)">filter</a> and <a href="https://en.wikipedia.org/wiki/Fold_(higher-order_function)">reduce</a>.</li><li>  Python 2.0 - October 16, 2000，加入了内存回收机制，构成了现在Python语言框架的基础</li><li>  Python 2.4 - November 30, 2004, 同年目前最流行的WEB框架Django 诞生</li><li>  Python 2.5 - September 19, 2006</li><li>  Python 2.6 - October 1, 2008</li><li>  Python 2.7 - July 3, 2010</li><li>  In November 2014, it was announced that Python 2.7 would be supported until 2020, and reaffirmed that there would be no 2.8 release as users were expected to move to Python 3.4+ as soon as possible</li><li>  Python 3.0 - December 3, 2008</li><li>  Python 3.1 - June 27, 2009</li><li>  Python 3.2 - February 20, 2011</li><li>  Python 3.3 - September 29, 2012</li><li>  Python 3.4 - March 16, 2014</li><li>  Python 3.5 - September 13, 2015</li></ul><h3 id="三、Python-2-or-3"><a href="#三、Python-2-or-3" class="headerlink" title="三、Python 2 or 3?"></a><strong>三、Python 2 or 3?</strong></h3><p><strong>In summary : Python 2.x is legacy, Python 3.x is the present and future of the language</strong> Python 3.0 was released in 2008. The final 2.x version 2.7 release came out in mid-2010, with a statement of extended support for this end-of-life release. The 2.x branch will see no new major releases after that. 3.x is under active development and has already seen over five years of stable releases, including version 3.3 in 2012, 3.4 in 2014, and 3.5 in 2015. This means that all recent standard library improvements, for example, are only available by default in Python 3.x. Guido van Rossum (the original creator of the Python language) decided to clean up Python 2.x properly, with less regard for backwards compatibility than is the case for new releases in the 2.x range. The most drastic improvement is the better Unicode support (with all text strings being Unicode by default) as well as saner bytes/Unicode separation. Besides, several aspects of the core language (such as print and exec being statements, integers using floor division) have been adjusted to be easier for newcomers to learn and to be more consistent with the rest of the language, and old cruft has been removed (for example, all classes are now new-style, “range()” returns a memory efficient iterable, not a list as in 2.x).</p><h4 id="py2与3的详细区别"><a href="#py2与3的详细区别" class="headerlink" title="py2与3的详细区别"></a><strong>py2与3的详细区别</strong></h4><p><strong>PRINT IS A FUNCTION</strong> The statement has been replaced with a print() function, with keyword arguments to replace most of the special syntax of the old statement (PEP 3105). Examples: <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a> You can also customize the separator between items, e.g.:</p><p>print(“There are &lt;”, 2**32, “&gt; possibilities!”, sep=””)</p><p><strong>ALL IS UNICODE NOW</strong> <strong>从此不再为讨厌的字符编码而烦恼</strong>   <strong>还可以这样玩： (A,*REST,B)=RANGE(5)</strong></p><p><strong>&gt;&gt;&gt; a,*rest,b = range(5) &gt;&gt;&gt; a,rest,b (0, [1, 2, 3], 4) </strong></p><p>  <strong>某些库改名了</strong>  </p><p>Old Name</p><p>New Name</p><p>_winreg</p><p>winreg</p><p>ConfigParser</p><p>configparser</p><p>copy_reg</p><p>copyreg</p><p>Queue</p><p>queue</p><p>SocketServer</p><p>socketserver</p><p>markupbase</p><p>_markupbase</p><p>repr</p><p>reprlib</p><p>test.test_support</p><p>test.support</p><p>  <strong>还有谁不支持PYTHON3?</strong> One popular module that don’t yet support Python 3 is Twisted (for networking and other applications). Most actively maintained libraries have people working on 3.x support. For some libraries, it’s more of a priority than others: Twisted, for example, is mostly focused on production servers, where supporting older versions of Python is important, let alone supporting a new version that includes major changes to the language. (Twisted is a prime example of a major package where porting to 3.x is far from trivial  </p><h3 id="四、Python安装"><a href="#四、Python安装" class="headerlink" title="四、Python安装"></a><strong>四、Python安装</strong></h3><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a><strong><strong>windows</strong></strong></h4><p>1 2 3 4 5 6 7</p><p>1、下载安装包 <a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a> 2、安装 默认安装路径：C:\python27 3、配置环境变量 【右键计算机】–》【属性】–》【高级系统设置】–》【高级】–》【环境变量】–》【在第二个内容框中找到 变量名为Path 的一行，双击】 –&gt; 【Python安装目录追加到变值值中，用 ； 分割】 如：原来的值;C:\python27，切记前面有分号</p><p><strong>linux、Mac</strong></p><p>1 2 3</p><p>无需安装，原装Python环境   ps：如果自带2.6，请更新至2.7</p><p> </p><h3 id="五、Hello-World程序"><a href="#五、Hello-World程序" class="headerlink" title="五、Hello World程序"></a><strong>五、Hello World程序</strong></h3><p>在linux 下创建一个文件叫hello.py,并输入</p><p>1</p><p>print(“Hello World!”)</p><p>然后执行命令:python hello.py ,输出</p><p>1 2 3</p><p>localhost:~ jieli$ vim hello.py localhost:~ jieli$ python hello.py Hello World!</p><p><strong>指定解释器</strong> 上一步中执行 python hello.py 时，明确的指出 hello.py 脚本由 python 解释器来执行。 如果想要类似于执行shell脚本一样执行python脚本，例： ./hello.py ，那么就需要在 hello.py 文件的头部指定解释器，如下：</p><p>1 2 3</p><p>#!/usr/bin/env python   print “hello,world”</p><p>如此一来，执行： ./hello.py 即可。 ps：执行前需给予 hello.py 执行权限，chmod 755 hello.py **在交互器中执行　** 除了把程序写在文件里，还可以直接调用python自带的交互器运行代码，</p><p>1 2 3 4 5 6</p><p>localhost:~ jieli$ python Python 2.7.10 (default, Oct 23 2015, 18:05:06) [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin Type “help”, “copyright”, “credits” or “license” for more information. &gt;&gt;&gt; print(“Hello World!”) Hello World!</p><p>对比下其它语言的hello world <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032560.gif" alt="IMG_259">  C++ <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032617.gif" alt="IMG_260">  C <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032649.gif" alt="IMG_261">  JAVA <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032684.gif" alt="IMG_262">  PHP <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032632.gif" alt="IMG_263">  RUBY <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032762.gif" alt="IMG_264">  Go  </p><h3 id="六、变量-字符编码"><a href="#六、变量-字符编码" class="headerlink" title="六、变量\字符编码"></a><strong>六、变量\字符编码</strong></h3><p><strong>Variables</strong> are used to store information to be referenced and manipulated in a computer program. They also provide a way of labeling data with a descriptive name, so our programs can be understood more clearly by the reader and ourselves. It is helpful to think of variables as containers that hold information. Their sole purpose is to label and store data in memory. This data can then be used throughout your program. <strong>声明变量</strong></p><p>1 2 3</p><p>#_*_coding:utf-8_*_   name = “Alex Li”</p><p>上述代码声明了一个变量，变量名为： name，变量name的值为：”Alex Li” <strong>变量定义的规则：</strong></p><ul><li><ul><li>  变量名只能是 字母、数字或下划线的任意组合</li><li>  变量名的第一个字符不能是数字</li><li>  以下关键字不能声明为变量名 [‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</li></ul></li></ul><p><strong>变量的赋值</strong></p><p>1 2 3 4 5 6 7 8</p><p>name = “Alex Li”   name2 = name print(name,name2)   name = “Jack”   print(“What is the value of name2 now?”)</p><p> </p><h3 id="七、字符编码"><a href="#七、字符编码" class="headerlink" title="七、字符编码"></a><strong><strong>七、字符编码</strong></strong></h3><p>python解释器在加载 .py 文件中的代码时，会对内容进行编码（默认ascill） ASCII（American Standard Code for Information Interchange，美国标准信息交换代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言，其最多只能用 8 位来表示（一个字节），即：2**8 = 256-1，所以，ASCII码最多只能表示 255 个符号。   <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032740.gif" alt="IMG_265"> <strong>关于中文</strong> 为了处理汉字，程序员设计了用于简体中文的GB2312和用于繁体中文的big5。 GB2312(1980年)一共收录了7445个字符，包括6763个汉字和682个其它符号。汉字区的内码范围高字节从B0-F7，低字节从A1-FE，占用的码位是72*94=6768。其中有5个空位是D7FA-D7FE。 GB2312 支持的汉字太少。1995年的汉字扩展规范GBK1.0收录了21886个符号，它分为汉字区和图形符号区。汉字区包括21003个字符。2000年的 GB18030是取代GBK1.0的正式国家标准。该标准收录了27484个汉字，同时还收录了藏文、蒙文、维吾尔文等主要的少数民族文字。现在的PC平台必须支持GB18030，对嵌入式产品暂不作要求。所以手机、MP3一般只支持GB2312。 从ASCII、GB2312、GBK 到GB18030，这些编码方法是向下兼容的，即同一个字符在这些方案中总是有相同的编码，后面的标准支持更多的字符。在这些编码中，英文和中文可以统一地处理。区分中文编码的方法是高字节的最高位不为0。按照程序员的称呼，GB2312、GBK到GB18030都属于双字节字符集 (DBCS)。 有的中文Windows的缺省内码还是GBK，可以通过GB18030升级包升级到GB18030。不过GB18030相对GBK增加的字符，普通人是很难用到的，通常我们还是用GBK指代中文Windows内码。     <strong>显然ASCII码无法将世界上的各种文字和符号全部表示，所以，就需要新出一种可以代表所有字符和符号的编码，即：Unicode</strong> Unicode（统一码、万国码、单一码）是一种在计算机上使用的字符编码。Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，规定虽有的字符和符号最少由 16 位来表示（2个字节），即：2 **16 = 65536， 注：此处说的的是最少2个字节，可能更多 UTF-8，是对Unicode编码的压缩和优化，他不再使用最少使用2个字节，而是将所有的字符和符号进行分类：ascii码中的内容用1个字节保存、欧洲的字符用2个字节保存，东亚的字符用3个字节保存… 所以，python解释器在加载 .py 文件中的代码时，会对内容进行编码（默认ascill），如果是如下代码的话： 报错：ascii码无法表示中文</p><p>1 2 3</p><p>#!/usr/bin/env python   print “你好，世界”</p><p>改正：应该显示的告诉python解释器，用什么编码来执行源代码，即：</p><p>1 2 3 4</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   print “你好，世界”</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a><strong><strong>注释</strong></strong></h3><p>当行注视：# 被注释内容 多行注释：””” 被注释内容 “””      </p><h3 id="八、用户输入"><a href="#八、用户输入" class="headerlink" title="八、用户输入"></a><strong>八、用户输入</strong></h3><p>1 2 3 4 5 6 7</p><p>#!/usr/bin/env python #_*_coding:utf-8_*_     #name = raw_input(“What is your name?”) #only on python 2.x name = input(“What is your name?”) print(“Hello “ + name )</p><p>输入密码时，如果想要不可见，需要利用getpass 模块中的 getpass方法，即：</p><p>1 2 3 4 5 6 7 8 9 10</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   import getpass   # 将用户输入的内容赋值给 name 变量 pwd = getpass.getpass(“请输入密码：”)   # 打印输入的内容 print(pwd)</p><p> </p><h3 id="九、模块初识"><a href="#九、模块初识" class="headerlink" title="九、模块初识"></a><strong>九、模块初识</strong></h3><p>Python的强大之处在于他有非常丰富和强大的标准库和第三方库，几乎你想实现的任何功能都有相应的Python库支持，以后的课程中会深入讲解常用到的各种库，现在，我们先来象征性的学2个简单的。 <strong>sys</strong></p><p>1 2 3 4 5 6 7 8 9 10 11</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   import sys   print(sys.argv)     #输出 $ python test.py helo world [‘test.py’, ‘helo’, ‘world’]  #把执行脚本时传递的参数获取到了</p><p>  <strong>os</strong></p><p>1 2 3 4 5 6</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   import os   os.system(“df -h”) #调用系统命令</p><p><strong>完全结合一下</strong> </p><p>1 2 3</p><p>import os,sys   os.system(‘’.join(sys.argv[1:])) #把用户的输入的参数当作一条命令交给os.system来执行</p><p><strong>自己写个模块</strong> python tab补全模块 <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032822.gif" alt="IMG_266">  for mac <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032826.gif" alt="IMG_267">  for Linux 写完保存后就可以使用了</p><p>1 2 3 4 5</p><p>localhost:~ jieli$ python Python 2.7.10 (default, Oct 23 2015, 18:05:06) [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin Type “help”, “copyright”, “credits” or “license” for more information. &gt;&gt;&gt; import tab</p><p>你会发现，上面自己写的tab.py模块只能在当前目录下导入，如果想在系统的何何一个地方都使用怎么办呢？ 此时你就要把这个tab.py放到python全局环境变量目录里啦，基本一般都放在一个叫 Python/2.7/site-packages 目录下，这个目录在不同的OS里放的位置不一样，用 print(sys.path) 可以查看python环境变量列表。  </p><h3 id="十、-pyc是个什么鬼？"><a href="#十、-pyc是个什么鬼？" class="headerlink" title="十、.pyc是个什么鬼？"></a><strong>十、.pyc是个什么鬼？</strong></h3><p><strong>1. Python是一门解释型语言？</strong> 我初学Python时，听到的关于Python的第一句话就是，Python是一门解释性语言，我就这样一直相信下去，直到发现了*.pyc文件的存在。如果是解释型语言，那么生成的*.pyc文件是什么呢？c应该是compiled的缩写才对啊！ 为了防止其他学习Python的人也被这句话误解，那么我们就在文中来澄清下这个问题，并且把一些基础概念给理清。  <strong>2. 解释型语言和编译型语言</strong> 计算机是不能够识别高级语言的，所以当我们运行一个高级语言程序的时候，就需要一个“翻译机”来从事把高级语言转变成计算机能读懂的机器语言的过程。这个过程分成两类，第一种是编译，第二种是解释。 编译型语言在程序执行之前，先会通过编译器对程序执行一个编译的过程，把程序转变成机器语言。运行时就不需要翻译，而直接执行就可以了。最典型的例子就是C语言。 解释型语言就没有这个编译的过程，而是在程序运行的时候，通过解释器对程序逐行作出解释，然后直接运行，最典型的例子是Ruby。 通过以上的例子，我们可以来总结一下解释型语言和编译型语言的优缺点，因为编译型语言在程序运行之前就已经对程序做出了“翻译”，所以在运行时就少掉了“翻译”的过程，所以效率比较高。但是我们也不能一概而论，一些解释型语言也可以通过解释器的优化来在对程序做出翻译时对整个程序做出优化，从而在效率上超过编译型语言。 此外，随着Java等基于虚拟机的语言的兴起，我们又不能把语言纯粹地分成解释型和编译型这两种。 用Java来举例，Java首先是通过编译器编译成字节码文件，然后在运行时通过解释器给解释成机器文件。所以我们说Java是一种先编译后解释的语言。   <strong>3. Python到底是什么</strong> 其实Python和Java/C#一样，也是一门基于虚拟机的语言，我们先来从表面上简单地了解一下Python程序的运行过程吧。 当我们在命令行中输入python hello.py时，其实是激活了Python的“解释器”，告诉“解释器”：你要开始工作了。可是在“解释”之前，其实执行的第一项工作和Java一样，是编译。 熟悉Java的同学可以想一下我们在命令行中如何执行一个Java的程序： javac hello.java java hello   只是我们在用Eclipse之类的IDE时，将这两部给融合成了一部而已。其实Python也一样，当我们执行python hello.py时，他也一样执行了这么一个过程，所以我们应该这样来描述Python，Python是一门先编译后解释的语言。 <strong>4. 简述Python的运行过程</strong> 在说这个问题之前，我们先来说两个概念，PyCodeObject和pyc文件。 我们在硬盘上看到的pyc自然不必多说，而其实PyCodeObject则是Python编译器真正编译成的结果。我们先简单知道就可以了，继续向下看。 当python程序运行时，编译的结果则是保存在位于内存中的PyCodeObject中，当Python程序运行结束时，Python解释器则将PyCodeObject写回到pyc文件中。 当python程序第二次运行时，首先程序会在硬盘中寻找pyc文件，如果找到，则直接载入，否则就重复上面的过程。 所以我们应该这样来定位PyCodeObject和pyc文件，我们说pyc文件其实是PyCodeObject的一种持久化保存方式。  </p><h3 id="十一、数据类型初识"><a href="#十一、数据类型初识" class="headerlink" title="十一、数据类型初识"></a><strong>十一、数据类型初识</strong></h3><p>1、数字 2 是一个整数的例子。 长整数 不过是大一些的整数。 3.23和52.3E-4是浮点数的例子。E标记表示10的幂。在这里，52.3E-4表示52.3 * 10-4。 (-5+4j)和(2.3-4.6j)是复数的例子，其中-5,4为实数，j为虚数，数学中表示复数是什么？。 int（整型） 在32位机器上，整数的位数为32位，取值范围为-2**31～2**31-1，即-2147483648～2147483647 在64位系统上，整数的位数为64位，取值范围为-2**63～2**63-1，即-9223372036854775808～9223372036854775807 long（长整型） 　　跟C语言不同，Python的长整数没有指定位宽，即：Python没有限制长整数数值的大小，但实际上由于机器内存有限，我们使用的长整数数值不可能无限大。 注意，自从Python2.2起，如果整数发生溢出，Python会自动将整数数据转换为长整数，所以如今在长整数数据后面不加字母L也不会导致严重后果了。 float（浮点型） 先扫盲 <a href="http://www.cnblogs.com/alex3714/articles/5895848.html">http://www.cnblogs.com/alex3714/articles/5895848.html</a>  　　浮点数用来处理实数，即带有小数的数字。类似于C语言中的double类型，占8个字节（64位），其中52位表示底，11位表示指数，剩下的一位表示符号。 complex（复数） 复数由实数部分和虚数部分组成，一般形式为x＋yj，其中的x是复数的实数部分，y是复数的虚数部分，这里的x和y都是实数。 注：Python中存在小数字池：-5 ～ 257   2、布尔值 真或假 1 或 0 3、字符串 “hello world” 万恶的字符串拼接： python中的字符串在C语言中体现为是一个字符数组，每次创建字符串时候需要在内存中开辟一块连续的空，并且一旦需要修改字符串的话，就需要再次开辟空间，万恶的+号每出现一次就会在内从中重新开辟一块空间。 <strong>字符串格式化输出</strong></p><p>1 2 3 4</p><p>name = “alex” print “i am %s “ % name   #输出: i am alex</p><p>PS: 字符串是 %s;整数 %d;浮点数%f 字符串常用功能：</p><ul><li>  移除空白</li><li>  分割</li><li>  长度</li><li>  索引</li><li>  切片</li></ul><p>4、列表 创建列表：</p><p>1 2 3</p><p>name_list = [‘alex’, ‘seven’, ‘eric’] 或 name_list ＝ list([‘alex’, ‘seven’, ‘eric’])</p><p>基本操作：</p><ul><li>  索引</li><li>  切片</li><li>  追加</li><li>  删除</li><li>  长度</li><li>  切片</li><li>  循环</li><li>  包含</li></ul><p>5、元组(不可变列表) 创建元组：</p><p>1 2 3</p><p>ages = (11, 22, 33, 44, 55) 或 ages = tuple((11, 22, 33, 44, 55))</p><p>  6、字典（无序） 创建字典：</p><p>1 2 3</p><p>person = {“name”: “mr.wu”, ‘age’: 18} 或 person = dict({“name”: “mr.wu”, ‘age’: 18})</p><p>常用操作：</p><ul><li>  索引</li><li>  新增</li><li>  删除</li><li>  键、值、键值对</li><li>  循环</li><li>  长度</li></ul><h3 id="十二、数据运算"><a href="#十二、数据运算" class="headerlink" title="十二、数据运算"></a><strong><strong>十二、数据运算</strong></strong></h3><p>算数运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032963.png" alt="IMG_268"> 比较运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202032913.png" alt="IMG_269"> 赋值运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033080.png" alt="IMG_270"> 逻辑运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033123.png" alt="IMG_271"> 成员运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033184.png" alt="IMG_272"> 身份运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033226.png" alt="IMG_273"> 位运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033249.png" alt="IMG_274"> <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a> *按位取反运算规则(按位取反再加1)   详解<a href="http://blog.csdn.net/wenxinwukui234/article/details/42119265">http://blog.csdn.net/wenxinwukui234/article/details/42119265</a>   运算符优先级： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033313.png" alt="IMG_275"> 更多内容：[猛击这里](<a href="http://www.runoob.com/python/python-operators.html&quot;">http://www.runoob.com/python/python-operators.html&quot;</a> \t “<a href="https://www.cnblogs.com/alex3714/articles/_blank">https://www.cnblogs.com/alex3714/articles/_blank</a>)  </p><h3 id="十三、表达式if-…-else"><a href="#十三、表达式if-…-else" class="headerlink" title="十三、表达式if … else"></a><strong>十三、表达式if … else</strong></h3><p>场景一、用户登陆验证</p><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</p><p># 提示输入用户名和密码   # 验证用户名和密码 #     如果错误，则输出用户名或密码错误 #     如果成功，则输出 欢迎，XXX!     #!/usr/bin/env python # -*- coding: encoding -*-   import getpass     name = raw_input(‘请输入用户名：’) pwd = getpass.getpass(‘请输入密码：’)   if name == “alex” and pwd == “cmd”: print(“欢迎，alex！”) else: print(“用户名和密码错误”)</p><p>场景二、猜年龄游戏 在程序里设定好你的年龄，然后启动程序让用户猜测，用户输入后，根据他的输入提示用户输入的是否正确，如果错误，提示是猜大了还是小了 <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a>   外层变量，可以被内层代码使用 内层变量，不应被外层代码使用  </p><h3 id="十四、表达式for-loop"><a href="#十四、表达式for-loop" class="headerlink" title="十四、表达式for loop"></a><strong>十四、表达式for loop</strong></h3><p><strong>最简单的循环10次</strong></p><p>1 2 3 4 5 6</p><p>#_*_coding:utf-8_*_ __author__ = ‘Alex Li’     for i in range(10): print(“loop:”, i )</p><p>输出：</p><p>1 2 3 4 5 6 7 8 9 10</p><p>loop: 0 loop: 1 loop: 2 loop: 3 loop: 4 loop: 5 loop: 6 loop: 7 loop: 8 loop: 9</p><p><strong>需求一：还是上面的程序，但是遇到小于5的循环次数就不走了，直接跳入下一次循环</strong></p><p>1 2 3 4</p><p>for i in range(10): if i&lt;5: continue #不往下走了,直接进入下一次loop print(“loop:”, i )</p><p><strong>需求二：还是上面的程序，但是遇到大于5的循环次数就不走了，直接退出</strong></p><p>1 2 3 4</p><p>for i in range(10): if i&gt;5: break #不往下走了,直接跳出整个loop print(“loop:”, i )</p><p> </p><h3 id="十五、while-loop"><a href="#十五、while-loop" class="headerlink" title="十五、while loop"></a><strong>十五、while loop</strong></h3><p> <strong>有一种循环叫死循环，一经触发，就运行个天荒地老、海枯石烂。</strong> 海枯石烂代码</p><p>1 2 3 4 5</p><p>count = 0 while True: print(“你是风儿我是沙,缠缠绵绵到天涯…”,count) count +=1  </p><p>  其实除了时间，没有什么是永恒的，死loop还是少写为好 上面的代码循环100次就退出吧   <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a>     <strong>回到上面for 循环的例子，如何实现让用户不断的猜年龄，但只给最多3次机会，再猜不对就退出程序。</strong> <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a>    </p><h3 id="十六、作业"><a href="#十六、作业" class="headerlink" title="十六、作业"></a><strong>十六、作业</strong></h3><p>作业一：博客 作业二：编写登陆接口</p><ul><li>  输入用户名密码</li><li>  认证成功后显示欢迎信息</li><li>  输错三次后锁定</li></ul><p>  作业三：多级菜单</p><ul><li>  三级菜单</li><li>  可依次选择进入各子菜单</li><li>  所需新知识点：列表、字典</li></ul><p>                 </p><h3 id="入门知识拾遗"><a href="#入门知识拾遗" class="headerlink" title="入门知识拾遗"></a><strong>入门知识拾遗</strong></h3><p><strong>一、bytes类型</strong>   <strong>二、三元运算</strong></p><p>1</p><p>result = 值1 if 条件 else 值2</p><p>如果条件为真：result = 值1 如果条件为假：result = 值2 <strong>三、进制</strong></p><ul><li>  二进制，01</li><li>  八进制，01234567</li><li>  十进制，0123456789</li><li>  十六进制，0123456789ABCDEF  二进制到16进制转换<a href="http://jingyan.baidu.com/album/47a29f24292608c0142399cb.html?picindex=1">http://jingyan.baidu.com/album/47a29f24292608c0142399cb.html?picindex=1</a></li></ul><h4 id="计算机内存地址和为什么用16进制？"><a href="#计算机内存地址和为什么用16进制？" class="headerlink" title="计算机内存地址和为什么用16进制？"></a><strong>计算机内存地址和为什么用16进制？</strong></h4><p><strong>为什么用16进制</strong> 1、计算机硬件是0101二进制的，16进制刚好是2的倍数，更容易表达一个命令或者数据。十六进制更简短，因为换算的时候一位16进制数可以顶4位2进制数，也就是一个字节（8位进制可以用两个16进制表示） 2、最早规定ASCII字符集采用的就是8bit(后期扩展了,但是基础单位还是8bit)，8bit用2个16进制直接就能表达出来，不管阅读还是存储都比其他进制要方便 3、计算机中CPU运算也是遵照ASCII字符集，以16、32、64的这样的方式在发展，因此数据交换的时候16进制也显得更好 4、为了统一规范，CPU、内存、硬盘我们看到都是采用的16进制计算 <strong>16进制用在哪里</strong> 1、网络编程，数据交换的时候需要对字节进行解析都是一个byte一个byte的处理，1个byte可以用0xFF两个16进制来表达。通过网络抓包，可以看到数据是通过16进制传输的。 2、数据存储，存储到硬件中是0101的方式，存储到系统中的表达方式都是byte方式 3、一些常用值的定义，比如：我们经常用到的html中color表达，就是用的16进制方式，4个16进制位可以表达好几百万的颜色信息。</p><h3 id="四、-一切皆对象"><a href="#四、-一切皆对象" class="headerlink" title="四、 一切皆对象"></a><strong>四、 一切皆对象</strong></h3><p><strong>对于Python，一切事物都是对象，对象基于类创建</strong> <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033378.jpeg" alt="IMG_276"> 所以，以下这些值都是对象： “wupeiqi”、38、[‘北京’, ‘上海’, ‘深圳’]，并且是根据不同的类生成的对象。 <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033463.png" alt="IMG_277"> <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033573.png" alt="IMG_278"> <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202033686.png" alt="IMG_279"> 由上图可见，Python整体呈上升趋势，反映出Python应用越来越广泛并且也逐渐得到业内的认可！！！ Python可以应用于众多领域，如：数据分析、组件集成、网络服务、图像处理、数值计算和科学计算等众多领域。目前业内几乎所有大中型互联网企业都在使用Python，如：Youtube、Dropbox、BT、Quora（中国知乎）、豆瓣、知乎、Google、Yahoo!、Facebook、NASA、百度、腾讯、汽车之家、美团等。 <strong>目前Python主要应用领域：</strong></p><ul><li>  <strong>云计算</strong>: 云计算最火的语言， 典型应用OpenStack</li><li>  <strong>WEB开发</strong>: 众多优秀的WEB框架，众多大型网站均为Python开发，Youtube, Dropbox, 豆瓣。。。， 典型WEB框架有Django</li><li>  <strong>科学运算、人工智能</strong>: 典型库NumPy, SciPy, Matplotlib, Enthought librarys,pandas</li><li>  <strong>系统运维</strong>: 运维人员必备语言</li><li>  <strong>金融</strong>：量化交易，金融分析，在金融工程领域，Python不但在用，且用的最多，而且重要性逐年提高。原因：作为动态语言的Python，语言结构清晰简单，库丰富，成熟稳定，科学计算和统计分析都很牛逼，生产效率远远高于c,c++,java,尤其擅长策略回测</li><li>  <strong>图形GUI</strong>: PyQT, WxPython,TkInter</li></ul><p><strong>Python在一些公司的应用：</strong> </p><ul><li>  谷歌：Google App Engine 、code.google.com 、Google earth 、谷歌爬虫、Google广告等项目都在大量使用Python开发</li><li>  CIA: 美国中情局网站就是用Python开发的</li><li>  NASA: 美国航天局(NASA)大量使用Python进行数据分析和运算</li><li>  YouTube:世界上最大的视频网站YouTube就是用Python开发的</li><li>  Dropbox:美国最大的在线云存储网站，全部用Python实现，每天网站处理10亿个文件的上传和下载</li><li>  Instagram:美国最大的图片分享社交网站，每天超过3千万张照片被分享，全部用python开发</li><li>  Facebook:大量的基础库均通过Python实现的</li><li>  Redhat: 世界上最流行的Linux发行版本中的yum包管理工具就是用python开发的</li><li>  豆瓣: 公司几乎所有的业务均是通过Python开发的</li><li>  知乎: 国内最大的问答社区，通过Python开发(国外Quora)</li><li>  春雨医生：国内知名的在线医疗网站是用Python开发的</li><li>  除上面之外，还有搜狐、金山、腾讯、盛大、网易、百度、阿里、淘宝 、土豆、新浪、果壳等公司都在使用Python完成各种各样的任务。</li></ul><h3 id="Python-是一门什么样的语言？-1"><a href="#Python-是一门什么样的语言？-1" class="headerlink" title="Python 是一门什么样的语言？"></a><strong><strong>Python 是一门什么样的语言？</strong></strong></h3><p>编程语言主要从以下几个角度为进行分类，编译型和解释型、静态语言和动态语言、强类型定义语言和弱类型定义语言，每个分类代表什么意思呢，我们一起来看一下。</p><h4 id="编译和解释的区别是什么？-1"><a href="#编译和解释的区别是什么？-1" class="headerlink" title="编译和解释的区别是什么？"></a><strong>编译和解释的区别是什么？</strong></h4><p><strong>编译器</strong>是把源程序的每一条语句都编译成机器语言,并保存成二进制文件,这样运行时计算机可以直接以机器语言来运行此程序,速度很快; 而<strong>解释器</strong>则是只在执行程序时,才一条一条的解释成机器语言给计算机来执行,所以运行速度是不如编译后的程序运行的快的. 这是因为计算机不能直接认识并执行我们写的语句,它只能认识机器语言(是二进制的形式) <img src="https://opstand.gitee.io/media/uploads/2020/11/20201122020302100.png" alt="IMG_257">       <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030421.png" alt="IMG_258">  </p><h4 id="编译型vs解释型-1"><a href="#编译型vs解释型-1" class="headerlink" title="编译型vs解释型"></a><strong>编译型vs解释型</strong></h4><p><strong>编译型</strong> 优点：编译器一般会有预编译的过程对代码进行优化。因为编译只做一次，运行时不需要编译，所以编译型语言的程序执行效率高。可以脱离语言环境独立运行。 缺点：编译之后如果需要修改就需要整个模块重新编译。编译的时候根据对应的运行环境生成机器码，不同的操作系统之间移植就会有问题，需要根据运行的操作系统环境编译不同的可执行文件。 <strong>解释型</strong> 优点：有良好的平台兼容性，在任何环境中都可以运行，前提是安装了解释器（虚拟机）。灵活，修改代码的时候直接修改就可以，可以快速部署，不用停机维护。 缺点：每次运行的时候都要解释一遍，性能上不如编译型语言。     <strong>一、低级语言与高级语言</strong> 最初的计算机程序都是用0和1的序列表示的，程序员直接使用的是机器指令，无需翻译，从纸带打孔输入即可执行得到结果。后来为了方便记忆，就将用0、1序列表示的机器指令都用符号助记，这些与机器指令一一对应的助记符就成了汇编指令，从而诞生了汇编语言。无论是机器指令还是汇编指令都是面向机器的，统称为低级语言。因为是针对特定机器的机器指令的助记符，所以汇编语言是无法独立于机器(特定的CPU体系结构)的。但汇编语言也是要经过翻译成机器指令才能执行的，所以也有将运行在一种机器上的汇编语言翻译成运行在另一种机器上的机器指令的方法，那就是交叉汇编技术。 高级语言是从人类的逻辑思维角度出发的计算机语言，抽象程度大大提高，需要经过编译成特定机器上的目标代码才能执行，一条高级语言的语句往往需要若干条机器指令来完成。高级语言独立于机器的特性是靠编译器为不同机器生成不同的目标代码(或机器指令)来实现的。那具体的说，要将高级语言编译到什么程度呢，这又跟编译的技术有关了，既可以编译成直接可执行的目标代码，也可以编译成一种中间表示，然后拿到不同的机器和系统上去执行，这种情况通常又需要支撑环境，比如解释器或虚拟机的支持，Java程序编译成bytecode，再由不同平台上的虚拟机执行就是很好的例子。所以，说高级语言不依赖于机器，是指在不同的机器或平台上高级语言的程序本身不变，而通过编译器编译得到的目标代码去适应不同的机器。从这个意义上来说，通过交叉汇编，一些汇编程序也可以获得不同机器之间的可移植性，但这种途径获得的移植性远远不如高级语言来的方便和实用性大。 <strong>二、编译与解释</strong> 编译是将源程序翻译成可执行的目标代码，翻译与执行是分开的；而解释是对源程序的翻译与执行一次性完成，不生成可存储的目标代码。这只是表象，二者背后的最大区别是：对解释执行而言，程序运行时的控制权在解释器而不在用户程序；对编译执行而言，运行时的控制权在用户程序。 解释具有良好的动态特性和可移植性，比如在解释执行时可以动态改变变量的类型、对程序进行修改以及在程序中插入良好的调试诊断信息等，而将解释器移植到不同的系统上，则程序不用改动就可以在移植了解释器的系统上运行。同时解释器也有很大的缺点，比如执行效率低，占用空间大，因为不仅要给用户程序分配空间，解释器本身也占用了宝贵的系统资源。 编译器是把源程序的每一条语句都编译成机器语言,并保存成二进制文件,这样运行时计算机可以直接以机器语言来运行此程序,速度很快; 而解释器则是只在执行程序时,才一条一条的解释成机器语言给计算机来执行,所以运行速度是不如编译后的程序运行的快的.   <strong>编译型和解释型</strong> 我们先看看编译型，其实它和汇编语言是一样的：也是有一个负责翻译的程序来对我们的源代码进行转换，生成相对应的可执行代码。这个过程说得专业一点，就称为编译（Compile），而负责编译的程序自然就称为编译器（Compiler）。如果我们写的程序代码都包含在一个源文件中，那么通常编译之后就会直接生成一个可执行文件，我们就可以直接运行了。但对于一个比较复杂的项目，为了方便管理，我们通常把代码分散在各个源文件中，作为不同的模块来组织。这时编译各个文件时就会生成目标文件（Object   file）而不是前面说的可执行文件。一般一个源文件的编译都会对应一个目标文件。这些目标文件里的内容基本上已经是可执行代码了，但由于只是整个项目的一部分，所以我们还不能直接运行。待所有的源文件的编译都大功告成，我们就可以最后把这些半成品的目标文件“打包”成一个可执行文件了，这个工作由另一个程序负责完成，由于此过程好像是把包含可执行代码的目标文件连接装配起来，所以又称为链接（Link），而负责链接的程序就叫……就叫链接程序（Linker）。链接程序除了链接目标文件外，可能还有各种资源，像图标文件啊、声音文件啊什么的，还要负责去除目标文件之间的冗余重复代码，等等，所以……也是挺累的。链接完成之后，一般就可以得到我们想要的可执行文件了。 上面我们大概地介绍了编译型语言的特点，现在再看看解释型。噢，从字面上看，“编译”和“解释”的确都有“翻译”的意思，它们的区别则在于翻译的时机安排不大一样。打个比方：假如你打算阅读一本外文书，而你不知道这门外语，那么你可以找一名翻译，给他足够的时间让他从头到尾把整本书翻译好，然后把书的母语版交给你阅读；或者，你也立刻让这名翻译辅助你阅读，让他一句一句给你翻译，如果你想往回看某个章节，他也得重新给你翻译。 两种方式，前者就相当于我们刚才所说的编译型：一次把所有的代码转换成机器语言，然后写成可执行文件；而后者就相当于我们要说的解释型：在程序运行的前一刻，还只有源程序而没有可执行程序；而程序每执行到源程序的某一条指令，则会有一个称之为解释程序的外壳程序将源代码转换成二进制代码以供执行，总言之，就是不断地解释、执行、解释、执行……所以，解释型程序是离不开解释程序的。像早期的BASIC就是一门经典的解释型语言，要执行BASIC程序，就得进入BASIC环境，然后才能加载程序源文件、运行。解释型程序中，由于程序总是以源代码的形式出现，因此只要有相应的解释器，移植几乎不成问题。编译型程序虽然源代码也可以移植，但前提是必须针对不同的系统分别进行编译，对于复杂的工程来说，的确是一件不小的时间消耗，况且很可能一些细节的地方还是要修改源代码。而且，解释型程序省却了编译的步骤，修改调试也非常方便，编辑完毕之后即可立即运行，不必像编译型程序一样每次进行小小改动都要耐心等待漫长的Compiling…Linking…这样的编译链接过程。不过凡事有利有弊，由于解释型程序是将编译的过程放到执行过程中，这就决定了解释型程序注定要比编译型慢上一大截，像几百倍的速度差距也是不足为奇的。 编译型与解释型，两者各有利弊。前者由于程序执行速度快，同等条件下对系统要求较低，因此像开发操作系统、大型应用程序、数据库系统等时都采用它，像C/C++、Pascal/Object   Pascal（Delphi）、VB等基本都可视为编译语言，而一些网页脚本、服务器脚本及辅助开发接口这样的对速度要求不高、对不同系统平台间的兼容性有一定要求的程序则通常使用解释性语言，如Java、JavaScript、VBScript、Perl、Python等等。 但既然编译型与解释型各有优缺点又相互对立，所以一批新兴的语言都有把两者折衷起来的趋势，例如Java语言虽然比较接近解释型语言的特征，但在执行之前已经预先进行一次预编译，生成的代码是介于机器码和Java源代码之间的中介代码，运行的时候则由JVM（Java的虚拟机平台，可视为解释器）解释执行。它既保留了源代码的高抽象、可移植的特点，又已经完成了对源代码的大部分预编译工作，所以执行起来比“纯解释型”程序要快许多。而像VB6（或者以前版本）、C#这样的语言，虽然表面上看生成的是.exe可执行程序文件，但VB6编译之后实际生成的也是一种中介码，只不过编译器在前面安插了一段自动调用某个外部解释器的代码（该解释程序独立于用户编写的程序，存放于系统的某个DLL文件中，所有以VB6编译生成的可执行程序都要用到它），以解释执行实际的程序体。C#（以及其它.net的语言编译器）则是生成.net目标代码，实际执行时则由.net解释系统（就像JVM一样，也是一个虚拟机平台）进行执行。当然.net目标代码已经相当“低级”，比较接近机器语言了，所以仍将其视为编译语言，而且其可移植程度也没有Java号称的这么强大，Java号称是“一次编译，到处执行”，而.net则是“一次编码，到处编译”。呵呵，当然这些都是题外话了。总之，随着设计技术与硬件的不断发展，编译型与解释型两种方式的界限正在不断变得模糊。 <strong>动态语言和静态语言</strong> 通常我们所说的动态语言、静态语言是指动态类型语言和静态类型语言。 （1）动态类型语言：动态类型语言是指在运行期间才去做数据类型检查的语言，也就是说，在用动态类型的语言编程时，永远也不用给任何变量指定数据类型，该语言会在你第一次赋值给变量时，在内部将数据类型记录下来。Python和Ruby就是一种典型的动态类型语言，其他的各种脚本语言如VBScript也多少属于动态类型语言。 （2）静态类型语言：静态类型语言与动态类型语言刚好相反，它的数据类型是在编译其间检查的，也就是说在写程序时要声明所有变量的数据类型，C/C++是静态类型语言的典型代表，其他的静态类型语言还有C#、JAVA等。   <strong>强类型定义语言和弱类型定义语言</strong> （1）强类型定义语言：强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过强制转换，那么它就永远是这个数据类型了。举个例子：如果你定义了一个整型变量a,那么程序根本不可能将a当作字符串类型处理。强类型定义语言是类型安全的语言。 （2）弱类型定义语言：数据类型可以被忽略的语言。它与强类型定义语言相反, 一个变量可以赋不同数据类型的值。 强类型定义语言在速度上可能略逊色于弱类型定义语言，但是强类型定义语言带来的严谨性能够有效的避免许多错误。另外，“这门语言是不是动态语言”与“这门语言是否类型安全”之间是完全没有联系的！ 例如：Python是动态语言，是强类型定义语言（类型安全的语言）; VBScript是动态语言，是弱类型定义语言（类型不安全的语言）; JAVA是静态语言，是强类型定义语言（类型安全的语言）。   通过上面这些介绍，我们可以得出，<strong>python是一门动态解释性的强类型定义语言。</strong>那这些基因使成就了Python的哪些优缺点呢？我们继续往下看。</p><h3 id="Python的优缺点-1"><a href="#Python的优缺点-1" class="headerlink" title="Python的优缺点"></a><strong><strong>Python的优缺点</strong></strong></h3><p>先看优点</p><ol><li> Python的定位是“优雅”、“明确”、“简单”，所以Python程序看上去总是简单易懂，初学者学Python，不但入门容易，而且将来深入下去，可以编写那些非常非常复杂的程序。</li><li> 开发效率非常高，Python有非常强大的第三方库，基本上你想通过计算机实现任何功能，Python官方库里都有相应的模块进行支持，直接下载调用后，在基础库的基础上再进行开发，大大降低开发周期，避免重复造轮子。</li><li> 高级语言————当你用Python语言编写程序的时候，你无需考虑诸如如何管理你的程序使用的内存一类的底层细节</li><li> 可移植性————由于它的开源本质，Python已经被移植在许多平台上（经过改动使它能够工 作在不同平台上）。如果你小心地避免使用依赖于系统的特性，那么你的所有Python程序无需修改就几乎可以在市场上所有的系统平台上运行</li><li> 可扩展性————如果你需要你的一段关键代码运行得更快或者希望某些算法不公开，你可以把你的部分程序用C或C++编写，然后在你的Python程序中使用它们。</li><li> 可嵌入性————你可以把Python嵌入你的C/C++程序，从而向你的程序用户提供脚本功能。</li></ol><p>再看缺点：</p><ol><li> 速度慢，Python 的运行速度相比C语言确实慢很多，跟JAVA相比也要慢一些，因此这也是很多所谓的大牛不屑于使用Python的主要原因，但其实这里所指的运行速度慢在大多数情况下用户是无法直接感知到的，必须借助测试工具才能体现出来，比如你用C运一个程序花了0.01s,用Python是0.1s,这样C语言直接比Python快了10倍,算是非常夸张了，但是你是无法直接通过肉眼感知的，因为一个正常人所能感知的时间最小单位是0.15-0.4s左右，哈哈。其实在大多数情况下Python已经完全可以满足你对程序速度的要求，除非你要写对速度要求极高的搜索引擎等，这种情况下，当然还是建议你用C去实现的。</li><li> 代码不能加密，因为PYTHON是解释性语言，它的源码都是以名文形式存放的，不过我不认为这算是一个缺点，如果你的项目要求源代码必须是加密的，那你一开始就不应该用Python来去实现。</li><li> 线程不能利用多CPU问题，这是Python被人诟病最多的一个缺点，GIL即全局解释器锁（Global Interpreter Lock），是[计算机程序设计语言](<a href="http://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80&quot;">http://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80&quot;</a> \o “计算机程序设计语言)[解释器](<a href="http://zh.wikipedia.org/wiki/%E8%A7%A3%E9%87%8A%E5%99%A8&quot;">http://zh.wikipedia.org/wiki/%E8%A7%A3%E9%87%8A%E5%99%A8&quot;</a> \o “解释器)用于[同步](<a href="http://zh.wikipedia.org/wiki/%E5%90%8C%E6%AD%A5&quot;">http://zh.wikipedia.org/wiki/%E5%90%8C%E6%AD%A5&quot;</a> \o “同步)[线程](<a href="http://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B&quot;">http://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B&quot;</a> \o “线程)的工具，使得任何时刻仅有一个线程在执行，Python的线程是操作系统的原生线程。在Linux上为pthread，在Windows上为Win thread，完全由操作系统调度线程的执行。一个python解释器进程内有一条主线程，以及多条用户程序的执行线程。即使在多核CPU平台上，由于GIL的存在，所以禁止多线程的并行执行。关于这个问题的折衷解决方法，我们在以后线程和进程章节里再进行详细探讨。</li></ol><p>  当然，Python还有一些其它的小缺点，在这就不一一列举了，我想说的是，任何一门语言都不是完美的，都有擅长和不擅长做的事情，建议各位不要拿一个语言的劣势去跟另一个语言的优势来去比较，语言只是一个工具，是实现程序设计师思想的工具，就像我们之前中学学几何时，有的时候需要要圆规，有的时候需要用三角尺一样，拿相应的工具去做它最擅长的事才是正确的选择。之前很多人问我Shell和Python到底哪个好？我回答说Shell是个脚本语言，但Python不只是个脚本语言，能做的事情更多，然后又有钻牛角尖的人说完全没必要学Python, Python能做的事情Shell都可以做，只要你足够牛B,然后又举了用Shell可以写俄罗斯方块这样的游戏，对此我能说表达只能是，不要跟SB理论，SB会把你拉到跟他一样的高度，然后用充分的经验把你打倒。    </p><h3 id="Python解释器-1"><a href="#Python解释器-1" class="headerlink" title="Python解释器"></a><strong><strong>Python解释器</strong></strong></h3><p>当我们编写Python代码时，我们得到的是一个包含Python代码的以.py为扩展名的文本文件。要运行代码，就需要Python解释器去执行.py文件。 由于整个Python语言从规范到解释器都是开源的，所以理论上，只要水平够高，任何人都可以编写Python解释器来执行Python代码（当然难度很大）。事实上，确实存在多种Python解释器。</p><h4 id="CPython-1"><a href="#CPython-1" class="headerlink" title="CPython"></a><strong>CPython</strong></h4><p>当我们从<a href="https://www.python.org/">Python官方网站</a>下载并安装好Python 2.7后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行python就是启动CPython解释器。 CPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。</p><h4 id="IPython-1"><a href="#IPython-1" class="headerlink" title="IPython"></a><strong>IPython</strong></h4><p>IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。 CPython用&gt;&gt;&gt;作为提示符，而IPython用In [序号]:作为提示符。</p><h4 id="PyPy-1"><a href="#PyPy-1" class="headerlink" title="PyPy"></a><strong>PyPy</strong></h4><p>PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用<a href="http://en.wikipedia.org/wiki/Just-in-time_compilation">JIT技术</a>，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。 绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解<a href="http://pypy.readthedocs.org/en/latest/cpython_differences.html">PyPy和CPython的不同点</a>。</p><h4 id="Jython-1"><a href="#Jython-1" class="headerlink" title="Jython"></a><strong>Jython</strong></h4><p>Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。</p><h4 id="IronPython-1"><a href="#IronPython-1" class="headerlink" title="IronPython"></a><strong>IronPython</strong></h4><p>IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。</p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a><strong>小结</strong></h3><p>Python的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。 </p><h3 id="二、Python发展史-1"><a href="#二、Python发展史-1" class="headerlink" title="二、Python发展史"></a><strong>二、Python发展史</strong></h3><ul><li>  1989年，为了打发圣诞节假期，Guido开始写Python语言的编译器。Python这个名字，来自Guido所挚爱的电视剧Monty Python’s Flying Circus。他希望这个新的叫做Python的语言，能符合他的理想：创造一种C和shell之间，功能全面，易学易用，可拓展的语言。</li><li>  1991年，第一个Python编译器诞生。它是用C语言实现的，并能够调用C语言的库文件。从一出生，Python已经具有了：类，函数，异常处理，包含表和词典在内的核心数据类型，以及模块为基础的拓展系统。</li><li>  Granddaddy of Python web frameworks, Zope 1 was released in 1999</li><li>  Python 1.0 - January 1994 增加了 <a href="https://en.wikipedia.org/wiki/Lambda_calculus">lambda</a>, <a href="https://en.wikipedia.org/wiki/Map_(higher-order_function)">map</a>, <a href="https://en.wikipedia.org/wiki/Filter_(higher-order_function)">filter</a> and <a href="https://en.wikipedia.org/wiki/Fold_(higher-order_function)">reduce</a>.</li><li>  Python 2.0 - October 16, 2000，加入了内存回收机制，构成了现在Python语言框架的基础</li><li>  Python 2.4 - November 30, 2004, 同年目前最流行的WEB框架Django 诞生</li><li>  Python 2.5 - September 19, 2006</li><li>  Python 2.6 - October 1, 2008</li><li>  Python 2.7 - July 3, 2010</li><li>  In November 2014, it was announced that Python 2.7 would be supported until 2020, and reaffirmed that there would be no 2.8 release as users were expected to move to Python 3.4+ as soon as possible</li><li>  Python 3.0 - December 3, 2008</li><li>  Python 3.1 - June 27, 2009</li><li>  Python 3.2 - February 20, 2011</li><li>  Python 3.3 - September 29, 2012</li><li>  Python 3.4 - March 16, 2014</li><li>  Python 3.5 - September 13, 2015</li></ul><h3 id="三、Python-2-or-3-1"><a href="#三、Python-2-or-3-1" class="headerlink" title="三、Python 2 or 3?"></a><strong>三、Python 2 or 3?</strong></h3><p><strong>In summary : Python 2.x is legacy, Python 3.x is the present and future of the language</strong> Python 3.0 was released in 2008. The final 2.x version 2.7 release came out in mid-2010, with a statement of extended support for this end-of-life release. The 2.x branch will see no new major releases after that. 3.x is under active development and has already seen over five years of stable releases, including version 3.3 in 2012, 3.4 in 2014, and 3.5 in 2015. This means that all recent standard library improvements, for example, are only available by default in Python 3.x. Guido van Rossum (the original creator of the Python language) decided to clean up Python 2.x properly, with less regard for backwards compatibility than is the case for new releases in the 2.x range. The most drastic improvement is the better Unicode support (with all text strings being Unicode by default) as well as saner bytes/Unicode separation. Besides, several aspects of the core language (such as print and exec being statements, integers using floor division) have been adjusted to be easier for newcomers to learn and to be more consistent with the rest of the language, and old cruft has been removed (for example, all classes are now new-style, “range()” returns a memory efficient iterable, not a list as in 2.x).</p><h4 id="py2与3的详细区别-1"><a href="#py2与3的详细区别-1" class="headerlink" title="py2与3的详细区别"></a><strong>py2与3的详细区别</strong></h4><p><strong>PRINT IS A FUNCTION</strong> The statement has been replaced with a print() function, with keyword arguments to replace most of the special syntax of the old statement (PEP 3105). Examples: <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a> You can also customize the separator between items, e.g.:</p><p>1</p><p>print(“There are &lt;”, 2**32, “&gt; possibilities!”, sep=””)</p><p><strong>ALL IS UNICODE NOW</strong> <strong>从此不再为讨厌的字符编码而烦恼</strong>   <strong>还可以这样玩： (A,*REST,B)=RANGE(5)</strong></p><p>1 2 3 4</p><p><strong>&gt;&gt;&gt; a,*rest,b = range(5) &gt;&gt;&gt; a,rest,b (0, [1, 2, 3], 4) </strong></p><p>  <strong>某些库改名了</strong>  </p><p>Old Name</p><p>New Name</p><p>_winreg</p><p>winreg</p><p>ConfigParser</p><p>configparser</p><p>copy_reg</p><p>copyreg</p><p>Queue</p><p>queue</p><p>SocketServer</p><p>socketserver</p><p>markupbase</p><p>_markupbase</p><p>repr</p><p>reprlib</p><p>test.test_support</p><p>test.support</p><p>  <strong>还有谁不支持PYTHON3?</strong> One popular module that don’t yet support Python 3 is Twisted (for networking and other applications). Most actively maintained libraries have people working on 3.x support. For some libraries, it’s more of a priority than others: Twisted, for example, is mostly focused on production servers, where supporting older versions of Python is important, let alone supporting a new version that includes major changes to the language. (Twisted is a prime example of a major package where porting to 3.x is far from trivial  </p><h3 id="四、Python安装-1"><a href="#四、Python安装-1" class="headerlink" title="四、Python安装"></a><strong>四、Python安装</strong></h3><h4 id="windows-1"><a href="#windows-1" class="headerlink" title="windows"></a><strong><strong>windows</strong></strong></h4><p>1 2 3 4 5 6 7</p><p>1、下载安装包 <a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a> 2、安装 默认安装路径：C:\python27 3、配置环境变量 【右键计算机】–》【属性】–》【高级系统设置】–》【高级】–》【环境变量】–》【在第二个内容框中找到 变量名为Path 的一行，双击】 –&gt; 【Python安装目录追加到变值值中，用 ； 分割】 如：原来的值;C:\python27，切记前面有分号</p><p><strong>linux、Mac</strong></p><p>1 2 3</p><p>无需安装，原装Python环境   ps：如果自带2.6，请更新至2.7</p><p> </p><h3 id="五、Hello-World程序-1"><a href="#五、Hello-World程序-1" class="headerlink" title="五、Hello World程序"></a><strong>五、Hello World程序</strong></h3><p>在linux 下创建一个文件叫hello.py,并输入</p><p>1</p><p>print(“Hello World!”)</p><p>然后执行命令:python hello.py ,输出</p><p>1 2 3</p><p>localhost:~ jieli$ vim hello.py localhost:~ jieli$ python hello.py Hello World!</p><p><strong>指定解释器</strong> 上一步中执行 python hello.py 时，明确的指出 hello.py 脚本由 python 解释器来执行。 如果想要类似于执行shell脚本一样执行python脚本，例： ./hello.py ，那么就需要在 hello.py 文件的头部指定解释器，如下：</p><p>1 2 3</p><p>#!/usr/bin/env python   print “hello,world”</p><p>如此一来，执行： ./hello.py 即可。 ps：执行前需给予 hello.py 执行权限，chmod 755 hello.py **在交互器中执行　** 除了把程序写在文件里，还可以直接调用python自带的交互器运行代码，</p><p>1 2 3 4 5 6</p><p>localhost:~ jieli$ python Python 2.7.10 (default, Oct 23 2015, 18:05:06) [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin Type “help”, “copyright”, “credits” or “license” for more information. &gt;&gt;&gt; print(“Hello World!”) Hello World!</p><p>对比下其它语言的hello world <img src="https://opstand.gitee.io/media/uploads/2020/11/202011220203057.gif" alt="IMG_259">  C++ <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030547.gif" alt="IMG_260">  C <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030560.gif" alt="IMG_261">  JAVA <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030671.gif" alt="IMG_262">  PHP <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030650.gif" alt="IMG_263">  RUBY <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030650-1.gif" alt="IMG_264">  Go  </p><h3 id="六、变量-字符编码-1"><a href="#六、变量-字符编码-1" class="headerlink" title="六、变量\字符编码"></a><strong>六、变量\字符编码</strong></h3><p><strong>Variables</strong> are used to store information to be referenced and manipulated in a computer program. They also provide a way of labeling data with a descriptive name, so our programs can be understood more clearly by the reader and ourselves. It is helpful to think of variables as containers that hold information. Their sole purpose is to label and store data in memory. This data can then be used throughout your program. <strong>声明变量</strong></p><p>1 2 3</p><p>#_*_coding:utf-8_*_   name = “Alex Li”</p><p>上述代码声明了一个变量，变量名为： name，变量name的值为：”Alex Li” <strong>变量定义的规则：</strong></p><ul><li><ul><li>  变量名只能是 字母、数字或下划线的任意组合</li><li>  变量名的第一个字符不能是数字</li><li>  以下关键字不能声明为变量名 [‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</li></ul></li></ul><p><strong>变量的赋值</strong></p><p>1 2 3 4 5 6 7 8</p><p>name = “Alex Li”   name2 = name print(name,name2)   name = “Jack”   print(“What is the value of name2 now?”)</p><p> </p><h3 id="七、字符编码-1"><a href="#七、字符编码-1" class="headerlink" title="七、字符编码"></a><strong><strong>七、字符编码</strong></strong></h3><p>python解释器在加载 .py 文件中的代码时，会对内容进行编码（默认ascill） ASCII（American Standard Code for Information Interchange，美国标准信息交换代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言，其最多只能用 8 位来表示（一个字节），即：2**8 = 256-1，所以，ASCII码最多只能表示 255 个符号。   <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030728.gif" alt="IMG_265"> <strong>关于中文</strong> 为了处理汉字，程序员设计了用于简体中文的GB2312和用于繁体中文的big5。 GB2312(1980年)一共收录了7445个字符，包括6763个汉字和682个其它符号。汉字区的内码范围高字节从B0-F7，低字节从A1-FE，占用的码位是72*94=6768。其中有5个空位是D7FA-D7FE。 GB2312 支持的汉字太少。1995年的汉字扩展规范GBK1.0收录了21886个符号，它分为汉字区和图形符号区。汉字区包括21003个字符。2000年的 GB18030是取代GBK1.0的正式国家标准。该标准收录了27484个汉字，同时还收录了藏文、蒙文、维吾尔文等主要的少数民族文字。现在的PC平台必须支持GB18030，对嵌入式产品暂不作要求。所以手机、MP3一般只支持GB2312。 从ASCII、GB2312、GBK 到GB18030，这些编码方法是向下兼容的，即同一个字符在这些方案中总是有相同的编码，后面的标准支持更多的字符。在这些编码中，英文和中文可以统一地处理。区分中文编码的方法是高字节的最高位不为0。按照程序员的称呼，GB2312、GBK到GB18030都属于双字节字符集 (DBCS)。 有的中文Windows的缺省内码还是GBK，可以通过GB18030升级包升级到GB18030。不过GB18030相对GBK增加的字符，普通人是很难用到的，通常我们还是用GBK指代中文Windows内码。     <strong>显然ASCII码无法将世界上的各种文字和符号全部表示，所以，就需要新出一种可以代表所有字符和符号的编码，即：Unicode</strong> Unicode（统一码、万国码、单一码）是一种在计算机上使用的字符编码。Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，规定虽有的字符和符号最少由 16 位来表示（2个字节），即：2 **16 = 65536， 注：此处说的的是最少2个字节，可能更多 UTF-8，是对Unicode编码的压缩和优化，他不再使用最少使用2个字节，而是将所有的字符和符号进行分类：ascii码中的内容用1个字节保存、欧洲的字符用2个字节保存，东亚的字符用3个字节保存… 所以，python解释器在加载 .py 文件中的代码时，会对内容进行编码（默认ascill），如果是如下代码的话： 报错：ascii码无法表示中文</p><p>1 2 3</p><p>#!/usr/bin/env python   print “你好，世界”</p><p>改正：应该显示的告诉python解释器，用什么编码来执行源代码，即：</p><p>1 2 3 4</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   print “你好，世界”</p><h3 id="注释-1"><a href="#注释-1" class="headerlink" title="注释"></a><strong><strong>注释</strong></strong></h3><p>当行注视：# 被注释内容 多行注释：””” 被注释内容 “””      </p><h3 id="八、用户输入-1"><a href="#八、用户输入-1" class="headerlink" title="八、用户输入"></a><strong>八、用户输入</strong></h3><p>1 2 3 4 5 6 7</p><p>#!/usr/bin/env python #_*_coding:utf-8_*_     #name = raw_input(“What is your name?”) #only on python 2.x name = input(“What is your name?”) print(“Hello “ + name )</p><p>输入密码时，如果想要不可见，需要利用getpass 模块中的 getpass方法，即：</p><p>1 2 3 4 5 6 7 8 9 10</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   import getpass   # 将用户输入的内容赋值给 name 变量 pwd = getpass.getpass(“请输入密码：”)   # 打印输入的内容 print(pwd)</p><p> </p><h3 id="九、模块初识-1"><a href="#九、模块初识-1" class="headerlink" title="九、模块初识"></a><strong>九、模块初识</strong></h3><p>Python的强大之处在于他有非常丰富和强大的标准库和第三方库，几乎你想实现的任何功能都有相应的Python库支持，以后的课程中会深入讲解常用到的各种库，现在，我们先来象征性的学2个简单的。 <strong>sys</strong></p><p>1 2 3 4 5 6 7 8 9 10 11</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   import sys   print(sys.argv)     #输出 $ python test.py helo world [‘test.py’, ‘helo’, ‘world’]  #把执行脚本时传递的参数获取到了</p><p>  <strong>os</strong></p><p>1 2 3 4 5 6</p><p>#!/usr/bin/env python # -*- coding: utf-8 -*-   import os   os.system(“df -h”) #调用系统命令</p><p><strong>完全结合一下</strong> </p><p>1 2 3</p><p>import os,sys   os.system(‘’.join(sys.argv[1:])) #把用户的输入的参数当作一条命令交给os.system来执行</p><p><strong>自己写个模块</strong> python tab补全模块 <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030773.gif" alt="IMG_266">  for mac <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030848.gif" alt="IMG_267">  for Linux 写完保存后就可以使用了</p><p>1 2 3 4 5</p><p>localhost:~ jieli$ python Python 2.7.10 (default, Oct 23 2015, 18:05:06) [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin Type “help”, “copyright”, “credits” or “license” for more information. &gt;&gt;&gt; import tab</p><p>你会发现，上面自己写的tab.py模块只能在当前目录下导入，如果想在系统的何何一个地方都使用怎么办呢？ 此时你就要把这个tab.py放到python全局环境变量目录里啦，基本一般都放在一个叫 Python/2.7/site-packages 目录下，这个目录在不同的OS里放的位置不一样，用 print(sys.path) 可以查看python环境变量列表。  </p><h3 id="十、-pyc是个什么鬼？-1"><a href="#十、-pyc是个什么鬼？-1" class="headerlink" title="十、.pyc是个什么鬼？"></a><strong>十、.pyc是个什么鬼？</strong></h3><p><strong>1. Python是一门解释型语言？</strong> 我初学Python时，听到的关于Python的第一句话就是，Python是一门解释性语言，我就这样一直相信下去，直到发现了*.pyc文件的存在。如果是解释型语言，那么生成的*.pyc文件是什么呢？c应该是compiled的缩写才对啊！ 为了防止其他学习Python的人也被这句话误解，那么我们就在文中来澄清下这个问题，并且把一些基础概念给理清。  <strong>2. 解释型语言和编译型语言</strong> 计算机是不能够识别高级语言的，所以当我们运行一个高级语言程序的时候，就需要一个“翻译机”来从事把高级语言转变成计算机能读懂的机器语言的过程。这个过程分成两类，第一种是编译，第二种是解释。 编译型语言在程序执行之前，先会通过编译器对程序执行一个编译的过程，把程序转变成机器语言。运行时就不需要翻译，而直接执行就可以了。最典型的例子就是C语言。 解释型语言就没有这个编译的过程，而是在程序运行的时候，通过解释器对程序逐行作出解释，然后直接运行，最典型的例子是Ruby。 通过以上的例子，我们可以来总结一下解释型语言和编译型语言的优缺点，因为编译型语言在程序运行之前就已经对程序做出了“翻译”，所以在运行时就少掉了“翻译”的过程，所以效率比较高。但是我们也不能一概而论，一些解释型语言也可以通过解释器的优化来在对程序做出翻译时对整个程序做出优化，从而在效率上超过编译型语言。 此外，随着Java等基于虚拟机的语言的兴起，我们又不能把语言纯粹地分成解释型和编译型这两种。 用Java来举例，Java首先是通过编译器编译成字节码文件，然后在运行时通过解释器给解释成机器文件。所以我们说Java是一种先编译后解释的语言。   <strong>3. Python到底是什么</strong> 其实Python和Java/C#一样，也是一门基于虚拟机的语言，我们先来从表面上简单地了解一下Python程序的运行过程吧。 当我们在命令行中输入python hello.py时，其实是激活了Python的“解释器”，告诉“解释器”：你要开始工作了。可是在“解释”之前，其实执行的第一项工作和Java一样，是编译。 熟悉Java的同学可以想一下我们在命令行中如何执行一个Java的程序： javac hello.java java hello   只是我们在用Eclipse之类的IDE时，将这两部给融合成了一部而已。其实Python也一样，当我们执行python hello.py时，他也一样执行了这么一个过程，所以我们应该这样来描述Python，Python是一门先编译后解释的语言。 <strong>4. 简述Python的运行过程</strong> 在说这个问题之前，我们先来说两个概念，PyCodeObject和pyc文件。 我们在硬盘上看到的pyc自然不必多说，而其实PyCodeObject则是Python编译器真正编译成的结果。我们先简单知道就可以了，继续向下看。 当python程序运行时，编译的结果则是保存在位于内存中的PyCodeObject中，当Python程序运行结束时，Python解释器则将PyCodeObject写回到pyc文件中。 当python程序第二次运行时，首先程序会在硬盘中寻找pyc文件，如果找到，则直接载入，否则就重复上面的过程。 所以我们应该这样来定位PyCodeObject和pyc文件，我们说pyc文件其实是PyCodeObject的一种持久化保存方式。  </p><h3 id="十一、数据类型初识-1"><a href="#十一、数据类型初识-1" class="headerlink" title="十一、数据类型初识"></a><strong>十一、数据类型初识</strong></h3><p>1、数字 2 是一个整数的例子。 长整数 不过是大一些的整数。 3.23和52.3E-4是浮点数的例子。E标记表示10的幂。在这里，52.3E-4表示52.3 * 10-4。 (-5+4j)和(2.3-4.6j)是复数的例子，其中-5,4为实数，j为虚数，数学中表示复数是什么？。 int（整型） 在32位机器上，整数的位数为32位，取值范围为-2**31～2**31-1，即-2147483648～2147483647 在64位系统上，整数的位数为64位，取值范围为-2**63～2**63-1，即-9223372036854775808～9223372036854775807 long（长整型） 　　跟C语言不同，Python的长整数没有指定位宽，即：Python没有限制长整数数值的大小，但实际上由于机器内存有限，我们使用的长整数数值不可能无限大。 注意，自从Python2.2起，如果整数发生溢出，Python会自动将整数数据转换为长整数，所以如今在长整数数据后面不加字母L也不会导致严重后果了。 float（浮点型） 先扫盲 <a href="http://www.cnblogs.com/alex3714/articles/5895848.html">http://www.cnblogs.com/alex3714/articles/5895848.html</a>  　　浮点数用来处理实数，即带有小数的数字。类似于C语言中的double类型，占8个字节（64位），其中52位表示底，11位表示指数，剩下的一位表示符号。 complex（复数） 复数由实数部分和虚数部分组成，一般形式为x＋yj，其中的x是复数的实数部分，y是复数的虚数部分，这里的x和y都是实数。 注：Python中存在小数字池：-5 ～ 257   2、布尔值 真或假 1 或 0 3、字符串 “hello world” 万恶的字符串拼接： python中的字符串在C语言中体现为是一个字符数组，每次创建字符串时候需要在内存中开辟一块连续的空，并且一旦需要修改字符串的话，就需要再次开辟空间，万恶的+号每出现一次就会在内从中重新开辟一块空间。 <strong>字符串格式化输出</strong></p><p>1 2 3 4</p><p>name = “alex” print “i am %s “ % name   #输出: i am alex</p><p>PS: 字符串是 %s;整数 %d;浮点数%f 字符串常用功能：</p><ul><li>  移除空白</li><li>  分割</li><li>  长度</li><li>  索引</li><li>  切片</li></ul><p>4、列表 创建列表：</p><p>1 2 3</p><p>name_list = [‘alex’, ‘seven’, ‘eric’] 或 name_list ＝ list([‘alex’, ‘seven’, ‘eric’])</p><p>基本操作：</p><ul><li>  索引</li><li>  切片</li><li>  追加</li><li>  删除</li><li>  长度</li><li>  切片</li><li>  循环</li><li>  包含</li></ul><p>5、元组(不可变列表) 创建元组：</p><p>1 2 3</p><p>ages = (11, 22, 33, 44, 55) 或 ages = tuple((11, 22, 33, 44, 55))</p><p>  6、字典（无序） 创建字典：</p><p>1 2 3</p><p>person = {“name”: “mr.wu”, ‘age’: 18} 或 person = dict({“name”: “mr.wu”, ‘age’: 18})</p><p>常用操作：</p><ul><li>  索引</li><li>  新增</li><li>  删除</li><li>  键、值、键值对</li><li>  循环</li><li>  长度</li></ul><h3 id="十二、数据运算-1"><a href="#十二、数据运算-1" class="headerlink" title="十二、数据运算"></a><strong><strong>十二、数据运算</strong></strong></h3><p>算数运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030858.png" alt="IMG_268"> 比较运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030943.png" alt="IMG_269"> 赋值运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202030970.png" alt="IMG_270"> 逻辑运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031095.png" alt="IMG_271"> 成员运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031011.png" alt="IMG_272"> 身份运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/202011220203117.png" alt="IMG_273"> 位运算： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031251.png" alt="IMG_274"> <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a> *按位取反运算规则(按位取反再加1)   详解<a href="http://blog.csdn.net/wenxinwukui234/article/details/42119265">http://blog.csdn.net/wenxinwukui234/article/details/42119265</a>   运算符优先级： <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031232.png" alt="IMG_275"> 更多内容：[猛击这里](<a href="http://www.runoob.com/python/python-operators.html&quot;">http://www.runoob.com/python/python-operators.html&quot;</a> \t “<a href="https://www.cnblogs.com/alex3714/articles/_blank">https://www.cnblogs.com/alex3714/articles/_blank</a>)  </p><h3 id="十三、表达式if-…-else-1"><a href="#十三、表达式if-…-else-1" class="headerlink" title="十三、表达式if … else"></a><strong>十三、表达式if … else</strong></h3><p>场景一、用户登陆验证</p><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</p><p># 提示输入用户名和密码   # 验证用户名和密码 #     如果错误，则输出用户名或密码错误 #     如果成功，则输出 欢迎，XXX!     #!/usr/bin/env python # -*- coding: encoding -*-   import getpass     name = raw_input(‘请输入用户名：’) pwd = getpass.getpass(‘请输入密码：’)   if name == “alex” and pwd == “cmd”: print(“欢迎，alex！”) else: print(“用户名和密码错误”)</p><p>场景二、猜年龄游戏 在程序里设定好你的年龄，然后启动程序让用户猜测，用户输入后，根据他的输入提示用户输入的是否正确，如果错误，提示是猜大了还是小了 <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a>   外层变量，可以被内层代码使用 内层变量，不应被外层代码使用  </p><h3 id="十四、表达式for-loop-1"><a href="#十四、表达式for-loop-1" class="headerlink" title="十四、表达式for loop"></a><strong>十四、表达式for loop</strong></h3><p><strong>最简单的循环10次</strong></p><p>1 2 3 4 5 6</p><p>#_*_coding:utf-8_*_ __author__ = ‘Alex Li’     for i in range(10): print(“loop:”, i )</p><p>输出：</p><p>1 2 3 4 5 6 7 8 9 10</p><p>loop: 0 loop: 1 loop: 2 loop: 3 loop: 4 loop: 5 loop: 6 loop: 7 loop: 8 loop: 9</p><p><strong>需求一：还是上面的程序，但是遇到小于5的循环次数就不走了，直接跳入下一次循环</strong></p><p>1 2 3 4</p><p>for i in range(10): if i&lt;5: continue #不往下走了,直接进入下一次loop print(“loop:”, i )</p><p><strong>需求二：还是上面的程序，但是遇到大于5的循环次数就不走了，直接退出</strong></p><p>1 2 3 4</p><p>for i in range(10): if i&gt;5: break #不往下走了,直接跳出整个loop print(“loop:”, i )</p><p> </p><h3 id="十五、while-loop-1"><a href="#十五、while-loop-1" class="headerlink" title="十五、while loop"></a><strong>十五、while loop</strong></h3><p> <strong>有一种循环叫死循环，一经触发，就运行个天荒地老、海枯石烂。</strong> 海枯石烂代码</p><p>1 2 3 4 5</p><p>count = 0 while True: print(“你是风儿我是沙,缠缠绵绵到天涯…”,count) count +=1  </p><p>  其实除了时间，没有什么是永恒的，死loop还是少写为好 上面的代码循环100次就退出吧   <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a>     <strong>回到上面for 循环的例子，如何实现让用户不断的猜年龄，但只给最多3次机会，再猜不对就退出程序。</strong> <a href="https://www.cnblogs.com/alex3714/articles/5465198.html">+ View Code</a>    </p><h3 id="十六、作业-1"><a href="#十六、作业-1" class="headerlink" title="十六、作业"></a><strong>十六、作业</strong></h3><p>作业一：博客 作业二：编写登陆接口</p><ul><li>  输入用户名密码</li><li>  认证成功后显示欢迎信息</li><li>  输错三次后锁定</li></ul><p>  作业三：多级菜单</p><ul><li>  三级菜单</li><li>  可依次选择进入各子菜单</li><li>  所需新知识点：列表、字典</li></ul><p>                 </p><h3 id="入门知识拾遗-1"><a href="#入门知识拾遗-1" class="headerlink" title="入门知识拾遗"></a><strong>入门知识拾遗</strong></h3><p><strong>一、bytes类型</strong>   <strong>二、三元运算</strong></p><p>1</p><p>result = 值1 if 条件 else 值2</p><p>如果条件为真：result = 值1 如果条件为假：result = 值2 <strong>三、进制</strong></p><ul><li>  二进制，01</li><li>  八进制，01234567</li><li>  十进制，0123456789</li><li>  十六进制，0123456789ABCDEF  二进制到16进制转换<a href="http://jingyan.baidu.com/album/47a29f24292608c0142399cb.html?picindex=1">http://jingyan.baidu.com/album/47a29f24292608c0142399cb.html?picindex=1</a></li></ul><h4 id="计算机内存地址和为什么用16进制？-1"><a href="#计算机内存地址和为什么用16进制？-1" class="headerlink" title="计算机内存地址和为什么用16进制？"></a><strong>计算机内存地址和为什么用16进制？</strong></h4><p><strong>为什么用16进制</strong> 1、计算机硬件是0101二进制的，16进制刚好是2的倍数，更容易表达一个命令或者数据。十六进制更简短，因为换算的时候一位16进制数可以顶4位2进制数，也就是一个字节（8位进制可以用两个16进制表示） 2、最早规定ASCII字符集采用的就是8bit(后期扩展了,但是基础单位还是8bit)，8bit用2个16进制直接就能表达出来，不管阅读还是存储都比其他进制要方便 3、计算机中CPU运算也是遵照ASCII字符集，以16、32、64的这样的方式在发展，因此数据交换的时候16进制也显得更好 4、为了统一规范，CPU、内存、硬盘我们看到都是采用的16进制计算 <strong>16进制用在哪里</strong> 1、网络编程，数据交换的时候需要对字节进行解析都是一个byte一个byte的处理，1个byte可以用0xFF两个16进制来表达。通过网络抓包，可以看到数据是通过16进制传输的。 2、数据存储，存储到硬件中是0101的方式，存储到系统中的表达方式都是byte方式 3、一些常用值的定义，比如：我们经常用到的html中color表达，就是用的16进制方式，4个16进制位可以表达好几百万的颜色信息。</p><h3 id="四、-一切皆对象-1"><a href="#四、-一切皆对象-1" class="headerlink" title="四、 一切皆对象"></a><strong>四、 一切皆对象</strong></h3><p><strong>对于Python，一切事物都是对象，对象基于类创建</strong> <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031353.jpeg" alt="IMG_276"> 所以，以下这些值都是对象： “wupeiqi”、38、[‘北京’, ‘上海’, ‘深圳’]，并且是根据不同的类生成的对象。 <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031463.png" alt="IMG_277"> <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031597.png" alt="IMG_278"> <img src="https://opstand.gitee.io/media/uploads/2020/11/2020112202031686.png" alt="IMG_279"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 吉多 </tag>
            
            <tag> 表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7与centos6区别</title>
      <link href="/2020/05/31/centos7-yu-centos6-qu-bie/"/>
      <url>/2020/05/31/centos7-yu-centos6-qu-bie/</url>
      
        <content type="html"><![CDATA[<h1 id="centos7与centos6区别"><a href="#centos7与centos6区别" class="headerlink" title="centos7与centos6区别"></a><a href="https://www.cnblogs.com/bethal/p/5945026.html">centos7与centos6区别</a></h1><p>CentOS 7 vs CentOS 6的不同 </p><p><strong>(1)桌面系统</strong> </p><p>[CentOS6] GNOME 2.x </p><p>[CentOS7] GNOME 3.x（GNOME Shell）</p><p><strong>(2)文件系统</strong> </p><p>[CentOS6] ext4 </p><p>[CentOS7] xfs</p><p><strong>(3)内核版本</strong> </p><p>[CentOS6] 2.6.x-x </p><p>[CentOS7] 3.10.x-x</p><p><strong>(4)启动加载器</strong> </p><p>[CentOS6] GRUB Legacy (+efibootmgr)</p><p> [CentOS7] GRUB2</p><p><strong>(5)防火墙</strong> </p><p>[CentOS6] iptables </p><p>[CentOS7] firewalld</p><p><strong>(6)默认数据库</strong> [CentOS6] MySQL </p><p>[CentOS7] MariaDB</p><p><strong>(7)文件结构</strong> </p><p>[CentOS6] /bin, /sbin, /lib, and /lib64在/下 </p><p>[CentOS7] /bin, /sbin, /lib, and /lib64移到/usr下</p><p><strong>(8)主机名</strong> </p><p>[CentOS6] /etc/sysconfig/network </p><p>[CentOS7] /etc/hostname</p><p><strong>(9)时间同步</strong> </p><p>[CentOS6] $ ntp $ ntpq -p</p><p>[CentOS7] $ chrony $ chronyc sources</p><p><strong>(10)修改时间</strong> </p><p>[CentOS6] $ vim /etc/sysconfig/clock ZONE=”Asia/Tokyo” UTC=fales $ sudo ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime</p><p>[CentOS7] $ timedatectl set-timezone Asia/Tokyo $ timedatectl status</p><p><strong>(11)修改地区</strong> </p><p>[CentOS6] $ vim /etc/sysconfig/i18n LANG=”ja_JP.utf8″ $ /etc/sysconfig/i18n $ locale</p><p>[CentOS7] $ localectl set-locale LANG=ja_JP.utf8 $ localectl status</p><p><strong>(12)服务相关</strong></p><p>1）启动停止 </p><p>[CentOS6] $ service service_name start $ service service_name stop $ service sshd restart/status/reload</p><p>[CentOS7] $ systemctl start service_name $ systemctl stop service_name $ systemctl restart/status/reload sshd</p><p>自启动 </p><p>[CentOS6] $ chkconfig service_name on/off</p><p>[CentOS7] $ systemctl enable service_name $ systemctl disable service_name</p><p>服务一览 </p><p>[CentOS6] $ chkconfig –list</p><p>[CentOS7] $ systemctl list-unit-files $ systemctl –type service</p><p>强制停止 </p><p>[CentOS6] $ kill -9 <PID></PID></p><p>[CentOS7] $ systemctl kill –signal=9 sshd</p><p><strong>(13)网络</strong></p><p>1）网络信息 </p><p>[CentOS6] $ netstat $ netstat -I $ netstat -n</p><p>[CentOS7] $ ip n $ ip -s l $ ss</p><p>2）IP地址MAC地址 </p><p>[CentOS6] $ ifconfig -a</p><p>[CentOS7] $ ip address show</p><p>3）路由 </p><p>[CentOS6] $ route -n $ route -A inet6 -n</p><p>[CentOS7] $ ip route show $ ip -6 route show</p><p><strong>(14)重启关闭</strong></p><p>1）关闭 </p><p>[CentOS6] $ shutdown -h now</p><p>[CentOS7] $ poweroff $ systemctl poweroff</p><p>2）重启 </p><p>[CentOS6] $ reboot $ shutdown -r now</p><p>[CentOS7] $ reboot $ systemctl reboot</p><p>3）单用户模式 [CentOS6] $ init S</p><p>[CentOS7] $ systemctl rescue</p><p>4）启动模式 </p><p>[CentOS6] [GUICUI] $ vim /etc/inittab id:3:initdefault: </p><p>[CUIGUI] $ startx</p><p>[CentOS7] [GUICUI] $ systemctl isolate multi-user.target </p><p>[CUIGUI] $systemctl isolate graphical.target </p><p>默认 $ systemctl set-default graphical.target $ systemctl set-default multi-user.target </p><p>当前 $ systemctl get-default</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> gnome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP文件传输服务器构建</title>
      <link href="/2020/05/31/ftp-wen-jian-chuan-shu-fu-wu-qi-gou-jian/"/>
      <url>/2020/05/31/ftp-wen-jian-chuan-shu-fu-wu-qi-gou-jian/</url>
      
        <content type="html"><![CDATA[<p>ftp文件传输</p><p>用途：将我们电脑上的数据与服务器数据进行交换。</p><p>要求: 熟悉ftp服务的工作原理</p><p>学会构建匿名ftp服务器</p><p>学会构建用户验证的ftp服务器</p><p>结构：</p><table><thead><tr><th></th><th></th><th>ftp服务概述</th></tr></thead><tbody><tr><td>vsftpd服务基础</td><td></td><td></td></tr><tr><td></td><td>vsftpd的配置文件</td><td></td></tr><tr><td>匿名访问的ftp服务</td><td></td><td></td></tr><tr><td>ftp文件传输服务</td><td>基于系统用户的ftp服务</td><td>用户验证的ftp服务</td></tr><tr><td></td><td></td><td>vsftpd服务的其他常用配置</td></tr><tr><td>建立虚拟用户的帐号数据库</td><td></td><td></td></tr><tr><td>基于虚拟用户的ftp服务</td><td></td><td></td></tr><tr><td></td><td>为vsftpd添加虚拟用户支持</td><td></td></tr></tbody></table><p>ftp服务概述</p><p>ftp连接及传输模式</p><p>控制连接：tcp 21，用于发送ftp命令信息 ……也叫服务端连接</p><p>数据连接：tcp 20，用于上传，下载数据 ……也叫客户端连接</p><p>数据连接的建立类型：</p><p>主动模式：服务端主动向客户端发起连接</p><p>被动模式：服务端指定某个端口被动等待客户端连接</p><p>注：主动模式下客户端未关闭firewall则接收不到服务器20端口的发送请求。此模式应用于未运行firewall的客户端。另客户端关闭firewall如果网络环境的firewall未关闭也将屏蔽20端口的连接请求。</p><p>ftp传输模式：</p><p>文本模式：ascii模式，以文本序列传输数据</p><p>二进制模式：binaty模式，以二进制序列传输数据</p><p>ftp用户的类型：</p><p>匿名用户：anonymous或ftp</p><p>本地用户：账号密码保存在passwd和shadow文件中</p><p>虚拟用户：使用独立的帐号和密码数据文件</p><p>常见的ftp服务器程序</p><p>iis (windows) serv-u (third windows ) wu-ftpd proftpd</p><p>vsftpd (very secure ftp daemon)</p><p>常见的ftp 客户端程序</p><p>ftp命令行</p><p>cuteftp flashfxp leapftp filezilla</p><p>gftp kuftp</p><p>vsftpd服务基础</p><p>vsftpd软件包</p><p>官方站点：<a href="http://vsftpd.beasts.org/">http://vsftpd.beasts.org/</a></p><p>主程序：/usr/sbin/vsftpd</p><p>服务名：vsftpd</p><p>用户控制列表文件</p><p>/etc/vsftpd/ftpusers ……黑名单</p><p>/etc/vsftpd/user_list ……可黑可白，取决于主配置文件</p><p>主配置文件：</p><p>/etc/vsftpd/vsftpd.conf</p><p>主配置文件vsftpd.conf</p><p>常用的全局配置项：</p><p>listen=yes:是否以独立运行的方式监听服务</p><p>listen_address=192.168.1.20:设置监听的ip地址</p><p>注：多网卡服务器ftp针对不同ip地址</p><p>listen_pror=21:设置监听ftp服务的端口号</p><p>注：面向外网，不要改；面向内网，且不对外，最好还是改换。</p><p>write_enable=yes:是否启用写入权限(上传)</p><p>download_enable=yes:是否允许下载文件</p><p>userlist_enable=yes:是否启用user_list列表文件</p><p>userlist_deny=yes:是否禁用user_list列表中的用户</p><p>注：userlist_deny=no,不禁用，但仅允许这些</p><p>max_clients=0:限制并发客户端连接数</p><p>注：0为不限制，个体服务器能承载的并发连接数有上限，无论面向内外网，最好设置承载个数，以防ddos攻击。</p><p>max_pre_ip=0:限制同一ip地址的并发连接数</p><p>常用匿名ftp配置项</p><p>anonymous_enable=yes:启用匿名访问</p><p>anon_umask=022:匿名用户所上传文件的权限掩码</p><p>注：各项用7去减，得755，即上传文件权限</p><p>anon_root=/var/ftp:匿名用户的根目录</p><p>anon_upload_enable=yes:允许上传文件</p><p>anon_mkdir_write_enable=yes:允许创建目录</p><p>注:只能创建,不能删除和重命名</p><p>anon_other_write_enable=yes:开放其它写入权限</p><p>注:可以删除和重命名</p><p>anon_max_rate=0:限制最大传输速率(字节/秒)</p><p>注：计算机中的位：二进制中，每个0或1就是一个位(bit)，它是数据存储的最小单位，其中每8个位等于一个字节(byte)</p><p>故1byte=8bit即1mb=1024kb=1024<em>1024b=1024</em>1024*8b</p><p>常用的本地用户ftp配置项</p><p>local_enable=yes:是否启用本地系统用户</p><p>local_umask=022:本地用户所上传文件的权限掩码</p><p>local_root=/var/ftp:设置本地用户的ftp根目录</p><p>chroot_local_user=yes:是否将用户禁锢在主目录</p><p>注：启用local一定要禁锢，否则如果用户权限够大，系统将面临风险。</p><p>local_max_rate=0:限制最大传输速率(字节/秒)</p><p>构建匿名用户访问的ftp服务</p><p>思路：先准备匿名ftp访问的目录，并开放权限，然后编辑匿名用户配置，再启动服务</p><p>⑴挂载光盘，安装服务端软件</p><p>mount /dev/cdrom /media</p><p>rpm -ivh /media/packages/vsftpd-\t</p><p>⑵准备匿名ftp访问目录，并开放权限</p><p>chown ftp /var/ftp/pub</p><p>ls -ld /var/ftp/pub</p><p>⑶编辑ftp配置文件</p><p>anonymous_enable=yes</p><p>local_enable=no</p><p>write_enable=yes</p><p>anon_umask=022</p><p>anon_upload_enable=yes</p><p>anon_mkdir_write_enable=yes</p><p>anon_other_write_enable=yes开放其他写入权</p><p>dirmessage_enable=yes</p><p>⑷启动服务</p><p>service vsftpd start</p><p>⑸命令行进行验证</p><p>rpm -ivh /media/packages/ftp-\t</p><p>ftp：// 192.168.1.86</p><p>构建本地访问</p><p>思路：启动vsftpd.conf配置文件中本地用户，并进行相关配置，然后重新加载配置；编辑user_list，添加用户，再重新加载。</p><p>⑴安装ftp服务端软件，编辑配置文件</p><p>local_enable=yes</p><p>write_enable=yes</p><p>local_umask=077</p><p>chroot_local_user=yes</p><p>⑵重新加载服务配置文件</p><p>service vsftpd reload</p><p>⑶启用user_list列表并向user_list添加用户</p><p>vi /etc/vsftpd/vsftpd.conf</p><p>userlist_enable=yes</p><p>userlist_deny=no</p><p>cat an &gt;&gt;/etc/vsftpd/user_list</p><p>⑷重新加载服务配置文件</p><p>service vsftpd reload</p><p>⑸windows客户端访问</p><p><a href="ftp://192.168.1.86/">ftp://192.168.1.86</a></p><p>构建基于虚拟用户的ftp服务</p><p>创建帐号数据</p><p>1 建立虚拟ftp用户的帐号数据 库文件</p><p>2 创建ftp根目录及虚拟用户映射的系统用户</p><p>3 建立支持虚拟用户的pam认证文件</p><p>添加虚拟用户支持</p><p>1在vsftpd.conf文件中添加支持配置</p><p>2为个别虚拟用户建立独立的配置文件</p><p>启动服务并测试</p><p>1重新加载vsftpd配置</p><p>2使用虚拟ftp帐户访问测试</p><p>⑴建立虚拟ftp用户的帐号数据库文件</p><p>vi /etc/vsftpd/vuser.list</p><p>mike</p><p>123</p><p>tom</p><p>456</p><p>jim</p><p>789</p><p>cd /etc/vsftpd/</p><p>db_load -t -t hash -f vuser.list vuser.db</p><p>注:db_load -t 允许应用程序能够将文本文件转译入数据库，由于我们之后是将虚拟用户的信息以文本方式存储在文件中，为了让vsftpd这个应用程序能够通过文本来载入用户数据，必须使用此选项。</p><p>如果指定了t就必须追加-t，用来指定转译时的加密算法，有btree,hash,queue,recon</p><p>-f指向包含用户名和密码的文本文件，奇名偶密，后跟要转换成的文件名。</p><p>file vuser.db</p><p>注：file命令用来查看文件的格式</p><p>chmod 600 /etc/vsftpd/vuser.*</p><p>注：可能是600，否则认证会出错</p><p>ls /etc/vsftpd/vuser.*</p><p>⑵创建帐号数据</p><p>创建ftp根目录及虚拟用户映射的系统用户</p><p>useradd -d /var/ftproot -s /sbin/nologin virtual</p><p>chmod 755 /var/ftproot</p><p>⑶建立支持虚拟用户的pam认证文件</p><p>vi /etc/pam.d/vsftpd.vu</p><p>#%pam-1.0</p><p>auth required pam_userdb.so db=/etc/vsftpd/vuser</p><p>account required pam_userdb.so db=/etc/vsftpd/vuser</p><p>注：pam为linux的认证模块</p><p>⑷在vsftpd.conf文件中添加支持配置</p><p>vi /etc/vsftpd/vsftpd.conf</p><p>local_enable=yes</p><p>write_enable=yes</p><p>anon_umask=022</p><p>guest_enable=yes 启用用户映射功能</p><p>guest_username=virtual 指定映射的系统用户名称</p><p>pam_service_name=vsftpd.vu 指定新的pam认证文件</p><p>⑸为不同的虚拟用户建立独立的配置文件</p><p>在vsftpd.conf文件中添加用户配置目录支持</p><p>user_config_dir=/etc/vsftpd/vuser_dir</p><p>为用户mike,john建立独立的配置目录及文件</p><p>注：配置文件名与用户名相同</p><p>mkdir /etc/vsftpd/vuser_dir/</p><p>cd /etc/vsftpd/vuser_dir/</p><p>vi john</p><p>anon_upload_enable=yes</p><p>anon_mkdir_enable=yes</p><p>touch mike</p><p>注:配置文件名与用户名相同</p><p>⑹重新加载vsftpd配置</p><p>service vsftpd reload</p><p>⑺使用虚拟ftp帐户访问测试</p><p>mike用户可以登录浏览下载但无法上传</p><p>john用户可以登录浏览下载也可以上传</p><p>匿名用户或其他系统用户将不能登录</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ftp </tag>
            
            <tag> 服务 </tag>
            
            <tag> 连接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维自动化流程</title>
      <link href="/2020/05/31/yun-wei-zi-dong-hua-liu-cheng/"/>
      <url>/2020/05/31/yun-wei-zi-dong-hua-liu-cheng/</url>
      
        <content type="html"><![CDATA[<p>运维学习和发展的一个线路：</p><ol><li> 搭建服务 （部署并运行起来）</li><li> 用好服务 （监控、管理、优化）</li><li> 自动化 （服务直接的关联和协同工作）</li><li> 产品设计 （设计一个监控系统）</li></ol><p>云计算的核心竞争力是运维 运维架构： 网络、数据库、系统、云计算、自动化、开发python、运维管理、服务管理、项目管理、测试、业务 专注于某一领域 机房运维 （负责设备上下架、巡检、报修、硬件监控） 监控运维 （7X24运维值班、故障处理） 基础设施运维 （系统安装、网络维护） 基础服务运维（包含运维开发） （内部DNS、负载均衡、系统监控、资产管理、运维平台） 应用运维 （项目上线、业务部署、版本管理、灰度发布） 系统运维 (架构层面的分布式缓存、分布式文件系统、环境规划（测试、开发、生产）、架构设计、性能优化) 安全运维 （整体的安全方案、规范、漏洞监测、安全防护） <strong>运维标准化</strong> 标准化是一切运维自动化的基础，无标准、不自动。所以自动化运维的前提条件是做好运维标准化工作。以下是自己总结的一些内容： 1、云端系统镜像（模板镜像命名规则）镜像一定要是干净的，如果不干净很有可能引起生产事故，包含各种服务客户端（如zabbix-agent、salt-minion） 2、系统优化标准参数、自动化一键优化脚本 3、操作系统命名规则site qa pre prd 4、软件安装版本标准化 5、软件安装目录标准化 6、应用系统名称命名规则、应用系统数据库命名规则 7、监控模板标准化、特殊监控特殊对待 8、综合管理机器 前期规划性能争取比较好，因为后期可能有很大性能需求 9、日志备份机器，磁盘以及性能尽量可能较高 10、ip地址管理（可以写脚本生产一个动态更新表） 11、自动化工具salt、ansible、Jenkins 12、监控标准化（基础cpu、内存、磁盘、网络流量、系统连接数、业务指标监控） 13、资源统计表标准化模板（云端ecs、slb、redis、rds…、专人负责统计、该员工负责资源开通、升配、降配） 14、运维各类实施文档（各种中间件部署、升级、问题解决） 15、安全审计-堡垒机或安全审计日志（密码+私钥访问） 16、权限标准化管理（专人负责） 17、自动化脚本编写 避免重复性工作，如创建用户 18、安全防护，云端ddos、waf，应用端如nignx有防sql注入、防爬虫等安全配置 19、端口统一规划表，需要统一管理 20、新开通资源第一时间增加监控、日志收集 22、运维制度或标准最小单元化，标准化最小单元化 其他：对于公司运维人员，一定要存在备份人员，杜绝某些系统只有某一位运维同学熟悉。这样容易导致人员离职，系统交接不到位，系统维护困难以及踩坑 一、物理设备层面： 1.服务器标签化、设备负责人、设备采购详情、设备摆放标准 2.网络划分、远程控制卡、网卡端口 3.服务器机型、硬盘、内存统一；根据业务分类 4.资产命名规范、编号规范、类型规范 5.监控标准 二、操作系统层面： 1.操作系统版本 2.系统初始化（DNS、NTP、内核参数调优、rsyslog、主机名规范） 3.基础Agent配备（Zabbix Agent、Logstash Agent、Saltstack minion） 4.系统监控标准（CPU、内存、硬盘、网络、进程） 三、应用服务层面： 1.Web服务器选型（Apache、Nginx） 2.进程启动用户、端口监听规范、日志收集规范（访问日志、错误日志、运行日志） 3.配置管理（配置文件规范、脚本规范） 4.架构规范（Nginx+Keepalived、LVS+Keepalived等等） 5.部署规范（位置、包命名等） 四、运维操作层面： 1.机房巡检流程（周期、内容、报修流程） 2.业务部署流程（先测试、后生产、回滚） 3.故障处理流程（紧急处理、故障升级、重大故障管理） 4.工作日志标准（如何编写工作日志） 5.业务上线流程（1.项目发起 2.系统安装 3.部署Nginx 4.解析域名 5.测试 6.加监控 7.备份） 6.业务下线流程（谁发起，数据如何处理） 7.运维安全规范（密码复杂度、更改周期、×××使用规范、服务登录规范） 五、总结： 标准化 （规范化 流程化 文档化） 目标：文档化 工具化：</p><ol><li> SHELL脚本 （备份、部署、功能性（流程）脚本、检查性、报表性）</li><li> 开源工具：ZABBIX，ELK，saltstack,cobbler</li></ol><p>目标： 1、促进标准化的实施 2、将重复的操作简单化 3、将多次操作流程化 4、减少人为操作的低效和造成的故障 痛点：</p><ol><li> 你至少要SSH到服务器执行。可能犯错</li><li> 多个脚本有执行顺序的时候，可能犯错。</li><li> 权限不好管理，日志没法统计。</li><li> 无法避免手工操作。</li></ol><p>Web化 运维操作平台 例子：JOB管理平台</p><ol><li> 做成web界面</li><li> 权限控制</li><li> 日志记录</li><li> 弱化流程</li><li> 不用SSH到服务器，减少人为操作造成的故障</li></ol><p>DNS web管理 bind-DLZ 负载均衡web管理 JOB管理平台 监控web管理 ZABBIX 操作系统安装web管理 服务化（API化） DNS web管理 bind-DLZ dns-api 负载均衡web管理 slb-api JOB管理平台 job-api 监控web管理 ZABBIX zabbix-api 操作系统安装web管理 cobbler-api 部署平台 deploy-api 配置管理平台 saltstack-api 自动化测试平台 test-api</p><ol><li> 调用cobbler-api安装操作系统</li><li> 调用saltstack-api进行系统初始化</li><li> 调用zabbix-api 将该新上线机器加上监控</li><li> 再次调用saltstack-api 部署软件</li><li> 调用deploy-api 将当前版本的代码部署到服务器上</li><li> 调用test-api 测试当前服务运行是否正常</li><li> 调用slb-api 将该节点加入集群</li></ol><p>智能化 智能化的自动化扩容、缩容、服务降级、故障自愈 触发机制–》决策系统–》 触发：</p><ol><li> 当某个集群的访问量超过最大支撑量，比如10000</li><li> 并持续5分钟</li><li> 不是攻击</li><li> 资源池有可用资源</li></ol><p>4.1 当前网络带宽使用率 4.2 如果 是公有云–钱够不够</p><ol><li> 当前后端服务支持量是否超过阈值 如果超过应该后端 先扩容</li><li> 数据是否可以支持当前并发</li><li> 当前 自动化扩容队列，是否有正在扩容的节点</li><li> 其它业务相关的</li></ol><p>基于ITIL的IT运维管理体系 服务是向客户提供价值的一种手段，使客户不用承担特定的成本和风险就可以获得所期望的结果 先有ITSM，后有ITIL ITIL是ITSM的最佳实践 成为一名运维经理：ITIL PMP</p>]]></content>
      
      
      <categories>
          
          <category> 自动化运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 架构 </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix上使用外部检查的方式监测公网tcp/udp端口开放情况</title>
      <link href="/2020/04/13/zabbix-shang-shi-yong-wai-bu-jian-cha-de-fang-shi-jian-ce/"/>
      <url>/2020/04/13/zabbix-shang-shi-yong-wai-bu-jian-cha-de-fang-shi-jian-ce/</url>
      
        <content type="html"><![CDATA[<p>1、使用nmap程序可以监测公网tcp/udp开放情况，比较准确 </p><p>2、zabbix服务器支持使用外部检查的方式定义监控项，需要自己编写脚本 </p><p>3、脚本的思路使用nmap监测公网指定tcp/udp端口，使用grep统计是否有“open”的字段，有则返回1，无则返回0 </p><p>4、nmap需要root权限才能使用，zabbix服务端则是以zabbix用户身份运行，会提示权限不够，需要使用visudo程序让zabbix用户能够运行nmap程序 </p><p>5、通过脚本生成监控项返回值1或0，生成图形</p><h1 id="1、思路"><a href="#1、思路" class="headerlink" title="1、思路"></a>1、思路</h1><p>公司需要在本地zabbix服务器上监控公网地址tcp18000的端口映射情况，需要配置合适的监控项和出发器，同时生成图形。为了满足这些条件，准备按照以下思路进行： </p><p>1、目前监测tcp/udp端口状态的程序只有nmap比较好 </p><p>2、无法使用zabbix-agent的方式，因为没有合适内网机器运行zabbix-agent，同时nat会影响直接使用zabbix-agent监控端口，决定使用外部检查的方式运行自定义脚本 </p><p>3、外部检查需要编写脚本，方法是用nmap监测公网tcp/udp端口，监测到open就返回值1，没有就返回值0 </p><p>4、配置合适的监控项、触发器和图形，完成监控</p><h1 id="2、外部检查的方式说明"><a href="#2、外部检查的方式说明" class="headerlink" title="2、外部检查的方式说明"></a>2、外部检查的方式说明</h1><p>外部检查是由Zabbix服务器通过运行shell脚本或二进制执行的检查。</p><p>外部检查不需要在被监控的主机上运行任何代理。 监控项Key的语法是：</p><p>script[<parameter1>,<parameter2>,…]</parameter2></parameter1></p><p>当:</p><p>参数 定义 script shell脚本或二进制文件的名称。 parameter(s) 可选的命令行参数。 如果你不想将任何参数传递给脚本，可以使用：</p><p>script[] 或者 script Zabbix服务器将查找定义为外部脚本的位置的目录（Zabbix服务器配置文件中的参数“ExternalScripts”），然后执行该命令。 该命令将以Zabbix用户执行，因此，任何访问权限或环境变量都应在包装器脚本中处理，并且该命令的权限应允许该用户执行它。只有指定目录中的命令才可执行。</p><p>简单来说，就是zabbix可以使用一段自定义的脚本作为监控项，这段脚本必须放置在/usr/lib/zabbix/externalscripts/下，脚本一般会以zabbix的用户身份运行。</p><h1 id="3、nmap说明"><a href="#3、nmap说明" class="headerlink" title="3、nmap说明"></a>3、nmap说明</h1><p>本次使用的nmap命令如下</p><p>nmap -sT x.x.x.x -p 18000 -Pn</p><p>关于nmap，网上有很多教程，本文不再说明</p><p>关于nmap监测状态说明： Open：端口处于开放状态，例如：当nmap使用TCP SYN对目标主机某一范围的端口进行扫描时，我们知道 TCP SYN报文是TCP建立连接的第一步，所以，如果目标主机返回SYN+ACK的报文，我们就认为此端口开放了并且使用了TCP服务。</p><p>Closed：端口处于关闭状态。例如：TCP SYN类型的扫描，如果返回RST类型的报文，则端口处于管理状态。这里我们值得注意的是关闭的端口也是可访问的，只是没有上层的服务在监听这个端口，而且，只是在我们扫描的这个时刻为关闭，当我们在另一个时间段进行扫描的时候，这些关闭的端口可能会处于open的状态。</p><p>Filtered（过滤的）：由于报文无法到达指定的端口，nmap不能够决定端口的开放状态，这主要是由于网络或者主机安装了一些防火墙所导致的。当nmap收到icmp报文主机不可达报文（例如：type为3，code为13（communication administratively prohibit）报文）或者目标主机无应答，常常会将目标主机的状态设置为filtered。</p><p>Unfiltered（未被过滤的），当nmap不能确定端口是否开放的时候所打上的状态，这种状态和filtered的区别在于：unfiltered的端口能被nmap访问，但是nmap根据返回的报文无法确定端口的开放状态，而filtered的端口直接就没就没能够被nmap访问。端口被定义为Unfilterd只会发生在TCP ack扫描类型时当返回RST的报文。而端口被定义为filtered 状态的原因是是报文被防火墙设备，路由器规则，或者防火墙软件拦截，无法送达到端口，这通常表现为发送NMAP的主机收到ICMP报错报文，如：TYPE为3，code为13的报文（通信被认为的禁止 communication administratively prohibited），或者主机通过多次重复发送没有收到任何回应）。</p><p>Open|filtered状态，这种状态主要是nmap无法区别端口处于open状态还是filtered状态。这种状态只会出现在open端口对报文不做回应的扫描类型中，如：udp，ip protocol ，TCP null，fin，和xmas扫描类型。</p><p>Closed|filtered状态，这种状态主要出现在nmap无法区分端口处于closed还是filtered时。此状态只会出现在IP ID idle scan（这个类型我现在也不太理解，过段时间进行总结一些）中。 言而言之，因为防火墙的作用，所以nmap无法得到端口回应，但是如果看到service下有应用或者不是unknow，则说明udp端口开放。</p><h1 id="4、脚本编写"><a href="#4、脚本编写" class="headerlink" title="4、脚本编写"></a>4、脚本编写</h1><p>脚本命名为tcp_18000,保存在/usr/lib/zabbix/externalscripts/下，同时使用chmod +x命令赋予可执行权限。 脚本如下：</p><p>#! /bin/bash</p><p>nmap -sT x.x.x.x -p 18000 -Pn|grep open -c</p><h1 id="5、使用visudo提升zabbix用户权限"><a href="#5、使用visudo提升zabbix用户权限" class="headerlink" title="5、使用visudo提升zabbix用户权限"></a>5、使用visudo提升zabbix用户权限</h1><p>因为nmap这个的核心功能必须使用root用户的权限才能运行，所以我们必须使用visudo让zabbix用户能够以root权限运行nmap</p><p>确定为/usr/bin/nmap。 网上关于visudo的教程很多，本文不再说明 在20行下添加</p><p>zabbix ALL=(root)/usr/bin/nmap</p><p>意思是说让zabbix用户能在任何主机上以root的身份运行nmap,然后保存退出</p><h1 id="6、配置zabbix"><a href="#6、配置zabbix" class="headerlink" title="6、配置zabbix"></a>6、配置zabbix</h1><h2 id="6、1配置监控项"><a href="#6、1配置监控项" class="headerlink" title="6、1配置监控项"></a>6、1配置监控项</h2><p>配置监控项如下图所示：</p><h2 id><a href="#" class="headerlink" title></a><img src="https://opstand.gitee.io/media/image/2020/1.png" alt="img"></h2><p>注意，监控周期推荐设定为300s,默认是30s，减少nmap的扫描的影响。</p><h2 id="6-2配置触发器"><a href="#6-2配置触发器" class="headerlink" title="6.2配置触发器"></a>6.2配置触发器</h2><p>配置触发器如下图所示：</p><p><img src="https://opstand.gitee.io/media/image/2020/2.png" alt="img"></p><p>注意，推荐使用触发器是平均5分钟监测</p><h2 id="6-3配置图形"><a href="#6-3配置图形" class="headerlink" title="6.3配置图形"></a>6.3配置图形</h2><p>配置图形如下图所示：</p><p><img src="https://opstand.gitee.io/media/image/2020/3.png" alt="img"></p><p>最终的效果如下图所示：</p><p><img src="https://opstand.gitee.io/media/image/2020/4.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> nmap </tag>
            
            <tag> 公网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术人的小目标：10000小时理论落地，你就是大牛</title>
      <link href="/2019/09/26/ji-shu-ren-de-xiao-mu-biao-10000-xiao-shi-li-lun-luo-di-ni-jiu-shi-da-niu/"/>
      <url>/2019/09/26/ji-shu-ren-de-xiao-mu-biao-10000-xiao-shi-li-lun-luo-di-ni-jiu-shi-da-niu/</url>
      
        <content type="html"><![CDATA[<p>技术人如何一步步成为大牛？该怎样制定自己职业发展的小目标并达成？只要你能把这10000小时理论成功落地，你就离大牛不远了！</p><p><strong>老司机简介</strong></p><p><strong>李运华</strong>，阿里游戏资深软件工程师，带领多个研发团队，承担架构设计、架构重构、技术团队管理、技术培训等职责；专注于开源技术、系统分析、架构设计，对互联网技术的特点和发展趋势有较深入的研究，对系统解耦、高性能、高可用架构有丰富的经验。</p><h2 id="技术人的小目标"><a href="#技术人的小目标" class="headerlink" title="技术人的小目标"></a><strong>技术人的小目标</strong></h2><p>首富王健林在采访时不经意的一句话“先定一个能达到的小目标，比方说我先挣它一个亿”瞬间刷爆了朋友圈，朋友们都在充分发挥调侃和自黑的潜力，各种段子都在说自己要先定一个能达到的小目标，比如说我先挣10 billion的津巴布韦元 ：） 抛开首富的小目标对于我们普通老百姓来说过于宏大这点外，其实这句话也是挺有道理的，简单来说就是要循序渐进，不要期望一口吃成一个大胖子。这个道理其实平时大家也都懂，但在这个浮躁的社会，要真正理解并采取行动，并不那么简单，比如说“技术人员如何成为大牛”这个话题。 我在一次活动中现场进行了一次演讲：《吃的草够多，你也能成为大牛》，其中提到了10000小时理论，意思就是<strong>在一个专业方向上持续不断的积累10年，就可以成为业界大牛。</strong>这个简单的道理现场让很多朋友都觉得醍醐灌顶：原来成为大牛也不是那么难的事情，我也可以成为大牛！ 虽然理论上很简单，但真正要落地实行也并不那么容易，实行10000小时理论的关键在于坚持，我认为坚持的关键在于自己对于所从事的事业是否有“激情和兴趣”。这点当然是核心，但如果只靠激情支撑，持续10年也确实有挑战，正如一个朋友在分享会后问我的“要持续10年才能成为大牛啊，时间好长啊”！ 如果说做一件事要10年后才能修成正果，估计很多朋友就会放弃了，毕竟像唐僧那么坚定的信仰者总是少数，大部分凡夫俗子都还是需要持续不断的激励才能有动力去做一件事，因为我们的大脑在进化的过程中已经形成了需要持续不断的奖励才能保持兴奋的机制，也就是说相对于在第10年给一个大奖励，还不如每年给一个小奖励。 那如何才能在10年漫长的路上让我们持续的坚持下去呢？答案其实就是首富的话：“先定一个能达到的小目标”！ 我们来看如何将“10年成为大牛”这个目标分解为一个个能达到的小目标。我将这个方法归纳为“三段分解法”，即：<strong>将一个宏大或者长远的目标经过三次分解，得到一个个短期内能达到的小目标。</strong>具体的分解方法如下。</p><h2 id="一段分解：瞄准目标"><a href="#一段分解：瞄准目标" class="headerlink" title="一段分解：瞄准目标"></a><strong>一段分解：瞄准目标</strong></h2><p>10年成为大牛的目标虽然比较长远比较宏大，但并不意味着在没有成为大牛前，我们一直都是菜鸟。<strong>从菜鸟到大牛的过程中，中间其实有几个关键的里程碑，这些里程碑就是我们的一段目标。</strong> 以技术人员为例，技术人员典型的发展路径基本上都是下面的这个模式： 1）0 ~ 1年：<strong>菜鸟</strong>，需要别人手把手来教 2）1 ~ 3年：<strong>初级</strong>，需要别人带你做 3）3 ~ 5年：<strong>高级</strong>，能独当一面，可以带初级技术人员了 4）5 ~ 8年：<strong>资深</strong>，能独挡多面 5）8 ~ 10年：<strong>大牛</strong>，统筹规划，高屋建瓴 通过上面的分解我们可以看到，虽然说10年才能成为大牛，但是3年就可以达到初级水平，5年就可以达到高级水平，8年就可以达到资深水平，在这个过程中我们一直在成长和提升，而不是说没有成为大牛就是菜鸟；并且对于很多朋友来说，如果目标不是像首富那样要赚就赚1亿，能达到高级或者资深水平，其实已经可以过得比较滋润了。 通过这种分解方法，再核对一下自己目前所处的位置，然后先瞄准下一个目标，全力以赴其实也就2 ~ 3年时间，这样来看一段目标其实是比较容易达成的。 这种目标分解的方法除了适合技术人员外，其它很多领域也都适应，比如说产品人员、运营人员、甚至公务员！</p><h2 id="二段分解：掌握技能"><a href="#二段分解：掌握技能" class="headerlink" title="二段分解：掌握技能"></a><strong>二段分解：掌握技能</strong></h2><p>经过一段分解后，明确自己目前所处的位置和下一个目标，接下来就要看这个一段目标如何实现了。虽然说每个一段目标持续时间在 2~3年，但3年时间说长不长，说短也不短，如果没有好好利用，可能到了2年多的时候回头一看，好像什么都没达成，还是原地踏步。因此，为了更好的利用这3年时间，我们需要进一步分解，这就是“二段分解”。 一段分解的维度是等级，二段分解的维度则不一样，不能再分等级了，否则等级太细就没法区别了。<strong>二段分解的维度变成了“技能”，即：为了达到一段目标，我需要具备什么样的技能。</strong> 还是以技术人员为例，假设经过自我评估，认为自己目前处于初级阶段，而且初级阶段的事情已经做得比较顺手和熟练了，那么下一个一段目标自然就是达到“高级”水平。“高级”与“初级”相比，有哪些不同的技能要求呢？ 这就需要我们根据各自不同的行业和方向详细列出来了，如果自己想不出来，网上有很多资料都可以搜索到，最方便的就是到一个招聘网站，多看看几个招聘需求的描述，然后归纳总结一下。 我们随便到网上搜索一个，例如拉勾网上滴滴的“高级Java开发工程师”招聘： 多看几个类似的职位招聘，基本上我们就能明白“高级Java开发工程师”的一些基本要求。当然实际上的技能要求比招聘需求的描述还要更加细致，我个人的习惯是将这些要求整理为一个思维导图，详细列出每个技术点。例如：</p><p>（注意：以上这个图只是示例，并不是说所有Java高级工程师都一定是这个要求，例如互联网行业和电信行业的要求不一样） 有了这样一个思维导图后，我们就可以开始真正进行二段分解了，<strong>分解的方法很简单：哪里不懂补哪里！</strong>例如：我感觉目前我的数据库水平一般，仅仅会写CRUD语句，其它的东西都不懂，那我就开始专攻数据库这一部分，经过一段时间的专攻来提升自己的水平。 二段目标持续时间一般建议是6个月，既不能太短也不能太长。太短容易让人陷入为了目标而做的误区，没有真正得到有效提升；时间太长的话，3年时间又不够完成其它目标了，例如要是我定一个目标说2年提升数据库，那操作系统怎么办？网络怎么办？……等等。以6个月为一个周期，基本上刚刚好。 经过分解，最终的二段目标可以分解为如下的几个更小的目标： 1）2016.06 ~ 2017.01：提升数据库水平 2）2017.01 ~ 2017.06：提升Linux水平 3）2017.06 ~ 2017.12：提升网络和网络编程水平 当然，二段分解目标并不是一成不变的，很多时候需要根据我们工作的内容进行调整。例如老大正好安排我来负责优化系统性能，降低机器负载，那么我完全可以将“提升Linux水平”安排到“提升数据库水平”之前。</p><h2 id="三段分解：规划执行"><a href="#三段分解：规划执行" class="headerlink" title="三段分解：规划执行"></a><strong>三段分解：规划执行</strong></h2><p>二段分解得到技能的小目标后，接下来的关键就是要实现这个目标，这就是三段分解的主要目的，即：<strong>将技能目标分解为具体要做的事情，然后按照计划执行。</strong> 比如说我的二段目标是“提升Linux水平”，那怎么样才能提升呢？可以上网搜索，也可以去问有经验的朋友。明确要做的事情后，三段分解需要将二段分解的6个月目标更加细化，分为1个月或者两个月一个目标。 以我当时加入UC的情况为例，我在华为的时候是在Windows平台上用VC6进行开发，而到了UC的时候是在Linux平台上用C++开发，我当时定了“提升Linux水平”的目标，然后通过上网查，找别人问等方法，最终将这个目标分解为几个步骤： 1）1个月：通读《UNIX环境高级编程》 2）1个月：通读《Linux系统编程》 3）2个月：通读《UNIX网络编程 卷1》 4）1个月：Linux常用命令实战：tcpdump、ps、top等 通过这种方法，将6个月的目标又进一步分解为1个月的目标，实施起来就简单多了，每1 ~ 2个月专注一个具体目标，每次完成后都很有成就感，既感觉自己的水平有了提升，又佩服自己能够坚持按计划按目标完成任务，双重奖赏让自己更有动力进行下一个目标。我大约花了2年的时间将Linux、网络、MySQL三个重点技能从一无所知提升到高级的水平，很多同事都问我之前在华为是不是就是做这方面的，因为他们觉得短时间能达到这个水平是不太可能的。</p><p><strong>你的小目标从现在开始！</strong></p><p>综合前面的分析，我们将三段分解提炼一下：<strong>一段分解“等级”，二段分解“技能”，三段分解“行动”。</strong>通过前面我们的案例就可以看出，原本一个宏大的“10年成为技术大牛”的目标，经过三段分解，最终得到的是1 ~ 2个月可执行的具体行动，通过这种一步一个脚印的行动，最终就可以达成“10年成为技术大牛”的目标。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 目标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NotePad++ 正则表达式替换 高级用法 [转]</title>
      <link href="/2019/09/26/notepad-zheng-ze-biao-da-shi-ti-huan-gao-ji-yong-fa-zhuan/"/>
      <url>/2019/09/26/notepad-zheng-ze-biao-da-shi-ti-huan-gao-ji-yong-fa-zhuan/</url>
      
        <content type="html"><![CDATA[<p>转自：<a href="http://blog.csdn.net/gdp12315/_gu/article/details/51730584">http://blog.csdn.net/gdp12315\_gu/article/details/51730584</a> 在我们处理文件时，很多时候会用到查找与替换。当我们想将文件中某一部分替换替换文件中另一部分时，怎么办呢？ 下面正则表达式 给我提供方法。 正则表达式，提供复杂 并且弹性的查找与替换 注意: 不支持多行表达式 (involving \n, \r, etc).</p><h2 id="1-基本表达式"><a href="#1-基本表达式" class="headerlink" title="1 基本表达式"></a>1 基本表达式</h2><p>符号</p><p>解释</p><p>.</p><p>匹配任意字符，除了新一行(\n)。也就是说 “.”可以匹配 \r ，当文件中同时含有\r and \n时，会引起混乱。要匹配所有的字符，使用\s\S。</p><p>(…)</p><p>这个匹配一个标签区域. 这个标签可以被访问，通过语法 \1访问第一个标签, \2 访问第二个, 同理 \3 \4 … \9。 这些标签可以用在当前正则表达式中，或则替search和replace中的换字符串。</p><p>\1, \2, etc</p><p>在替换中代表1到9的标签区域(\1 to \9)。例如, 查找字符串 Fred([1-9])XXX 并替换为字符串 Sam\1YYY的方法，当在文件中找到Fred2XXX的字符串时，会替换为Sam2YYY。注意: 只有9个区域能使用，所以我们在使用时很安全，像\10\2 表示区域1和文本”0”以及区域2。</p><p>[…]</p><p>表示一个字符集合, 例如 [abc]表示任意字符 a, b or c.我们也可以使用范围例如[a-z] 表示所以的小写字母。</p><p>[^…]</p><p>表示字符补集. 例如, [^A-Za-z] 表示任意字符除了字母表。</p><p>^</p><p>匹配一行的开始(除非在集合中, 如下).</p><p>$</p><p>匹配行尾.</p><p>*</p><p>匹配0或多次, 例如 Sa*m 匹配 Sm, Sam, Saam, Saaam 等等.</p><p>+</p><p>匹配1次或多次,例如 Sa+m 匹配 Sam, Saam, Saaam 等等.</p><p>?</p><p>匹配0或者1次, 例如 Sa?m 匹配 Sm, Sam.</p><p>{n}</p><p>匹配确定的 n 次.例如, ‘Sa{2}m’ 匹配 Saam.</p><p>{m,n}</p><p>匹配至少m次，至多n次(如果n缺失，则任意次数).例如, ‘Sa{2,3}m’ 匹配 Saam or Saaam. ‘Sa{2,}m’ 与 ‘Saa+m’相同</p><p>*?, +?, ??, {n,m}?</p><p>非贪心匹配，匹配第一个有效的匹配，通常 ‘&lt;.&gt;’ 会匹配整个 ‘content’字符串 –但 ‘&lt;.?&gt;’ 只匹配 ” .这个标记一个标签区域，这些区域可以用语法\1 \2 等访问多个对应1-9区域。</p><h2 id="2-标记和分组"><a href="#2-标记和分组" class="headerlink" title="2 标记和分组"></a>2 标记和分组</h2><p>符号</p><p>解释</p><p>(…)</p><p>一组捕获. 可以通过\1 访问第一个组, \2 访问第二个.</p><p>(?:…)</p><p>非捕获组.</p><p>(?=…)</p><p>非捕获组 – 向前断言. 例如’(.*)(?=ton)’ 表达式，当 遇到’Appleton’字符串时，会匹配为’Apple’.</p><p>(?&lt;=…)</p><p>非捕获组 – 向后断言. 例如’(?&lt;=sir) (.*)’ 表示式，当遇到’sir William’ 字符串时，匹配为’ William’.</p><p>(?!…)</p><p>非捕获组 – 消极的向前断言. 例如’.(?!e)’ 表达式，当遇到’Apple’时，会找到每个字母除了 ‘l’，因为它紧跟着 ‘e’.</p><p>(?</p><p>非捕获组 – 消极向后断言. 例如 ‘(?</p><p>(?P…)</p><p>命名所捕获的组. 提交一个名称到组中供后续使用，例如’(?PA[^\s]+)\s(?P=first)’ 会找到 ‘Apple Apple’. 类似的 ‘(A[^\s]+)\s\1’ 使用组名而不是数字.</p><p>(?=name)</p><p>匹配名为name的组. (?P…).</p><p>(?#comment)</p><p>批注 –括号中的内容在匹配时将被忽略。</p><h2 id="3-特殊符号"><a href="#3-特殊符号" class="headerlink" title="3 特殊符号"></a>3 特殊符号</h2><p>符号</p><p>解释</p><p>\s</p><p>匹配空格. 注意，会匹配标记的末尾. 使用 [[:blank:]] 来避免匹配新一行。</p><p>\S</p><p>匹配非空白</p><p>\w</p><p>匹配单词字符</p><p>\W</p><p>匹配非单词字符</p><p>\d</p><p>匹配数字字符</p><p>\D</p><p>匹配非数字字符</p><p>\b</p><p>匹配单词边界. ‘\bW\w+’ 找到W开头的单词</p><p>\B</p><p>匹配非单词边界. ‘\Be\B+’ – 找到位于单子中间的字母’e’</p><p>\&lt;</p><p>This matches the start of a word using Scintilla’s definitions of words.</p><p>&gt;</p><p>This matches the end of a word using Scintilla’s definition of words.</p><p>\x</p><p>运行用x来表达可能具有其他意思的字符。例如, [ 用来插入到文本中作为[ 而不是作为字符集的开始.</p><h2 id="4-字符类"><a href="#4-字符类" class="headerlink" title="4 字符类"></a>4 字符类</h2><p>符号</p><p>解释</p><p>[[:alpha:]]</p><p>匹配字母字符: [A-Za-z]</p><p>[[:digit:]]</p><p>匹配数字字符: [0-9]</p><p>[[:xdigit:]]</p><p>匹配16进制字符: [0-9A-Fa-f]</p><p>[[:alnum:]]</p><p>匹配字母数字字符: [0-9A-Za-z]</p><p>[[:lower:]]</p><p>匹配小写字符: [a-z]</p><p>[[:upper:]]</p><p>匹配大写字符: [A-Z]</p><p>[[:blank:]]</p><p>匹配空白 (空格 or tab):[ \t]</p><p>[[:space:]]</p><p>匹配空白字符:[ \t\r\n\v\f]</p><p>[[:punct:]]</p><p>匹配标点字符: [-!”#$%&amp;’()*+,./:;&lt;=&gt;?@[]_`{</p><p>[[:graph:]]</p><p>匹配图形字符: [\x21-\x7E]</p><p>[[:print:]]</p><p>匹配可打印的字符 (graphical characters and spaces)</p><p>[[:cntrl:]]</p><p>匹配控制字符</p><h2 id="5-替换操作"><a href="#5-替换操作" class="headerlink" title="5 替换操作"></a>5 替换操作</h2><p>使用正则表达式的标记，通过（）来包围想要用的字符，然后用\1 来替换字符串，第一个匹配文本。 例如:</p><p>Text body</p><p>Search string</p><p>Replace string</p><p>Result</p><p>Hi my name is Fred</p><p>my name is (.+)</p><p>my name is not \1</p><p>Hi my name is not Fred</p><p>The quick brown fox jumped over the fat lazy dog</p><p>brown (.+) jumped over the (.+)</p><p>brown \2 jumped over the \1</p><p>The quick brown fat jumped over the fox lazy dog</p><h2 id="6-限制"><a href="#6-限制" class="headerlink" title="6 限制"></a>6 限制</h2><p>Support for regular expressions in PN2 is currently limited, the supported patterns and syntax are a very small subset of the powerful expressions supported by perl. 最大的限制是正则表达式只能匹配单行，不能用多行匹配表达。可以用Backslash Expressions代替. 准备计划是使用PCRE库 library (used elsewhere in PN2) 来支持文档搜索.</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 匹配 </tag>
            
            <tag> 替换 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生的一个最公平资源是时间</title>
      <link href="/2019/03/31/ren-sheng-de-yi-ge-zui-gong-ping-zi-yuan-shi-shi-jian/"/>
      <url>/2019/03/31/ren-sheng-de-yi-ge-zui-gong-ping-zi-yuan-shi-shi-jian/</url>
      
        <content type="html"><![CDATA[<p>人生的一个最公平资源是时间</p><p>我们不能选择出身，因而， 出身在不同家庭的人生来就具有不同的命运， 但是， 我们每个人在出生时都具有一个最公平的资源， 这个资源就是时间。在同一时间出生的人，全部享受同一个时间， 每分每秒都一样。</p><p>人生就是在时间和空间之间的一个运动的轨迹。 对于不同家庭背景的人来说， 我们不能进行同等的比较和竞争。 这是因为空间不同。空间不同的人的人生具有不同的参数。 同等家庭背景的人， 在时间和空间上具有相同的参数。</p><p>所以， 家庭背景相同的人，其人生的命运， 或者说人生的价值，主要是对时间这个公平资源的利用率上。</p><p>总的来说， 那些时间利用率高的人， 或者说时间利用正确的人， 其人生命运就会好一些。</p><p>什么是对时间这个公平资源的正确利用呢？</p><p>我的认知如下。</p><p>把时间用在德智体全面发展之上的人就是对时间的正确利用。要做到德智体全面发展， 我们必须树立正确的人生价值观。 要树立正确的人生价值观， 就必须接受正确的思想教育。 这就要求我们多读一些正能量的书籍， 与良师益友相处， 远离有损精神健康的读物和场所。提高智力， 就需要努力学习文化知识。 增强体质， 就需要不断地进行体育锻炼。</p><p>我个人的体验是：正确而高效利用时间的人会把时间主要用在下列两个方面。</p><p>首先是体育锻炼。 身体是一个正常人生的基础。 真正的成功人生都是建立在健康身体基础之上的。</p><p>其次是学习文化和知识技能。 文化程度高， 或者具有一种专业特长的人在社会上就比较容易生存。</p><p>现在我用一个假设来推断两个同时出身在同等背景下的人在时间利用上的不同而造成的不同人生命运。</p><p>公元2000年1月1日零时在江南某村， 两个婴儿同时来到这个世界，性别相同， 他们的父母的身份地位和家庭的经济条件也几乎一模一样。从幼儿园， 到高中， 一个孩子在父母的严密而正确的管教下， 认真读书， 坚持体育锻炼， 把时间和精力放在学习和锻炼上。 另一个孩子受到父母的溺爱，不认真读书和锻炼， 经常把时间用在享受生活上， 玩手机， 上网吧， 旷学。 结果前者以优异的成绩考上北大， 后者连一个三本的学校都进不了。这两个孩子今后的人生命运可想而知。</p><p>简言之， 时间是上苍给予每个人最公正平等的资源。 这个资源是每个人可以任意支配的。那些懂得正确有效地利用时间的人， 就是会有效利用资源的人， 所以， 在生存的竞争中就可能获得优势， 从而人生命运就会好一些。 浪费时间， 虚度年华的人， 就是对资源的浪费， 是对自己的一种不负责任的行为， 其人生可能会处于社会的低层。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux企业运维人员最常用150个命令汇总</title>
      <link href="/2018/12/13/linux-qi-ye-yun-wei-ren-yuan-zui-chang-yong-150-ge-ming-ling-hui-zong/"/>
      <url>/2018/12/13/linux-qi-ye-yun-wei-ren-yuan-zui-chang-yong-150-ge-ming-ling-hui-zong/</url>
      
        <content type="html"><![CDATA[<p>近来老男孩发现新手学习Linux记不住命令，不会分类、不会筛选重点，胡子眉毛一把抓当然记不住了。 特别整理Linux运维最常用150个命令和大家分享，大家学习命令不用在盲目了，根据分类，然后逐步学习！</p><p>命令</p><p>功能说明</p><p>线上查询及帮助命令(2个)</p><p>man</p><p>查看命令帮助，命令的词典，更复杂的还有info，但不常用。</p><p>help</p><p>查看Linux内置命令的帮助，比如cd命令。</p><p>文件和目录操作命令(18个)</p><p>ls</p><p>全拼list，功能是列出目录的内容及其内容属性信息。</p><p>cd</p><p>全拼change directory，功能是从当前工作目录切换到指定的工作目录。</p><p>cp</p><p>全拼copy，其功能为复制文件或目录。</p><p>find</p><p>查找的意思，用于查找目录及目录下的文件。</p><p>mkdir</p><p>全拼make directories，其功能是创建目录。</p><p>mv</p><p>全拼move，其功能是移动或重命名文件。</p><p>pwd</p><p>全拼print working directory，其功能是显示当前工作目录的绝对路径。</p><p>rename</p><p>用于重命名文件。</p><p>rm</p><p>全拼remove，其功能是删除一个或多个文件或目录。</p><p>rmdir</p><p>全拼remove empty directories，功能是删除空目录。</p><p>touch</p><p>创建新的空文件，改变已有文件的时间戳属性。</p><p>tree</p><p>功能是以树形结构显示目录下的内容。</p><p>basename</p><p>显示文件名或目录名。</p><p>dirname</p><p>显示文件或目录路径。</p><p>chattr</p><p>改变文件的扩展属性。</p><p>lsattr</p><p>查看文件扩展属性。</p><p>file</p><p>显示文件的类型。</p><p>md5sum</p><p>计算和校验文件的MD5值。</p><p>查看文件及内容处理命令（21个）</p><p>cat</p><p>全拼concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。</p><p>tac</p><p>tac是cat的反向拼写，因此命令的功能为反向显示文件内容。</p><p>more</p><p>分页显示文件内容。</p><p>less</p><p>分页显示文件内容，more命令的相反用法。</p><p>head</p><p>显示文件内容的头部。</p><p>tail</p><p>显示文件内容的尾部。</p><p>cut</p><p>将文件的每一行按指定分隔符分割并输出。</p><p>split</p><p>分割文件为不同的小片段。</p><p>paste</p><p>按行合并文件内容。</p><p>sort</p><p>对文件的文本内容排序。</p><p>uniq</p><p>去除重复行。oldboy</p><p>wc</p><p>统计文件的行数、单词数或字节数。</p><p>iconv</p><p>转换文件的编码格式。</p><p>dos2unix</p><p>将DOS格式文件转换成UNIX格式。</p><p>diff</p><p>全拼difference，比较文件的差异，常用于文本文件。</p><p>vimdiff</p><p>命令行可视化文件比较工具，常用于文本文件。</p><p>rev</p><p>反向输出文件内容。</p><p>grep/egrep</p><p>过滤字符串，三剑客老三。</p><p>join</p><p>按两个文件的相同字段合并。</p><p>tr</p><p>替换或删除字符。</p><p>vi/vim</p><p>命令行文本编辑器。</p><p>文件压缩及解压缩命令（4个）</p><p>tar</p><p>打包压缩。oldboy</p><p>unzip</p><p>解压文件。</p><p>gzip</p><p>gzip压缩工具。</p><p>zip</p><p>压缩工具。</p><p>信息显示命令（11个）</p><p>uname</p><p>显示操作系统相关信息的命令。</p><p>hostname</p><p>显示或者设置当前系统的主机名。</p><p>dmesg</p><p>显示开机信息，用于诊断系统故障。</p><p>uptime</p><p>显示系统运行时间及负载。</p><p>stat</p><p>显示文件或文件系统的状态。</p><p>du</p><p>计算磁盘空间使用情况。</p><p>df</p><p>报告文件系统磁盘空间的使用情况。</p><p>top</p><p>实时显示系统资源使用情况。</p><p>free</p><p>查看系统内存。</p><p>date</p><p>显示与设置系统时间。</p><p>cal</p><p>查看日历等时间信息。</p><p>搜索文件命令（4个）</p><p>which</p><p>查找二进制命令，按环境变量PATH路径查找。</p><p>find</p><p>从磁盘遍历查找文件或目录。</p><p>whereis</p><p>查找二进制命令，按环境变量PATH路径查找。</p><p>locate</p><p>从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用updatedb更新库。</p><p>用户管理命令（10个）老男孩</p><p>useradd</p><p>添加用户。</p><p>usermod</p><p>修改系统已经存在的用户属性。</p><p>userdel</p><p>删除用户。</p><p>groupadd</p><p>添加用户组。</p><p>passwd</p><p>修改用户密码。</p><p>chage</p><p>修改用户密码有效期限。</p><p>id</p><p>查看用户的uid,gid及归属的用户组。</p><p>su</p><p>切换用户身份。</p><p>visudo</p><p>编辑/etc/sudoers文件的专属命令。</p><p>sudo</p><p>以另外一个用户身份（默认root用户）执行事先在sudoers文件允许的命令。</p><p>基础网络操作命令（11个）老男孩</p><p>telnet</p><p>使用TELNET协议远程登录。</p><p>ssh</p><p>使用SSH加密协议远程登录。</p><p>scp</p><p>全拼secure copy，用于不同主机之间复制文件。</p><p>wget</p><p>命令行下载文件。</p><p>ping</p><p>测试主机之间网络的连通性。</p><p>route</p><p>显示和设置linux系统的路由表。</p><p>ifconfig</p><p>查看、配置、启用或禁用网络接口的命令。</p><p>ifup</p><p>启动网卡。</p><p>ifdown</p><p>关闭网卡。</p><p>netstat</p><p>查看网络状态。</p><p>ss</p><p>查看网络状态。</p><p>深入网络操作命令（9个）</p><p>nmap</p><p>网络扫描命令。</p><p>lsof</p><p>全名list open files，也就是列举系统中已经被打开的文件。</p><p>mail</p><p>发送和接收邮件。</p><p>mutt</p><p>邮件管理命令。</p><p>nslookup</p><p>交互式查询互联网DNS服务器的命令。</p><p>dig</p><p>查找DNS解析过程。</p><p>host</p><p>查询DNS的命令。</p><p>traceroute</p><p>追踪数据传输路由状况。</p><p>tcpdump</p><p>命令行的抓包工具。</p><p>有关磁盘与文件系统的命令（16个）</p><p>mount</p><p>挂载文件系统。</p><p>umount</p><p>卸载文件系统。</p><p>fsck</p><p>检查并修复Linux文件系统。</p><p>dd</p><p>转换或复制文件。</p><p>dumpe2fs</p><p>导出ext2/ext3/ext4文件系统信息。</p><p>dump</p><p>ext2/3/4文件系统备份工具。</p><p>fdisk</p><p>磁盘分区命令，适用于2TB以下磁盘分区。</p><p>parted</p><p>磁盘分区命令，没有磁盘大小限制，常用于2TB以下磁盘分区。</p><p>mkfs</p><p>格式化创建Linux文件系统。</p><p>partprobe</p><p>更新内核的硬盘分区表信息。</p><p>e2fsck</p><p>检查ext2/ext3/ext4类型文件系统。</p><p>mkswap</p><p>创建Linux交换分区。</p><p>swapon</p><p>启用交换分区。</p><p>swapoff</p><p>关闭交换分区。</p><p>sync</p><p>将内存缓冲区内的数据写入磁盘。</p><p>resize2fs</p><p>调整ext2/ext3/ext4文件系统大小。</p><p>系统权限及用户授权相关命令（4个）</p><p>chmod</p><p>改变文件或目录权限。</p><p>chown</p><p>改变文件或目录的属主和属组。</p><p>chgrp</p><p>更改文件用户组。</p><p>umask</p><p>显示或设置权限掩码。</p><p>查看系统用户登陆信息的命令（7个）</p><p>whoami</p><p>显示当前有效的用户名称，相当于执行id -un命令。</p><p>who</p><p>显示目前登录系统的用户信息。</p><p>w</p><p>显示已经登陆系统的用户列表，并显示用户正在执行的指令。</p><p>last</p><p>显示登入系统的用户。</p><p>lastlog</p><p>显示系统中所有用户最近一次登录信息。</p><p>users</p><p>显示当前登录系统的所有用户的用户列表。</p><p>finger</p><p>查找并显示用户信息。</p><p>内置命令及其它（19个）</p><p>echo</p><p>打印变量，或直接输出指定的字符串</p><p>printf</p><p>将结果格式化输出到标准输出。</p><p>rpm</p><p>管理rpm包的命令。</p><p>yum</p><p>自动化简单化地管理rpm包的命令。</p><p>watch</p><p>周期性的执行给定的命令，并将命令的输出以全屏方式显示。</p><p>alias</p><p>设置系统别名。</p><p>unalias</p><p>取消系统别名。</p><p>date</p><p>查看或设置系统时间。</p><p>clear</p><p>清除屏幕，简称清屏。</p><p>history</p><p>查看命令执行的历史纪录。</p><p>eject</p><p>弹出光驱。</p><p>time</p><p>计算命令执行时间。</p><p>nc</p><p>功能强大的网络工具。</p><p>xargs</p><p>将标准输入转换成命令行参数。</p><p>exec</p><p>调用并执行指令的命令。</p><p>export</p><p>设置或者显示环境变量。</p><p>unset</p><p>删除变量或函数。</p><p>type</p><p>用于判断另外一个命令是否是内置命令。</p><p>bc</p><p>命令行科学计算器</p><p>系统管理与性能监视命令(9个)</p><p>chkconfig</p><p>管理Linux系统开机启动项。</p><p>vmstat</p><p>虚拟内存统计。</p><p>mpstat</p><p>显示各个可用CPU的状态统计。</p><p>iostat</p><p>统计系统IO。</p><p>sar</p><p>全面地获取系统的CPU、运行队列、磁盘 I/O、分页（交换区）、内存、 CPU中断和网络等性能数据。</p><p>ipcs</p><p>用于报告Linux中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。</p><p>ipcrm</p><p>用来删除一个或更多的消息队列、信号量集或者共享内存标识。</p><p>strace</p><p>用于诊断、调试Linux用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。</p><p>ltrace</p><p>命令会跟踪进程的库函数调用,它会显现出哪个库函数被调用。</p><p>关机/重启/注销和查看系统信息的命令（6个）</p><p>shutdown</p><p>关机。</p><p>halt</p><p>关机。</p><p>poweroff</p><p>关闭电源。</p><p>logout</p><p>退出当前登录的Shell。</p><p>exit</p><p>退出当前登录的Shell。</p><p>Ctrl+d</p><p>退出当前登录的Shell的快捷键。</p><p>进程管理相关命令（15个）</p><p>bg</p><p>将一个在后台暂停的命令，变成继续执行  （在后台执行）。</p><p>fg</p><p>将后台中的命令调至前台继续运行。</p><p>jobs</p><p>查看当前有多少在后台运行的命令。</p><p>kill</p><p>终止进程。</p><p>killall</p><p>通过进程名终止进程。</p><p>pkill</p><p>通过进程名终止进程。</p><p>crontab</p><p>定时任务命令。</p><p>ps</p><p>显示进程的快照。</p><p>pstree</p><p>树形显示进程。</p><p>nice/renice</p><p>调整程序运行的优先级。</p><p>nohup</p><p>忽略挂起信号运行指定的命令。</p><p>pgrep</p><p>查找匹配条件的进程。</p><p>runlevel</p><p>查看系统当前运行级别。</p><p>init</p><p>切换运行级别。</p><p>service</p><p>启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一位IT退休老兵的感言、工作、生活、前途、选择</title>
      <link href="/2018/12/13/yi-wei-it-tui-xiu-lao-bing-de-gan-yan-gong-zuo-sheng-huo-qian-tu-xuan-ze/"/>
      <url>/2018/12/13/yi-wei-it-tui-xiu-lao-bing-de-gan-yan-gong-zuo-sheng-huo-qian-tu-xuan-ze/</url>
      
        <content type="html"><![CDATA[<p><strong>转载非常不错的一篇文章，关于IT，关于人生，关于选择的文章，跟大家一并分享。文章比较长，但认为有用的人一定能够耐心的读完。</strong></p><p><strong>一、关于工作与生活</strong></p><p>我有个有趣的观察，外企公司多的是25-35岁的白领，40岁以上的员工很少，二三十岁的外企员工是意气风发的，但外企公司40岁附近的经理人是很尴尬的。我见过的40岁附近的外企经理人大多在一直跳槽，最后大多跳到民企，比方说，唐骏。外企员工的成功很大程度上是公司的成功，并非个人的成功，西门子的确比国美大，但并不代表西门子中国经理比国美的老板强，甚至可以说差得很远。而进外企的人往往并不能很早理解这一点，把自己的成功90％归功于自己的能力，实际上，外企公司随便换个中国区总经理并不会给业绩带来什么了不起的影响。好了问题来了，当这些经理人40多岁了，他们的薪资要求变得很高，而他们的才能其实又不是那么出众，作为外企公司的老板，你会怎么选择？有的是只要不高薪水的，要出位的精明强干精力冲沛的年轻人，有的是，为什么还要用你？</p><p>从上面这个例子，其实可以看到我们的工作轨迹，二三十岁的时候，生活的压力还比较小，身体还比较好，上面的父母身体还好，下面又没有孩子，不用还房贷，也没有孩子要上大学，当个外企小白领还是很光鲜的，挣得不多也够花了。但是人终归要结婚生子，终归会老，到了40岁，父母老了，要看病要吃药，要有人看护，自己要还房贷，要过基本体面的生活，要养小孩……那个时候需要挣多少钱才够花才重要。所以，看待工作，眼光要放远一点，一时的谁高谁低并不能说明什么。</p><p>从这个角度上来说，我不太赞成过于关注第一份工作的薪水，更没有必要攀比第一份工作的薪水，这在刚刚出校园的学生中间是很常见的。正常人大概要工作 35年，这好比是一场马拉松比赛，和真正的马拉松比赛不同的是，这次比赛没有职业选手，每个人都只有一次机会。要知道，有很多人甚至坚持不到终点，大多数人最后是走到终点的，只有少数人是跑过终点的，因此在刚开始的时候，去抢领先的位置并没有太大的意义。刚进社会的时候如果进500强公司，大概能拿到3k -6k/月的工资，有些特别技术的人才可能可以到8k/月，可问题是，5年以后拿多少？估计5k-10k了不起了。起点虽然高，但增幅有限，而且，后面的年轻人追赶的压力越来越大。</p><p>我前两天问我的一个销售，你会的这些东西一个新人2年就都学会了，但新人所要求的薪水却只是你的一半，到时候，你怎么办？ 职业生涯就像一场体育比赛，有初赛、复赛、决赛。初赛的时候大家都刚刚进社会，大多数都是实力一般的人，这时候努力一点认真一点很快就能让人脱颖而出，于是有的人二十多岁做了经理，有的人迟些也终于赢得了初赛，三十多岁成了经理。然后是复赛，能参加复赛的都是赢得初赛的，每个人都有些能耐，在聪明才智上都不成问题，这个时候再想要胜出就不那么容易了，单靠一点点努力和认真还不够，要有很强的坚忍精神，要懂得靠团队的力量，要懂得收服人心，要有长远的眼光……</p><p>看上去赢得复赛并不容易，但，还不是那么难。因为这个世界的规律就是给人一点成功的同时让人骄傲自满，刚刚赢得初赛的人往往不知道自己赢得的仅仅是初赛，有了一点小小的成绩大多数人都会骄傲自满起来，认为自己已经懂得了全部，不需要再努力再学习了，他们会认为之所以不能再进一步已经不是自己的原因了。虽然他们仍然不好对付，但是他们没有耐性，没有容人的度量，更没有清晰长远的目光。就像一只愤怒的斗牛，虽然猛烈，最终是会败的，而赢得复赛的人则象斗牛士一样，不急不躁，跟随着自己的节拍，慢慢耗尽对手的耐心和体力。赢得了复赛以后，大约已经是一位很了不起的职业经理人了，当上了中小公司的总经理，大公司的副总经理，主管着每年几千万乃至几亿的生意。</p><p>最终的决赛来了，说实话我自己都还没有赢得决赛，因此对于决赛的决胜因素也只能凭自己的猜测而已，这个时候的输赢或许就像武侠小说里写得那样，大家都是高手，只能等待对方犯错了，要想轻易击败对手是不可能的，除了使上浑身解数，还需要一点运气和时间。世界的规律依然发挥着作用，赢得复赛的人已经不只是骄傲自满了，他们往往刚愎自用，听不进去别人的话，有些人的脾气变得暴躁，心情变得浮躁，身体变得糟糕，他们最大的敌人就是他们自己，在决赛中要做的只是不被自己击败，等着别人被自己击败。这和体育比赛是一样的，最后高手之间的比赛，就看谁失误少谁就赢得了决赛。</p><p><strong>二、</strong> <strong>根源</strong> 你工作快乐么？你的工作好么？</p><p>有没有觉得干了一段时间以后工作很不开心？有没有觉得自己入错了行？有没有觉得自己没有得到应有的待遇？有没有觉得工作像一团乱麻每天上班都是一种痛苦？有没有很想换个工作？有没有觉得其实现在的公司并没有当初想象得那么好？有没有觉得这份工作是当初因为生存压力而找的，实在不适合自己？你从工作中得到你想要得到的了么？你每天开心么？</p><p>网络上愤怒的人很多，你有没有想过，你为什么不快乐？你为什么愤怒？</p><p>其实，你不快乐的根源，是因为你不知道要什么！你不知道要什么，所以你不知道去追求什么，你不知道追求什么，所以你什么也得不到。</p><p>我总觉得，职业生涯首先要关注的是自己，自己想要什么？大多数人大概没想过这个问题，唯一的想法只是——我想要一份工作，我想要一份不错的薪水，我知道所有人对于薪水的渴望，可是，你想每隔几年重来一次找工作的过程么？你想每年都在这种对于工作和薪水的焦急不安中度过么？不想的话，就好好想清楚。饮鸩止渴，不能因为口渴就拼命喝毒药。越是焦急，越是觉得自己需要一份工作，越饥不择食，越想不清楚，越容易失败，你的经历越来越差，下一份工作的人看着你的简历就皱眉头。于是你越喝越渴，越渴越喝，陷入恶性循环。最终只能哀叹世事不公或者生不逢时，只能到网络上来发泄一把，在失败者的共鸣当中寻求一点心理平衡罢了。大多数人都有生存压力，我也是，有生存压力就会有很多焦虑，积极的人会从焦虑中得到动力，而消极的人则会因为焦虑而迷失方向。所有人都必须在压力下做出选择，这就是世道，你喜欢也罢不喜欢也罢。</p><p>一般我们处理的事情分为重要的事情和紧急的事情，如果不做重要的事情就会常常去做紧急的事情。比如锻炼身体保持健康是重要的事情，而看病则是紧急的事情。如果不锻炼身体保持健康，就会常常为了病痛烦恼。又比如防火是重要的事情，而救火是紧急的事情，如果不注意防火，就要常常救火。找工作也是如此，想好自己究竟要什么是重要的事情，找工作是紧急的事情，如果不想好，就会常常要找工作。往往紧急的事情给人的压力比较大，迫使人们去赶紧做，相对来说重要的事情反而没有那么大的压力，大多数人做事情都是以压力为导向的，压力之下，总觉得非要先做紧急的事情，结果就是永远到处救火，永远没有停歇的时候。（很多人的工作也像是救火队一样忙碌痛苦，也是因为工作中没有做好重要的事情。）那些说自己活在水深火热为了生存顾不上那么多的朋友，今天找工作困难是当初你们没有做重要的事情，是结果不是原因。如果今天你们还是因为急于要找一份工作而不去思考，那么或许将来要继续承受痛苦找工作的结果。</p><p>我始终觉得我要说的话题，沉重了点，需要很多思考，远比唐笑打武警的话题来的枯燥乏味，但是，天下没有轻松的成功，成功，要付代价。请先忘记一切的生存压力，想想这辈子你最想要的是什么？所以，最要紧的事情，先想好自己想要什么。</p><p><strong>三、什么是好工作</strong></p><p>当初微软有个唐骏，很多大学里的年轻人觉得这才是他们向往的职业生涯，我在清华bbs里发的帖子被这些学子们所不屑，那个时候学生们只想出国或者去外企，不过如今看来，我还是对的，唐骏去了盛大，陈天桥创立的盛大，一家民营公司。一个高学历的海归在500强的公司里拿高薪水，这大约是很多年轻人的梦想，问题是，每年毕业的大学生都在做这个梦，好的职位却只有500个。</p><p>人都是要面子的，也是喜欢攀比的，即使在工作上也喜欢攀比，不管那是不是自己想要的。大家认为外企公司很好，可是好在哪里呢？好吧，他们在比较好的写字楼，这是你想要的么？他们出差住比较好的酒店，这是你想要的么？别人会羡慕一份外企公司的工作，这是你想要的么？那一切都是给别人看的，你干吗要活得那么辛苦给别人看？另一方面，他们薪水福利一般，并没有特别了不起，他们的晋升机会比较少，很难做到很高阶的主管，他们虽然厌恶常常加班，却不敢不加班，因为“你不干有得是人干”，大部分情况下会找个台湾人香港人新加坡人来管你，而这些人又往往有些莫名其妙的优越感。你想清楚了么？500强一定好么？找工作究竟是考虑你想要什么，还是考虑别人想看什么？</p><p>我的大学同学们大多数都到美国了，甚至毕业这么多年了，还有人最近到国外去了。出国真的有那么好么？我的大学同学们，大多数还是在博士、博士后、访问学者地挣扎着，至今只有一个正经在一个美国大学里拿到个正式的教职。国内的教授很难当么？我有几个表亲也去了国外了，他们的父母独自在国内，没有人照顾，有好几次人在家里昏倒都没人知道，出国，真的这么光彩么？就像有人说的“很多事情就像看A片，看的人觉得很爽，做的人未必。”</p><p>人总想找到那个最好的，可是，什么是最好的？你觉得是最好的那个，是因为你的确了解，还是因为别人说他是最好的？即使他对于别人是最好的，对于你也一定是最好的么？</p><p>对于自己想要什么，自己要最清楚，别人的意见并不是那么重要。很多人总是常常被别人的意见所影响，亲戚的意见，朋友的意见，同事的意见……问题是，你究竟是要过谁的一生？人的一生不是父母一生的续集，也不是儿女一生的前传，更不是朋友一生的外篇，只有你自己对自己的一生负责，别人无法也负不起这个责任。自己做的决定，至少到最后，自己没什么可后悔。对于大多数正常智力的人来说，所做的决定没有大的对错，无论怎么样的选择，都是可以尝试的。比如你没有考自己上的那个学校，没有入现在这个行业，这辈子就过不下去了？就会很失败？不见得。</p><p>我想，好工作，应该是适合你的工作，具体点说，应该是能给你带来你想要的东西的工作，你或许应该以此来衡量你的工作究竟好不好，而不是拿公司的大小，规模，外企还是国企，是不是有名，是不是上市公司来衡量。小公司，未必不是好公司，赚钱多的工作，也未必是好工作。你还是要先弄清楚你想要什么，如果你不清楚你想要什么，你就永远也不会找到好工作，因为你永远只看到你得不到的东西，你得到的，都是你不想要的。 可能，最好的，已经在你的身边，只是，你还没有学会珍惜。人们总是盯着得不到的东西，而忽视了那些已经得到的东西。</p><p><strong>四、普通人</strong></p><p>我发现中国人的励志和国外的励志存在非常大的不同，中国的励志比较鼓励人立下大志愿，卧薪尝胆，有朝一日成富成贵。而国外的励志比较鼓励人勇敢面对现实生活，面对普通人的困境，虽然结果也是成富成贵，但起点不一样，相对来说，我觉得后者在操作上更现实，而前者则需要用999个失败者来堆砌一个成功者的故事。</p><p>我们都是普通人，普通人的意思就是，概率这件事是很准的。因此，我们不会买彩票中500万，我们不会成为比尔盖茨或者李嘉诚，我们不会坐飞机掉下来，我们当中很少的人会创业成功，我们之中有30％的人会离婚，我们之中大部分人会活过65岁……</p><p>所以请你在想自己要什么的时候，要得“现实”一点，你说我想要做李嘉诚，抱歉，我帮不上你。成为比尔盖茨或者李嘉诚这种人，是靠命的，看我写的这篇文章绝对不会让你成为他们，即使你成为了他们，也绝对不是我这篇文章的功劳。“王侯将相宁有种乎”但真正当皇帝的只有一个人，王侯将相，人也不多。目标定得高些对于喜欢挑战的人来说有好处，但对于大多数普通人来说，反而比较容易灰心沮丧，很容易就放弃了。</p><p>回过头来说，李嘉诚比你有钱大致50万倍，他比你更快乐么？或许。有没有比你快乐50万倍，一定没有。他比你最多也就快乐一两倍，甚至有可能还不如你快乐。寻找自己想要的东西不是和别人比赛，比谁要得更多更高，比谁的目标更远大。虽然成为李嘉诚这个目标很宏大，但你并不见得会从这个目标以及追求目标的过程当中获得快乐，而且基本上你也做不到。你必须听听你内心的声音，寻找真正能够使你获得快乐的东西，那才是你想要的东西。 你想要的东西，或者我们把它称之为目标，目标其实并没有高低之分，你不需要因为自己的目标没有别人远大而不好意思，达到自己的目标其实就是成功，成功有大有小，快乐却是一样的。我们追逐成功，其实追逐的是成功带来的快乐，而非成功本身。职业生涯的道路上，我们常常会被攀比的心态蒙住眼睛，忘记了追求的究竟是什么，忘记了是什么能使我们更快乐。</p><p>社会上一夜暴富的新闻很多，这些消息，总会在我们的心里面掀起很多涟漪，涟漪多了就变成惊涛骇浪，心里的惊涛骇浪除了打翻承载你目标的小船，并不会使得你也一夜暴富。“只见贼吃肉，不见贼挨揍。”我们这些普通人既没有当贼的勇气，又缺乏当贼的狠辣绝决，虽然羡慕吃肉，却更害怕挨揍，偶尔看到几个没挨揍的贼就按奈不住，或者心思活动，或者大感不公，真要叫去做贼，却也不敢。</p><p>我还是过普通人的日子，要普通人的快乐，至少，晚上睡得着觉。</p><p><strong>五、跳槽与积累</strong> 首先要说明，工作是一件需要理智的事情，所以不要在工作上耍个性，天涯上或许会有人觉得你很有个性而叫好，煤气公司电话公司不会因为觉得你很有个性而免了你的帐单。当你很帅地炒掉了你的老板，当你很酷地挖苦了一番招聘的HR，账单还是要照付，只是你赚钱的时间更少了，除了你自己，没人受损失。</p><p>我并不反对跳槽，但跳槽决不是解决问题的办法，而且频繁跳槽的后果是让人觉得没有忠诚度可言，而且不能安心工作。现在很多人从网上找工作，很多找工作的网站常常给人出些馊主意，要知道他们是盈利性企业，当然要从自身盈利的角度来考虑，大家越是频繁跳槽频繁找工作他们越是生意兴隆，所以鼓动人们跳槽是他们的工作。所以他们会常常告诉你，你拿的薪水少了，你享受的福利待遇差了，又是“薪情快报”又是“赞叹自由奔放的灵魂”。至于是否会因此让你不能安心，你跳了槽是否解决问题，是否更加开心，那个，他们管不着。</p><p>要跳槽肯定是有问题，一般来说问题发生了，躲是躲不开的，很多人跳槽是因为这样或者那样的不开心，如果这种不开心，在现在这个公司不能解决，那么在下一个公司多半也解决不掉。你必须相信，90%的情况下，你所在的公司并没有那么烂，你认为不错的公司也没有那么好。就像围城里说的，“城里的人拼命想冲出来，而城外的人拼命想冲进去。”每个公司都有每个公司的问题，没有问题的公司是不存在的。换个环境你都不知道会碰到什么问题，与其如此，不如就在当下把问题解决掉。很多问题当你真的想要去解决的时候，或许并没有那么难。有的时候你觉得问题无法解决，事实上，那只是“你觉得”。</p><p>人生的曲线应该是曲折向上的，偶尔会遇到低谷但大趋势总归是曲折向上的，而不是象脉冲波一样每每回到起点，我见过不少面试者，30多岁了，四五份工作经历，每次多则3年，少则1年，30多岁的时候回到起点从一个初级职位开始干起，拿基本初级的薪水，和20多岁的年轻人一起竞争，不觉得有点辛苦么？这种日子好过么？</p><p>我非常不赞成在一个行业超过3年以后换行业，基本上，35岁以前我们的生存资本靠打拼，35岁以生存的资本靠的就是积累，这种积累包括人际关系，经验，人脉，口碑……如果常常更换行业，代表几年的积累付之东流，一切从头开始，如果换了两次行业，35岁的时候大概只有5年以下的积累，而一个没有换过行业的人至少有了10年的积累，谁会占优势？工作到2-3年的时候，很多人觉得工作不顺利，好像到了一个瓶颈，心情烦闷，就想辞职，乃至换一个行业，觉得这样所有一切烦恼都可以抛开，会好很多。其实这样做只是让你从头开始，到了时候还是会发生和原来行业一样的困难，熬过去就向上跨了一大步，要知道每个人都会经历这个过程，每个人的职业生涯中都会碰到几个瓶颈，你熬过去了而别人没有熬过去你就领先了。跑长跑的人会知道，开始的时候很轻松，但是很快会有第一次的难受，但过了这一段又能跑很长一段，接下来会碰到第二次的难受，坚持过了以后又能跑一段，如此往复，难受一次比一次厉害，直到坚持不下去了。大多数人第一次就坚持不了了，一些人能坚持到第二次，第三次虽然大家都坚持不住了，可是跑到这里的人也没几个了，这点资本足够你安稳活这一辈子了。</p><p>一份工作到两三年的时候，大部分人都会变成熟手，这个时候往往会陷入不断的重复，有很多人会觉得厌倦，有些人会觉得自己已经搞懂了一切，从而懒得去寻求进步了。很多时候的跳槽是因为觉得失去兴趣了，觉得自己已经完成比赛了。其实这个时候比赛才刚刚开始，工作两三年的人，无论是客户关系，人脉，手下，和领导的关系，在业内的名气……还都是远远不够的，但稍有成绩的人总是会自我感觉良好的，每个人都觉得自己跟客户关系铁得要命，觉得自己在业界的口碑好得很。其实可以肯定地说，一定不是，这个时候，还是要拿出前两年的干劲来，稳扎稳打，积累才刚刚开始。 你足够了解你的客户吗？你知道他最大的烦恼是什么吗？你足够了解你的老板么？你知道他最大的烦恼是什么吗？你足够了解你的手下么？你知道他最大的烦恼是什么吗？如果你不知道，你凭什么觉得自己已经积累够了？如果你都不了解，你怎么能让他们帮你的忙，做你想让他们做的事情？如果他们不做你想让他们做的事情，你又何来的成功？</p><p><strong>六、等待</strong></p><p>这是个浮躁的人们最不喜欢的话题，本来不想说这个话题，因为会引起太多的争论，而我又无意和人争论这些，但是考虑到对于职业生涯的长久规划，这是一个躲避不了的话题，还是决定写一写，不爱看的请离开吧。</p><p>并不是每次穿红灯都会被汽车撞，并不是每个罪犯都会被抓到，并不是每个错误都会被惩罚，并不是每个贪官都会被枪毙，并不是你的每一份努力都会得到回报，并不是你的每一次坚持都会有人看到，并不是你每一点付出都能得到公正的回报，并不是你的每一个善意都能被理解……这个，就是世道。好吧，世道不够好，可是，你有推翻世道的勇气么？如果没有，你有更好的解决办法么？有很多时候，人需要一点耐心，一点信心。每个人总会轮到几次不公平的事情，而通常，安心等待是最好的办法。</p><p>有很多时候我们需要等待，需要耐得住寂寞，等待属于你的那一刻。周润发等待过，刘德华等待过，周星驰等待过，王菲等待过，张艺谋也等待过……看到了他们如今的功成名就的人，你可曾看到当初他们的等待和耐心？你可曾看到金马奖影帝在街边摆地摊？你可曾看到德云社一群人在剧场里给一位观众说相声？你可曾看到周星驰的角色甚至连一句台词都没有？每一个成功者都有一段低沉苦闷的日子，我几乎能想象得出来他们借酒浇愁的样子，我也能想象得出他们为了生存而挣扎的窘迫。在他们一生最中灿烂美好的日子里，他们渴望成功，但却两手空空，一如现在的你。没有人保证他们将来一定会成功，而他们的选择是耐住寂寞。如果当时的他们总念叨着“成功只是属于特权阶级的”，你觉得他们今天会怎样？</p><p>曾经我也不明白有些人为什么并不比我有能力却要坐在我的头上，年纪比我大就一定要当我的领导么？为什么有些烂人不需要努力就能赚钱？为什么刚刚改革开放的时候的人能那么容易赚钱，而轮到我们的时候，什么事情都要正规化了？有一天我突然想，我还在上学的时候他们就在社会里挣扎奋斗了，他们在社会上奋斗积累了十几二十年，我们新人来了，他们有的我都想要，我这不是在要公平，我这是在要抢劫。因为我要得太急，因为我忍不住寂寞。二十多岁的男人，没有钱，没有事业，却有蓬勃的欲望。</p><p>人总是会遇到挫折的，人总是会有低潮的，人总是会有不被人理解的时候的，人总是有要低声下气的时候，这些时候恰恰是人生最关键的时候，因为大家都会碰到挫折，而大多数人过不了这个门槛，你能过，你就成功了。在这样的时刻，我们需要耐心等待，满怀信心地去等待，相信，生活不会放弃你，机会总会来的。至少，你还年轻，你没有坐牢，没有生治不了的病，没有欠还不起的债。比你不幸的人远远多过比你幸运的人，你还怕什么？路要一步步走，虽然到达终点的那一步很激动人心，但大部分的脚步是平凡甚至枯燥的，但没有这些脚步，或者耐不住这些平凡枯燥，你终归是无法迎来最后的那些激动人心。</p><p>逆境，是上帝帮你淘汰竞争者的地方。要知道，你不好受，别人也不好受，你坚持不下去了，别人也一样，千万不要告诉别人你坚持不住了，那只能让别人获得坚持的信心，让竞争者看着你微笑的面孔，失去信心，退出比赛。胜利属于那些有耐心的人。</p><p>在最绝望的时候，我会去看电影《The Pursuit of Happyness》《JerryMaguire》，让自己重新鼓起勇气，因为，无论什么时候，我们总还是有希望。当所有的人离开的时候，我不失去希望，我不放弃。每天下班坐在车里，我喜欢哼着《隐形的翅膀》看着窗外，我知道，我在静静等待，等待属于我的那一刻。</p><p>原贴里伊吉网友的话我很喜欢，抄录在这里：</p><p>每个人都希望，自己是独一无二的特殊者 含着金匙出生、投胎到好家庭、工作安排到电力局拿1w月薪这样的小概率事件，当然最好轮到自己 红军长征两万五、打成右派反革命、胼手胝足牺牲尊严去奋斗，最好留给祖辈父辈和别人 自然，不是每个吃过苦的人都会得到回报 但是，任何时代，每一个既得利益者身后，都有他的祖辈父辈奋斗挣扎乃至流血付出生命的身影 羡慕别人有个好爸爸，没什么不可以 问题是，你的下一代，会有一个好爸爸吗？ 至于问到为什么不能有同样的赢面概率？我只能问：为什么物种竞争中，人和猴子不能有同样的赢面概率？ 物竞天择。猴子的灵魂不一定比你卑微，但你身后有几十万年的类人猿进化积淀。</p><p><strong>七、入对行跟对人</strong></p><p>在中国，大概很少有人是一份职业做到底的，虽然如此，第一份工作还是有些需要注意的地方，有两件事情格外重要，第一件是入行，第二件事情是跟人。第一份工作对人最大的影响就是入行，现代的职业分工已经很细，我们基本上只能在一个行业里成为专家，不可能在多个行业里成为专家。很多案例也证明即使一个人在一个行业非常成功，到另外一个行业，往往完全不是那么回事情，“你想改变世界，还是想卖一辈子汽水？”是乔布斯邀请百事可乐总裁约翰·斯考利加盟苹果时所说的话，结果这位在百事非常成功的约翰，到了苹果表现平平。其实没有哪个行业特别好，也没有哪个行业特别差，或许有报道说哪个行业的平均薪资比较高，但是他们没说的是，那个行业的平均压力也比较大。看上去很美的行业一旦进入才发现很多地方其实并不那么完美，只是外人看不见。</p><p>说实话，我自己都没有发大财，所以我的建议只是让人快乐工作的建议，不是如何发大财的建议，我们只讨论一般普通打工者的情况。我认为选择什么行业并没有太大关系，看问题不能只看眼前。比如，从前年开始，国家开始整顿医疗行业，很多医药公司开不下去，很多医药行业的销售开始转行。其实医药行业的不景气是针对所有公司的，并非针对一家公司，大家的日子都不好过，这个时候跑掉是非常不划算的，大多数正规的医药公司即使不做新生意撑个两三年总是能撑的，大多数医药销售靠工资撑个两三年也是可以撑的，国家不可能永远捏着医药行业不放的，两三年以后光景总归还会好起来的，那个时候别人都跑了而你没跑，那时的日子应该会好过很多。有的时候觉得自己这个行业不行了，问题是，再不行的行业，做得人少了也变成了好行业，当大家都觉得不好的时候，往往却是最好的时候。大家都觉得金融行业好，金融行业门槛高不说，有多少人削尖脑袋要钻进去，竞争激励，进去以后还要时时提防，一个疏忽，就被后来的人给挤掉了，压力巨大，又如何谈得上快乐？也就未必是“好”工作了。</p><p>太阳能这个东西至今还不能进入实际应用的阶段，但是中国已经有7家和太阳能有关的公司在纽交所上市了，国美苏宁永乐其实是贸易型企业，也能上市，鲁泰纺织连续10年利润增长超过50%，卖茶的一茶一座，卖衣服的海澜之家都能上市……其实选什么行业真的不重要，关键是怎么做。事情都是人做出来的，关键是人。</p><p>有一点是需要记住的，这个世界上，有史以来直到我们能够预见得到的未来，成功的人总是少数，有钱的人总是少数，大多数人是一般的，普通的，不太成功的。因此，大多数人的做法和看法，往往都不是距离成功最近的做法和看法。因此大多数人说好的东西不见得好，大多数人说不好的东西不见得不好。大多数人都去炒股的时候说明跌只是时间问题，大家越是热情高涨的时候，跌的日子越近。大多数人买房子的时候，房价不会涨，而房价涨的差不多的时候，大多数人才开始买房子。不会有这样一件事情让大家都变成功，发了财，历史上不曾有过，将来也不会发生。有些东西即使一时运气好得到了，还是会在别的时候别的地方失去的。</p><p>年轻人在职业生涯的刚开始，尤其要注意的是，要做对的事情，不要让自己今后几十年的人生总是提心吊胆，更不值得为了一份工作赔上自己的青春年华。我的公司是个不行贿的公司，以前很多人不理解，甚至自己的员工也不理解，不过如今，我们是同行中最大的企业，客户乐意和我们打交道，尤其是在国家打击腐败的时候，每个人都知道我们做生意不给钱的名声，都敢于和我们做生意。而勇于给钱的公司，不是倒了，就是跑了，要不就是每天睡不好觉，人还是要看长远一点。很多时候，看起来最近的路，其实是最远的路，看起来最远的路，其实是最近的路。</p><p>跟对人是说，入行后要跟个好领导好老师，刚进社会的人做事情往往没有经验，需要有人言传身教。对于一个人的发展来说，一个好领导是非常重要的。所谓“好”的标准，不是他让你少干活多拿钱，而是以下三个。</p><p>首先，好领导要有宽广的心胸，如果一个领导每天都会发脾气，那几乎可以肯定他不是个心胸宽广的人，能发脾气的时候却不发脾气的领导，多半是非常厉害的领导。中国人当领导最大的毛病是容忍不了能力比自己强的人，所以常常可以看到的一个现象是，领导很有能力，手下一群庸才或者手下一群闲人。如果看到这样的环境，还是不要去的好。</p><p>其次，领导要愿意从下属的角度来思考问题，这一点其实是从面试的时候就能发现的，如果这位领导总是从自己的角度来考虑问题，几乎不听你说什么，这就危险了。从下属的角度来考虑问题并不代表同意下属的说法，但他必须了解下属的立场，下属为什么要这么想，然后他才有办法说服你，只关心自己怎么想的领导往往难以获得下属的信服。</p><p>第三，领导敢于承担责任，如果出了问题就把责任往下推，有了功劳就往自己身上揽，这样的领导不跟也罢。选择领导，要选择关键时刻能抗得住的领导，能够为下属的错误买单的领导，因为这是他作为领导的责任。</p><p>有可能，你碰不到好领导，因为，中国的领导往往是屁股决定脑袋的领导，因为他坐领导的位置，所以他的话就比较有道理，这是传统观念官本位的误区，可能有大量的这种无知无能的领导，只是，这对于你其实是好事，如果将来有一天你要超过他，你希望他比较聪明还是比较笨？相对来说这样的领导其实不难搞定，只是你要把自己的身段放下来而已。多认识一些人，多和比自己强的人打交道，同样能找到好的老师，不要和一群同样郁闷的人一起控诉社会，控诉老板，这帮不上你，只会让你更消极。和那些比你强的人打交道，看他们是怎么想的，怎么做的，学习他们，然后跟更强的人打交道。</p><p><strong>八、选择</strong></p><p>我们每天做的最多的事情，其实是选择，因此在谈职业生涯的时候不得不提到这个话题。</p><p>我始终认为，在很大的范围内，我们究竟会成为一个什么样的人，决定权在我们自己，每天我们都在做各种各样的选择，我可以不去写这篇文章，去别人的帖子拍拍砖头，也可以写下这些文字，帮助别人的同时也整理自己的思路，我可以多注意下格式让别人易于阅读，也可以写成一堆，我可以就这样发上来，也可以在发以前再看几遍，你可以选择不刮胡子就去面试，也可以选择出门前照照镜子……每天，每一刻我们都在做这样那样的决定，我们可以漫不经心，也可以多花些心思，成千上万的小选择累计起来，就决定了最终我们是个什么样的人。</p><p>从某种意义上来说我们的未来不是别人给的，是我们自己选择的，很多人会说我命苦啊，没得选择阿，如果你认为“去微软还是去IBM”“上清华还是上北大”“当销售副总还是当厂长”这种才叫选择的话，的确你没有什么选择，大多数人都没有什么选择。但每天你都可以选择是否为客户服务更周到一些，是否对同事更耐心一些，是否把工作做得更细致一些，是否把情况了解得更清楚一些，是否把不清楚的问题再弄清楚一些……你也可以选择在是否在痛苦中继续坚持，是否抛弃掉自己的那些负面的想法，是否原谅一个人的错误，是否相信我在这里写下的这些话，是否不要再犯同样的错误……生活每天都在给你选择的机会，每天都在给你改变自己人生的机会，你可以选择赖在地上撒泼打滚，也可以选择咬牙站起来。你永远都有选择。有些选择不是立杆见影的，需要累积，比如农民可以选择自己常常去浇地，也可以选择让老天去浇地，诚然你今天浇水下去苗不见得今天马上就长出来，但常常浇水，大部分苗终究会长出来的，如果你不浇，收成一定很糟糕。</p><p>每天生活都在给你机会，他不会给你一叠现金也不会拱手送你个好工作，但实际上，他还是在给你机会。我的家庭是一个普通的家庭，没有任何了不起的社会关系，我的父亲在大学毕业以后就被分配到了边疆，那个小县城只有一条马路，他们那一代人其实比我们更有理由抱怨，他们什么也没得到，年轻的时候那<em>个_ 年</em>代，书都没得读，支援边疆插队落户，等到老了，却要给年轻人机会了。他有足够的理由象成千上万那样的青年一样坐在那里抱怨生不逢时，怨气冲天。然而在分配到边疆的十年之后，国家恢复招研究生，他考回了原来的学校。研究生毕业，他被分配到了安徽一家小单位里，又是3年以后，国家第一届招收博士生，他又考回了原来的学校，成为中国第一代博士，那时的他比现在的我年纪还大。生活并没有放弃他，他也没有放弃生活。10年的等待，他做了他自己的选择，他没有放弃，他没有破罐子破摔，所以时机到来的时候，他改变了自己的人生。你最终会成为什么样的人，就决定在你的每个小小的选择之间。</p><p>你选择相信什么？你选择和谁交朋友？你选择做什么？你选择怎么做？……我们面临太多的选择，而这些选择当中，意识形态层面的选择又远比客观条件的选择来得重要得多，比如选择做什么产品其实并不那么重要，而选择怎么做才重要。选择用什么人并不重要，而选择怎么带这些人才重要。大多数时候选择客观条件并不要紧，大多数关于客观条件的选择并没有对错之分，要紧的是选择怎么做。一个大学生毕业了，他要去微软也好，他要卖猪肉也好，他要创业也好，他要做游戏代练也好，只要不犯法，不害人，都没有什么关系，要紧的是，选择了以后，怎么把事情做好。</p><p>除了这些，你还可以选择时间和环境，比如，你可以选择把这辈子最大的困难放在最有体力最有精力的时候，也可以走一步看一步，等到了40岁再说，只是到了40多岁，那正是一辈子最脆弱的时候，上有老下有小，如果在那个时候碰上了职业危机，实在是一件很苦恼的事情。与其如此不如在20多岁30多岁的时候吃点苦，好让自己脆弱的时候活得从容一些。你可以选择在温室里成长，也可以选择到野外磨砺，你可以选择在办公室吹冷气的工作，也可以选择40度的酷热下，去见你的客户，只是，这一切最终会累积起来，引导你到你应得的未来。</p><p>我不敢说所有的事情你都有得选择，但是绝大部分事情你有选择，只是往往你不把这当作一种选择。认真对待每一次选择，才会有比较好的未来。</p><p><strong>九、选择职业</strong> 职业的选择，总的来说，无非就是销售、市场、客服、物流、行政、人事、财务、技术、管理几个大类，有个有趣的现象就是，500强的CEO当中最多的是销售出身，第二多的人是财务出身，这两者加起来大概超过95％。现代IT行业也有技术出身成为老板的，但实际上，后来他们还是从事了很多销售和市场的工作，并且表现出色，公司才获得了成功，完全靠技术能力成为公司老板的，几乎没有。这是有原因的，因为销售就是一门跟人打交道的学问，而管理其实也是跟人打交道的学问，这两者之中有很多相通的东西，他们的共同目标就是“让别人去做某件特定的事情。”而财务则是从数字的层面了解生意的本质，从宏观上看待生意的本质，对于一个生意是否挣钱，是否可以正常运作有着最深刻的认识。</p><p>公司小的时候是销售主导公司，而公司大的时候是财务主导公司，销售的局限性在于只看人情不看数字，财务的局限性在于只看数字不看人情。公司初期，运营成本低，有订单就活得下去，跟客户也没有什么谈判的条件，别人肯给生意做已经谢天谢地了，这个时候订单压倒一切，客户的要求压倒一切，所以当然要顾人情。公司大了以后，一切都要规范化，免得因为不规范引起一些不必要的风险，同时运营成本也变高，必须提高利润率，把有限的资金放到最有产出的地方。对于上市公司来说，股东才不管你客户是不是最近出国，最近是不是那个省又在搞严打，到了时候就要把业绩拿出来，拿不出来就抛股票，这个时候就是数字压倒一切。</p><p>前两天听到有人说一句话觉得很有道理，开始的时候我们想“能做什么？”，等到公司做大了有规模了，我们想“不能做什么。”很多人在工作中觉得为什么领导这么保守，这也不行那也不行，错过很多机会。很多时候是因为，你还年轻，你想的是“能做什么”，而作为公司领导要考虑的方面很多，他比较关心“不能做什么”。</p><p>我并非鼓吹大家都去做销售或者财务，究竟选择什么样的职业，和你究竟要选择什么样的人生有关系，有些人就喜欢下班按时回家，看看书听听音乐，那也挺好，但就不适合找个销售的工作了，否则会是折磨自己。有些人就喜欢出风头，喜欢成为一群人的中心，如果选择做财务工作，大概也干不久，因为一般老板不喜欢财务太积极，也不喜欢财务话太多。先想好自己要过怎样的人生，再决定要找什么样的职业。有很多的不快乐，其实是源自不满足，而不满足，很多时候是源自于心不定，而心不定则是因为不清楚究竟自己要什么，不清楚要什么的结果就是什么都想要，结果什么都没得到。 我想，我们还是因为生活而工作，不是因为工作而生活，生活是最要紧的，工作只是生活中的一部分。我总是觉得生活的各方方面都是相互影响的，如果生活本身一团乱麻，工作也不会顺利。所以要有娱乐、要有社交、要锻炼身体，要有和睦的家庭……最要紧的，要开心，我的两个销售找我聊天，一肚子苦水，我问他们， 2年以前，你什么都没有，工资不高，没有客户关系，没有业绩，处于被开的边缘，现在的你比那时条件好了很多，为什么现在却更加不开心了？如果你做得越好越不开心，那你为什么还要工作？首先的首先，人还是要让自己高兴起来，让自己心态好起来，这种发自内心的改变会让你更有耐心，更有信心，更有气质，更能包容……否则，看看镜子里的你，你满意么？</p><p>有人会说，你说得容易，我每天加班，不加班老板就会把我炒掉，每天累得要死，哪有时间娱乐、社交、锻炼？那是人们把目标设定太高的缘故，如果你还在动不动就会被老板炒掉的边缘，那么你当然不能设立太高的目标，难道你还想每天去打高尔夫？你没时间去健身房锻炼身体，但是上下班的时候多走几步可以吧，有楼梯的时候走走楼梯不走电梯可以吧？办公的间隙扭扭脖子拉拉肩膀做做fu<strong>wo</strong>撑可以吧？谁规定锻炼就一定要拿出每天2个小时去健身房？你没时间社交，每月参加郊游一次可以吧，周末去参加个什么音乐班，绘画班之类的可以吧，去尝试认识一些同行，和他们找机会交流交流可以吧？开始的时候总是有些难的，但迈出这一步就会向良性循环的方向发展。而每天工作得很苦闷，剩下的时间用来咀嚼苦闷，只会陷入恶性循环，让生活更加糟糕。</p><p>虽然离开惠普仅有十五天，但感觉上惠普已经离我很远。我的心思更多放在规划自己第二阶段的人生，这并非代表我对惠普没有任何眷恋，主要还是想以此驱动自己往前走。</p><p>万科王石登珠穆朗玛峰的体验给我很多启发，虽然在出发时携带大量的物资，但是登顶的过程中，必须不断减轻负荷，最终只有一个氧气瓶和他登上峰顶。登山如此，漫长的人生又何尝不是。 我宣布退休后，接到同事朋友同学的祝贺。大部分人都认为我能够在这样的职位上及年龄选择退休，是一种勇气，也是一种福气。</p><p>还有一部分人怀疑我只是借此机会换个工作，当然还有一些人说我在HP做不下去了，趁此机会离开。 我多年来已经习惯别人对我的说三道四，但对于好友，我还是挺关心大家是否真正理解我的想法，这也是写这篇文章的目的。</p><p>由于受我父亲早逝的影响，我很早就下定决心，要在有生之年实现自己的愿望，我不要像我父亲一样，为家庭生活忙碌一辈子，临终前感伤，懊恼自己有很多没有实现的理想。 一本杂志的文章提到我们在生前就应该思考自己的墓志铭，因为那代表你自己对完美人生的定义，我们应该尽可能在有生之年去实现它。</p><p>我希望我的墓志铭上除了与家人及好友有关的内容外，是这样写着： 1.这个人曾经服务于一家全球最大的IT公司（HP）25年，和她一起经历过数次重大的变革，看着她从以电子仪表为主要的业务变革成全球最大的IT公司。 2.这个人曾经在全球发展最快的国家（中国）工作16年，并担任HP中国区总裁7年，见证及经历过中国改革开放的关键最新突破阶段，与中国一起成长。 3.这个人热爱飞行，曾经是一个有执照的飞行员，累积飞行时数超过X小时，曾经在X个机场起降过。 4.这个人曾经获得管理硕士学位，在领导管理上特别关注中国企业的组织行为及绩效，并且在这个领域上获得中国企业界的认可。</p><p>我费时25年才总结1和2两项成果，我不知还要费时多久才能达成3和4的愿望，特别是第4个愿望需要经历学术的训练，才能将我的经验总结成知识。</p><p>否则我的经验将无法有效影响及传授他人。因此重新进入学校学习，拿一个管理学位是有必要的，更何况这是我一个非常重要的愿望。</p><p>另一方面，我25年的时间都花在运营(operation)的领域，兢兢业业的做好职业人士的工作，它是一份好工作，特别是在HP，这份工作也帮助我建立财务的基础，支持家庭的发展。</p><p>但是我不想终其一生，都陷入在运营的领域，我想象企业家一样，有机会靠一些点子(ideas)赚钱，虽然风险很高，但是值得一试，即使失败，也不枉走一回，这也是第4个愿望其中的一部份。</p><p>Carly Fiorina曾经对我说过“这个世界上有好想法的人很多，但有能力去实现的人很少”，2007年5月21日在北大演讲时，有人问起那些书对我影响较大，我想对我人生观有影响的其中一本书叫“TriggerPoint”，它的主要观点是：<strong>人生最需要的不是规划，而是在适当的时机掌握机会，采取行动。</strong></p><p>我这些愿望在我心中已经酝酿一段很长的时间，开始的时候，也许一年想个一两次，过了也就忘掉，但逐渐的，这个心中的声音，愈来愈大，出现的频率也愈来愈高，当它几乎每一个星期都会来与我对话时，我知道时机已经成熟。</p><p>但和任何人一样，要丢掉自己现在所拥有的，所熟悉的环境及稳定的收入，转到一条自己未曾经历过，存在未知风险的道路，需要绝大的勇气，家人的支持和好友的鼓励。有舍才有得，真是知易行难，我很高兴自己终于跨出了第一步。</p><p>我要感谢HP的EER提前退休优惠政策，它是其中一个关键的TriggerPoints,另一个关键因素是在去年五六月发生的事。</p><p>当时我家老大从大学毕业，老二从高中毕业，在他们继续工作及求学前，这是一个黄金时段，让我们全家可以相聚一段较长的时间，我为此很早就计划休一个长假，带着他们到各地游玩。</p><p>但这个计划因为工作上一件重要的事情（Mark Hurd访华）不得不取消。这个事件刺激了我必须严肃的去对待那心中的声音，我会不会继续不断的错失很多关键的机会?</p><p>我已经年过50，我会不会走向和我父亲一样的道路？人事部老总Charles跟我说，很多人在所有对他有利的星星都排成一列时，还是错失时机。</p><p>我知道原因，因为割舍及改变对人是多么的困难，我相信大部分的人都有自己人生的理想，但我也相信很多人最终只是把这些理想当成是幻想，然后不断的为自己寻找不能实现的藉口，南非前总统曼德拉曾经说过，“与改变世界相比，改变自己更困难”，真是一针见血。</p><p>什么是快乐及有意义的人生？我相信每一个人的定义都不一样，对我来说，能实现我墓志铭上的内容就是我的定义。</p><p>在中国惠普总裁的位置上固然可以吸引很多的关注及眼球，但是我太太及较亲近的好友，都知道那不是我追求的，那只是为扮演好这个角色必须尽力做好的地方。</p><p>做一个没有名片的人士，虽然只有十多天的时间，但我发现我的脑袋里已经空出很多空间及能量，让我可以静心的为我ChapterII的新生活做细致的调研及规划。</p><p>我预订以两年的时间来完成转轨的准备工作，并且花多点时间与家人共处。这两年的时间我希望拿到飞行执照，拿到管理有关的硕士学位，提升英文的水平，建立新的网络，多认识不同行业的人，保持与大陆的联系。希望两年后，我可以顺利回到大陆去实现我第四个愿望。 毫不意外，在生活上，我发现很多需要调整的地方。</p><p>二十多年来，我生活的步调及节奏，几乎完全被公司及工作所左右，不断涌出的deadline及任务驱动我每天的安排，一旦离开这样的环境，第一个需要调整的就是要依靠自己的自律及意志力来驱动每天的活动，睡觉睡到自然醒的态度绝对不正确，放松自己，不给事情设定目标及时间表，或者对错失时间目标无所谓，也不正确，没有年度，季度，月及周计划也不正确。</p><p>担任高层经理多年，已经养成交待事情的习惯，自己的时间主要花在思考，决 策及追踪项目的进展情况，更多是依靠一个庞大的团队来执行具体的事项及秘书来处理很多协调及繁琐的事情。</p><p>到美国后，很多事情需要打800号电话联系，但这些电话很忙，常让你在waitingline上等待很长的时间，当我在等待时，我可以体会以前秘书工作辛苦的地方，但同时也提醒我自己，在这个阶段要改变态度，培养更大的耐性及自己动手做的能力。</p><p>生活的内容也要做出很大的调整，多出时间锻炼身体，多出时间关注家人，多出时间关注朋友，多出时间体验不同的休闲活动及飞行，一步步的，希望生活逐步调整到我所期望的轨道上，期待这两年的生活既充实又充满乐趣及意义。</p><p>第一个快乐的体验就是准备及参加大儿子的订婚礼，那种全心投入，不需担忧工作数字的感觉真好。同时我也租好了公寓，买好了家具及车子，陪家人在周末的时候到Reno及Lake Tahoe玩了一趟，LakeTahoe我去了多次，但这次的体验有所不同，我从心里欣赏到它的美丽。 但同时我也在加紧调研的工作，为申请大学及飞行学校做准备，这段时间也和在硅谷的朋友及一些风险投资公司见面，了解不同的产业。</p><p>我的人生观是“完美的演出来自充分的准备”，“勇于改变自己，适应不断变化的环境，机会将不断出现”，“快乐及有意义的人生来自于实现自己心中的愿望，而非外在的掌声”。</p><p>我离开时，有两位好朋友送给我两个不同的祝语，Baron的是“多年功过化烟尘”，杨华的是“莫春者，风乎舞雩，咏而归”，它们分别代表了我离开惠普及走向未来的心情。</p><p>我总结人生有三个阶段，一个阶段是为现实找一份工作，一个阶段是为现实，但可以选择一份自己愿意投入的工作，一个阶段是为理想去做一些事情。</p><p>我珍惜我的福气，感激HP及同事、好朋友给我的支持，鼓励及协助，这篇文字化我心声的文章与好友分享。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>莫小安 CentOS7使用firewalld打开关闭防火墙与端口</title>
      <link href="/2018/12/13/mo-xiao-an-centos7-shi-yong-firewalld-da-kai-guan-bi-fang-huo-qiang-yu-duan-kou/"/>
      <url>/2018/12/13/mo-xiao-an-centos7-shi-yong-firewalld-da-kai-guan-bi-fang-huo-qiang-yu-duan-kou/</url>
      
        <content type="html"><![CDATA[<p>1、firewalld的基本使用</p><p>启动： systemctl start firewalld</p><p>关闭： systemctl stop firewalld</p><p>查看状态： systemctl status firewalld</p><p>开机禁用  ： systemctl disable firewalld</p><p>开机启用  ： systemctl enable firewalld</p><p>2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</p><p>启动一个服务：systemctl start firewalld.service 关闭一个服务：systemctl stop firewalld.service 重启一个服务：systemctl restart firewalld.service 显示一个服务的状态：systemctl status firewalld.service 在开机时启用一个服务：systemctl enable firewalld.service 在开机时禁用一个服务：systemctl disable firewalld.service 查看服务是否开机启动：systemctl is-enabled firewalld.service 查看已启动的服务列表：systemctl list-unit-filesgrep enabled 查看启动失败的服务列表：systemctl –failed 3.配置firewalld-cmd</p><p>查看版本： firewall-cmd –version</p><p>查看帮助： firewall-cmd –help</p><p>显示状态： firewall-cmd –state</p><p>查看所有打开的端口： firewall-cmd –zone=public –list-ports</p><p>更新防火墙规则： firewall-cmd –reload</p><p>查看区域信息:  firewall-cmd –get-active-zones</p><p>查看指定接口所属区域： firewall-cmd –get-zone-of-interface=eth0</p><p>拒绝所有包：firewall-cmd –panic-on</p><p>取消拒绝状态： firewall-cmd –panic-off</p><p>查看是否拒绝： firewall-cmd –query-panic</p><p>那怎么开启一个端口呢</p><p>添加</p><p>firewall-cmd --zone=public –add-port=80/tcp –permanent    （–permanent永久生效，没有此参数重启后失效）</p><p>重新载入</p><p>firewall-cmd –reload</p><p>查看</p><p>firewall-cmd –zone= public –query-port=80/tcp</p><p>删除</p><p>firewall-cmd --zone= public –remove-port=80/tcp –permanent</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7.4 修改mariadb数据库最大连接数</title>
      <link href="/2018/12/13/centos7-4-xiu-gai-mariadb-shu-ju-ku-zui-da-lian-jie-shu/"/>
      <url>/2018/12/13/centos7-4-xiu-gai-mariadb-shu-ju-ku-zui-da-lian-jie-shu/</url>
      
        <content type="html"><![CDATA[<p>为什么修改这个？因为我zabbix-server日志报错，提示connection to database ‘zabbix’ failed: [1040] Too many connections错误，mariadb正常。想到应该是mysql最大连接数问题。 <strong>实时查看mariadb数据库连接数命令（Threads）：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@localhost ~]# mysqladmin -uroot -p statusEnter password: Uptime: 1888  Threads: 615  Questions: 211118  Slow queries: 1  Opens: 189  Flush tables: 2  Open tables: 215  Queries per second avg: 111.820<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>1、查看默认最大连接数，默认是151</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@localhost zabbix]# &#x2F;usr&#x2F;bin&#x2F;mysql -u root -pEnter password: Welcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 14872Server version: 5.5.56-MariaDB MariaDB ServerCopyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.MariaDB [(none)]&gt; show variables like &#39;max_connections&#39;;+-----------------+-------+ Variable_name    Value +-----------------+-------+ max_connections  151   +-----------------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2、修改/etc/my.cnf配置文件</strong> 在[mysqld]新添加一行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@localhost zabbix]# vi &#x2F;etc&#x2F;my.cnfmax_connections&#x3D;1000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>重启mariadb服务，并验证最大连接数（没显示我们修改的）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@localhost zabbix]# systemctl restart mariadb.service[root@localhost zabbix]# &#x2F;usr&#x2F;bin&#x2F;mysql -u root -pEnter password: Welcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 446Server version: 5.5.56-MariaDB MariaDB ServerCopyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.MariaDB [(none)]&gt; show variables like &#39;max_connections&#39;;+-----------------+-------+ Variable_name    Value +-----------------+-------+ max_connections  214   +-----------------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3、配置/usr/lib/systemd/system/mariadb.service来调大打开文件数目。</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@localhost zabbix]# vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mariadb.service在[Service]新加这两行：LimitNOFILE&#x3D;10000LimitNPROC&#x3D;10000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>4、重新加载系统服务，并重启mariadb服务</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@localhost zabbix]# systemctl --system daemon-reload[root@localhost zabbix]# systemctl restart mariadb.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>5、重新验证下，是否为1000</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">MariaDB [(none)]&gt; show variables like &#39;max_connections&#39;;ERROR 2006 (HY000): MySQL server has gone awayNo connection. Trying to reconnect...Connection id:    5Current database: *** NONE ***+-----------------+-------+ Variable_name    Value +-----------------+-------+ max_connections  1000  +-----------------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mariadb </tag>
            
            <tag> zabbix </tag>
            
            <tag> 连接数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 定时任务 - Schtasks</title>
      <link href="/2018/12/13/windows-ding-shi-ren-wu-schtasks/"/>
      <url>/2018/12/13/windows-ding-shi-ren-wu-schtasks/</url>
      
        <content type="html"><![CDATA[<h2 id="Schtasks"><a href="#Schtasks" class="headerlink" title="Schtasks"></a>Schtasks</h2><p>安排命令和程序，使其定期运行或在指定时间运行。向计划中添加任务和从中删除任务、根据需要启动和停止任务以及显示和更改计划的任务。 要查看该命令语法，请单击以下命令：</p><ul><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_create">schtasks create</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_change">schtasks change</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_run">schtasks run</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_end">schtasks end</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_delete">schtasks delete</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_query">schtasks query</a></li></ul><h3 id="schtasks-create"><a href="#schtasks-create" class="headerlink" title="schtasks create"></a>schtasks create</h3><p>计划任务。 Schtasks 针对各种计划类型使用不同参数组合。要查看创建任务的组合语法或查看使用特定计划类型创建任务的语法，请单击以下选项之一。</p><ul><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_syntax">组合语法和参数描述</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_minutes">计划任务每 N 分钟运行一次</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_hours">计划任务每 N 小时运行一次</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_days">计划任务每 N 天运行一次</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_weeks">计划任务每 N 周运行一次</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_months">计划任务每 N 月运行一次</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_spec_day">计划任务在周的指定天运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_spec_week">计划任务在月份的指定周运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_spec_date">计划任务在每月的特定日期运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_last_day">计划任务在月份的最后一天运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_once">计划任务运行一次</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_startup">计划任务在每次系统启动时运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_logon">计划任务在用户登录时运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_idle">计划任务在系统空闲时运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_now">计划任务现在运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_diff_perms">计划任务以不同权限运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_sys_perms">计划任务以系统权限运行</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_multi_progs">计划任务运行多个程序</a></li><li>  <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx#BKMK_remote">计划任务在远程计算机上运行</a></li></ul><h4 id="组合语法和参数描述"><a href="#组合语法和参数描述" class="headerlink" title="组合语法和参数描述"></a>组合语法和参数描述</h4><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><p><strong>Schtasks /create /sc</strong> <em>ScheduleType</em> <strong>/tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em> [<strong>/s</strong> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em><em>_Password_]]] [**/ru*</em>{[<em>Domain</em><em>*\<strong>]<em>User</em> <strong>System</strong>}] [</strong>/rp</em>* _Password_] [<strong>/mo</strong> _Modifier_] [<strong>/d</strong> _Day_[<strong>,</strong><em>Day</em>…] *] [<strong>/m</strong>_Month_[<strong>,</strong><em>Month</em>…]][<strong>/i</strong> _IdleTime_] [<strong>/st</strong> _StartTime_] [<strong>/ri</strong> _Interval_] [{<strong>/et</strong> <em>EndTime</em>  <strong>/du</strong> <em>Duration</em>} [<strong>/k</strong>]] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/Z</strong>] [<strong>/F</strong>]</p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><p><strong>/sc <em>ScheduleType</em></strong></p><p>指定计划类型。有效值为 MINUTE、HOURLY、DAILY、WEEKLY、MONTHLY、ONCE、ONSTART、ONLOGON、ONIDLE。</p><p>计划类型</p><p>描述</p><p><strong>MINUTE、HOURLY、DAILY、WEEKLY、MONTHLY</strong></p><p>指定计划的时间单位。</p><p><strong>ONCE</strong></p><p>任务在指定的日期和时间运行一次。</p><p><strong>ONSTART</strong></p><p>任务在每次系统启动时运行。可以指定启动的日期，或下一次系统启动时运行任务。</p><p><strong>ONLOGON</strong></p><p>每当用户（任意用户）登录时，任务就运行。可以指定日期，或在下次用户登录时运行任务。</p><p><strong>ONIDLE</strong></p><p>只要系统空闲指定的时期，任务就运行。可以指定日期，或在下次系统空闲时运行任务。</p><p><strong>/tn <em>TaskName</em></strong></p><p>指定任务的名称。系统上的每项任务都必须具有一个唯一的名称。名称必须符合文件名称规则，并且长度不得超过 238 个字符。使用引号括起包含空格的名称。</p><p><strong>/tr <em>TaskRun</em></strong></p><p>指定任务运行的程序或命令。键入可执行文件、脚本文件或批处理文件的完全合格的路径和文件名。路径名称的长度不得超过 262 个字符。如果忽略该路径，SchTasks 将假定文件在_Systemroot_\System32 目录下。</p><p><strong>/s <em>Computer</em></strong></p><p>在指定的远程计算机上计划任务。键入远程计算机的名称或 IP 地址（带有或不带有反斜杠）。默认值是本地计算机。只有使用 <strong>/s</strong> 时，**/u** 和**/p** 参数才有效。</p><p><strong>/u [_Domain_\]<em>User</em></strong></p><p>使用指定用户帐户的权限运行该命令。默认值为本地计算机上当前用户的权限。只有在远程计算机 (<strong>/s</strong>) 上计划任务时，**/u<strong>和</strong>/p** 参数才有效。 指定帐户的权限用来计划任务和运行任务。要使用其他用户的权限运行任务，请使用 <strong>/ru</strong> 参数。用户帐户必须是远程计算机上 Administrators 组的成员。另外，本地计算机必须与远程计算机处于同一个域中，或者必须处于远程计算机域信任的域中。</p><p><strong>/p <em>Password</em></strong></p><p>提供在 <strong>/u</strong> 参数中指定的用户帐户的密码。如果使用 <strong>/u</strong> 参数，但忽略 <strong>/p</strong> 参数或密码参数，Schtasks 将提示您输入密码，并且不显示键入的文本。 只有在远程计算机 (<strong>/s</strong>) 上计划任务时，**/u** 和**/p** 参数才有效。</p><p><strong>/ru {[_Domain_\]<em>User</em> System}</strong></p><p>使用指定用户帐户的权限运行任务。默认情况下，使用本地计算机当前用户的权限，或者使用 <strong>/u</strong> 参数指定用户的权限（如果包含的话）运行任务。在本地或远程计算机上计划任务时，**/ru** 参数才有效。</p><p>值</p><p>描述</p><p>[<em>Domain</em>**\**]<em>User</em></p><p>指定候选用户帐户。</p><p><strong>System</strong> 或 <strong>“”</strong></p><p>指定 Local System 帐户，这是一种操作系统和系统服务使用的具有高度特权的帐户。</p><p><strong>/rp <em>Password</em></strong></p><p>提供在 <strong>/ru</strong> [<em>Domain</em><em><em>\*<em>]<em>User</em> 参数中指定的用户帐户的密码。如果在指定用户帐户的时候忽略了这个参数，SchTasks.exe 会提示您输入密码，而且不显示键入的文本。 不要将</em></em>/rp</em>* 参数用于使用系统帐户 (<strong>/ru System</strong>) 的权限运行的任务。系统帐户没有密码，而 SchTasks.exe 也不提示输入密码。</p><p><strong>/mo <em>Modifier</em></strong></p><p>指定任务在其计划类型内的运行频率。此参数对于 MINUTE、HOURLY、DAILY、WEEKLY 或 MONTHLY 有效，但是可选的。默认值为 1。</p><p>计划类型</p><p>修饰符值</p><p>描述</p><p>MINUTE</p><p><strong>1</strong> - <strong>1439</strong></p><p>任务每 <em>N</em> 分钟运行一次。</p><p>HOURLY</p><p><strong>1</strong> - <strong>23</strong></p><p>任务每 <em>N</em> 小时运行一次。</p><p>DAILY</p><p><strong>1</strong> - <strong>365</strong></p><p>任务每 <em>N</em> 天运行一次。</p><p>WEEKLY</p><p><strong>1</strong> - <strong>52</strong></p><p>任务每 <em>N</em> 周运行一次。</p><p>ONCE</p><p>没有修饰符。</p><p>任务运行一次。</p><p>ONSTART</p><p>没有修饰符。</p><p>任务在启动时运行。</p><p>ONLOGON</p><p>没有修饰符。</p><p><strong>/u</strong> 参数指定的用户登录时，运行任务。</p><p>ONIDLE</p><p>没有修饰符。</p><p>系统闲置 <strong>/i</strong> 参数（需要与 ONIDLE 一起使用）指定的分钟数之后运行任务。</p><p>MONTHLY</p><p><strong>1</strong> - <strong>12</strong></p><p>任务每 <em>N</em> 月运行一次。</p><p>MONTHLY</p><p><strong>LASTDAY</strong></p><p>任务在月份的最后一天运行。</p><p>MONTHLY</p><p><strong>FIRST</strong>、<strong>SECOND</strong>、<strong>THIRD</strong>、<strong>FOURTH</strong>、<strong>LAST</strong></p><p>与 <strong>/d</strong><em>Day</em> 参数一起使用，并在特定的周和天运行任务。例如，在月份的第三个周三。</p><p><strong>/d _Day_[,<em>Day</em>…] *</strong></p><p>指定周或月的一天（或几天）。只对 WEEKLY 或 MONTHLY 计划有效。</p><p>计划类型</p><p>修饰符</p><p>天值 (/d)</p><p>描述</p><p>WEEKLY</p><p>1 - 52</p><p><strong>MON</strong> - <strong>SUN</strong>[<strong>,MON</strong> - <strong>SUN</strong>…] <strong>*</strong></p><p>可选项。MON 是默认值。通配符值 (*) 指每天。</p><p>MONTHLY</p><p>FIRST、SECOND、THIRD、FOURTH、LAST</p><p><strong>MON</strong> - <strong>SUN</strong></p><p>对于特定周计划是必需的。</p><p>MONTHLY</p><p>无或 {1 - 12}</p><p><strong>1</strong> - <strong>31</strong></p><p>仅在没有修饰符 (<strong>/mo</strong>) 参数（特定日期计划）的情况下或 <strong>/mo</strong> 为 1 - 12（“每_N_ 月”计划）时有效并且可选。默认值是 1 （月份的第一天）。</p><p><strong>/m _Month_[,<em>Month</em>…]</strong></p><p>指定计划任务应在一年的某月或数月运行。有效值为 JAN - DEC。**/m** 参数仅对 MONTHLY 计划有效。在使用 LASTDAY 修饰符时，这个参数是必需的。</p><p><strong>/i <em>IdleTime</em></strong></p><p>指定任务启动之前计算机空闲多少分钟。有效值是从 1 到 999 的整数。此参数只对 ONIDLE 计划有效，并且是必需的。</p><p><strong>/st <em>StartTime</em></strong></p><p>指定任务在一天的什么时间开始（每次开始时间），格式为 <em>HH</em><strong>:</strong><em>MM</em> 24 小时格式。默认值为本地计算机的当前时间。**/st** 参数只对 MINUTE、HOURLY、DAILY、WEEKLY、MONTHLY 和 ONCE 计划有效。此参数对于 ONCE 计划是必需的。</p><p><strong>/ri <em>Interval</em></strong></p><p>指定重复的时间间隔（以分钟计）。此参数不适用于以下计划类型：MINUTE、HOURLY、ONSTART、ONLOGON、ONIDLE。有效范围为 1 到 599940 分钟（599940 分钟 = 9999 小时）。如果指定了 /ET 或 /DU，则重复间隔默认为 10 分钟。</p><p><strong>/et <em>EndTime</em></strong></p><p>指定“分钟”或“小时”任务计划在一天的什么时间结束，格式为 <em>HH</em><strong>:</strong><em>MM</em> 24 小时格式。指定的结束时间之后，Schtasks 不重新启动任务，直到启动时间再次到来。默认情况下，任务计划没有结束时间。该参数是可选的，并且仅对“分钟”或“小时”计划有效。 要查看示例，请参阅：</p><ul><li>  “计划任务每 <em>N</em> 分钟运行一次”部分中的“计划任务在非工作时间内每 100 分钟运行一次”。</li></ul><p><strong>/du <em>Duration</em></strong></p><p>指定“分钟”或“小时”计划的最大时间长度，格式为 <em>HHHH</em><strong>:</strong><em>MM</em> 24 小时格式。指定的时间过去之后，Schtasks 不重新启动任务，直到启动时间再次到来。默认情况下，任务计划没有最大持续时间。该参数是可选的，并且仅对“分钟”或“小时”计划有效。 要查看示例，请参阅：</p><ul><li>  “计划任务每 <em>N</em> 小时运行一次”部分中的“计划每 3 小时运行一次持续时间为 10 小时的任务”。</li></ul><p><strong>/k</strong></p><p>在 <strong>/et</strong> 或 <strong>/du</strong> 指定的时间停止任务运行的程序。如果没有 <strong>/k</strong>，Schtasks 在到达**/et** 或 <strong>/du</strong> 指定的时间之后不再启动程序，但它不会停止仍在运行的程序。该参数是可选的，并且仅对“分钟”或“小时”计划有效。 要查看示例，请参阅：</p><ul><li>  “<strong>计划任务每 <em>N</em> 分钟运行一次</strong>”部分中的“计划任务在非工作时间内每 100 分钟运行一次”。</li></ul><p><strong>/sd <em>StartDate</em></strong></p><p>指定任务计划开始的日期。默认值为本地计算机上的当前日期。**/sd** 参数对于所有计划类型均有效，并且是可选的。 <em>StartDate</em> 参数的格式随着“控制面板”的“区域和语言选项”中为本地计算机选择的区域设置而变化。每个区域设置只有一种有效的格式。下表列出了有效的日期格式。使用与本地计算机“控制面板”的“区域和语言选项”中为“短日期”所选格式最为相似的格式。</p><p><em>MM</em><strong>/</strong><em>DD</em><strong>/</strong><em>YYYY</em></p><p>用于以月开头的格式，例如英语（美国）和西班牙语（巴拿马）。</p><p><em>DD</em><strong>/</strong><em>MM</em><strong>/</strong><em>YYYY</em></p><p>用于以日开头的格式，例如保加利亚语和荷兰语（荷兰）。</p><p><em>YYYY</em><strong>/</strong><em>MM</em><strong>/</strong><em>DD</em></p><p>用于以年开头的格式，例如瑞典语和法语（加拿大）。</p><p><strong>/ed <em>EndDate</em></strong></p><p>指定计划结束的日期。此参数是可选的。它对于 ONCE、ONSTART、ONLOGON 或 ONIDLE 计划无效。默认情况下，计划没有结束日期。 <em>EndDate</em> 参数的格式随着“控制面板”的“区域和语言选项”中为本地计算机选择的区域设置而变化。每个区域设置只有一种有效的格式。下表列出了有效的日期格式。使用与在本地计算机控制面板的“区域和语言选项”中为“短日期”选择的格式最为相似的格式。</p><p><em>MM</em><strong>/</strong><em>DD</em><strong>/</strong><em>YYYY</em></p><p>用于以月开头的格式，例如英语（美国）和西班牙语（巴拿马）。</p><p><em>DD</em><strong>/</strong><em>MM</em><strong>/</strong><em>YYYY</em></p><p>用于以日开头的格式，例如保加利亚语和荷兰语（荷兰）。</p><p><em>YYYY</em><strong>/</strong><em>MM</em><strong>/</strong><em>DD</em></p><p>用于以年开头的格式，例如瑞典语和法语（加拿大）。</p><p><strong>/it</strong></p><p>指定只有在“运行方式”用户（运行任务的用户帐户）登录到计算机的情况下才运行任务。此参数不影响使用系统权限运行的任务。 默认情况下，在计划任务时或使用 <strong>/u</strong> 参数指定帐户（如果使用该参数）时，“运行方式”用户将是本地计算机的当前用户。但是，如果该命令包含 <strong>/ru</strong> 参数，“运行方式”用户则是由**/ru** 参数指定的帐户。例如，请参阅：</p><ul><li>  “计划任务每 <em>N</em> 天运行一次”部分中的“计划在我登录后每 70 天运行一次任务”。</li><li>  “计划使用不同权限运行的任务”部分中的“只在特定用户登录时运行任务”。</li></ul><p><strong>/Z</strong></p><p>指定在任务计划完成时删除任务。</p><p><strong>/F</strong></p><p>指定如果指定任务已经存在，就创建任务并取消警告。</p><p><strong>/?</strong></p><p>在命令提示符下显示帮助。</p><h4 id="计划任务每-N-分钟运行一次"><a href="#计划任务每-N-分钟运行一次" class="headerlink" title="计划任务每 N 分钟运行一次"></a>计划任务每 N 分钟运行一次</h4><h5 id="分钟计划语法"><a href="#分钟计划语法" class="headerlink" title="分钟计划语法"></a>分钟计划语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc minute</strong> [<strong>/mo</strong> {1 - 1439}] [<strong>/st</strong> <em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [{<strong>/et</strong><em>HH</em><strong>:</strong><em>MM</em> <strong>/du</strong> <em>HHHH</em><strong>:</strong><em>MM</em>} [<strong>/k</strong>]] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]_User_[</strong>/p</em>*_Password_]]]</p><h5 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h5><p>在一个分钟计划中，**/sc minute** 参数是必需的。**/mo<strong>（修饰符）参数是可选的，它指定了每次运行任务之间间隔的分钟数。</strong>/mo** 的默认值为 1（每分钟）。**/et<strong>（结束时间）和</strong>/du**（持续时间）参数是可选的，并且可与或不与 <strong>/k</strong>（结束任务）参数一起使用。</p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务每-20-分钟运行一次"><a href="#计划任务每-20-分钟运行一次" class="headerlink" title="计划任务每 20 分钟运行一次"></a>计划任务每 20 分钟运行一次</h5><p>下面的命令计划安全脚本 Sec.vbs 每 20 分钟运行一次。该命令使用 <strong>/sc</strong> 参数指定分钟计划，使用 <strong>/mo</strong> 参数指定时间间隔为 20 分钟。 由于该命令没有包含开始日期或时间，因此任务在命令完成 20 分钟后启动，此后在系统运行时每 20 分钟运行一次。请注意，安全脚本源文件位于远程计算机上，但任务在本地计算机上计划并执行。 <strong>schtasks /create /sc minute /mo 20 /tn “Security Script” /tr \\central\data\scripts\sec.vbs</strong></p><h5 id="计划任务在非工作时间内每-100-分钟运行一次"><a href="#计划任务在非工作时间内每-100-分钟运行一次" class="headerlink" title="计划任务在非工作时间内每 100 分钟运行一次"></a>计划任务在非工作时间内每 100 分钟运行一次</h5><p>下面的命令计划安全脚本 Sec.vbs 在本地计算机上每天下午 5:00 和次日上午 7:59 之间每 100 分钟运行一次。该命令使用 <strong>/sc</strong> 参数指定分钟计划，使用**/mo** 参数指定时间间隔为 100 分钟。它使用 <strong>/st</strong> 和 <strong>/et</strong> 参数指定每天计划的开始时间和结束时间。它还使用**/k** 参数停止在上午 7:59 仍在运行的脚本。如果没有 <strong>/k</strong>，Schtasks 就不会在上午 7:59 之后启动脚本，但是，如果在上午 6:20 启动的实例仍在运行，Schtasks 不会停止它。 <strong>schtasks /create /tn “Security Script” /tr sec.vbs /sc minute /mo 100 /st 17:00 /et 08:00 /k</strong></p><h4 id="计划任务每-N-小时运行一次"><a href="#计划任务每-N-小时运行一次" class="headerlink" title="计划任务每 N 小时运行一次"></a>计划任务每 N 小时运行一次</h4><h5 id="小时计划语法"><a href="#小时计划语法" class="headerlink" title="小时计划语法"></a>小时计划语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc hourly</strong> [<strong>/mo</strong> {1 - 23}] [<strong>/st</strong> <em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [{<strong>/et</strong><em>HH</em><strong>:</strong><em>MM</em> <strong>/du</strong> <em>HHHH</em><strong>:</strong><em>MM</em>} [<strong>/k</strong>]] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]_User_[</strong>/p</em>*_Password_]]]</p><h5 id="备注-1"><a href="#备注-1" class="headerlink" title="备注"></a>备注</h5><p>在一个小时计划中，**/sc hourly** 参数是必需的。**/mo<strong>（修饰符）参数是可选的，它指定了每次运行任务之间间隔的小时数。</strong>/mo** 的默认值为 1（每小时）。**/k<strong>（结束任务）参数是可选的，并且可与</strong>/et**（指定时间结束）或 <strong>/du</strong>（指定时间间隔后结束）一起使用。</p><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务每五小时运行一次"><a href="#计划任务每五小时运行一次" class="headerlink" title="计划任务每五小时运行一次"></a>计划任务每五小时运行一次</h5><p>下面的命令计划 MyApp 程序从 2002 年 3 月的第一天起每五小时运行一次。它使用 <strong>/mo</strong> 参数来指定间隔时间，使用**/sd**参数来指定开始日期。由于该命令没有指定起始时间，因此当前时间作为起始时间。 由于本地计算机设置为使用“区域和语言选项”中的“英语（津巴布韦）”选项，所以开始日期的格式为 MM/DD/YYYY (03/01/2002)。 <strong>schtasks /create /sc hourly /mo 5 /sd 03/01/2002 /tn “My App” /tr c:\apps\myapp.exe</strong></p><h5 id="计划任务在每小时后五分钟运行一次"><a href="#计划任务在每小时后五分钟运行一次" class="headerlink" title="计划任务在每小时后五分钟运行一次"></a>计划任务在每小时后五分钟运行一次</h5><p>下面的命令将计划 MyApp 程序从午夜过后五分钟起每小时运行一次。因为忽略了 <strong>/mo</strong> 参数，所以命令使用小时计划的默认值，即每 (1) 小时。如果该命令在上午 12:05 之后运行，则程序将在第二天才会运行。 <strong>schtasks /create /sc hourly /st 00:05 /tn “My App” /tr c:\apps\myapp.exe</strong></p><h5 id="计划任务每-3-小时运行一次，持续时间为-10-小时"><a href="#计划任务每-3-小时运行一次，持续时间为-10-小时" class="headerlink" title="计划任务每 3 小时运行一次，持续时间为 10 小时"></a>计划任务每 3 小时运行一次，持续时间为 10 小时</h5><p>以下命令计划 MyApp 程序每 3 小时运行一次，持续时间为 10 小时。 该命令使用 <strong>/sc</strong> 参数指定小时计划，使用 <strong>/mo</strong> 参数指定时间间隔为 3 小时。它使用**/st** 参数在午夜开始计划，并使用 <strong>/du</strong>参数在 10 小时之后结束计划。由于程序仅运行几分钟，因此无需**/k** 参数，该参数停止在持续时间到期时仍然运行的程序。 <strong>schtasks /create /tn “My App” /tr myapp.exe /sc hourly /mo 3 /st 00:00 /du 0010:00</strong> 在此示例中，任务在上午 12:00、上午 3:00、上午 6:00 以及上午 9:00 运行。由于持续时间为 10 小时，任务不会在下午 12:00 运行，而是在第二天上午 12:00 再次开始。</p><h4 id="计划任务每-N-天运行一次"><a href="#计划任务每-N-天运行一次" class="headerlink" title="计划任务每 N 天运行一次"></a>计划任务每 N 天运行一次</h4><h5 id="每日计划语法"><a href="#每日计划语法" class="headerlink" title="每日计划语法"></a>每日计划语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc daily</strong> [<strong>/mo</strong> {1 - 365}] [<strong>/st</strong> <em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong>{[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-2"><a href="#备注-2" class="headerlink" title="备注"></a>备注</h5><p>在每日计划中，**/sc daily** 参数是必需的。**/mo<strong>（修饰符）参数是可选的，它指定了每次运行任务之间间隔的天数。</strong>/mo** 的默认值为 1（每天）。</p><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务每天运行一次"><a href="#计划任务每天运行一次" class="headerlink" title="计划任务每天运行一次"></a>计划任务每天运行一次</h5><p>下面的示例计划 MyApp 程序在每天的上午 8:00 运行一次，直到 2002 年 12 月 31 日结束。由于它忽略了 <strong>/mo</strong> 参数，因此使用默认间隔 1 来每天运行命令。 在此示例中，由于本地计算机系统在“控制面板”的“区域和语言选项”中设置为“英语（英国）”，因此结束日期的格式为 DD/MM/YYYY (31/12/2002)。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc daily /st 08:00 /ed 31/12/2002</strong></p><h5 id="计划任务每-12-天运行一次"><a href="#计划任务每-12-天运行一次" class="headerlink" title="计划任务每 12 天运行一次"></a>计划任务每 12 天运行一次</h5><p>以下示例计划 MyApp 程序从 2002 年 12 月 31 日开始，每隔 12 天的下午 1:00 (13:00) 运行一次。该命令使用 <strong>/mo</strong> 参数指定间隔时间为两 (2) 天，而 <strong>/sd</strong> 和 <strong>/st</strong> 参数指定日期和时间。 在此示例中，由于系统在“控制面板”的“区域和语言选项”中设置为“英语（津巴布韦）”，因此结束日期的格式为 MM/DD/YYYY (12/31/2002)。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc daily /mo 12 /sd 12/31/2002 /st 13:00</strong></p><h5 id="计划任务在我登录后每-70-天运行一次"><a href="#计划任务在我登录后每-70-天运行一次" class="headerlink" title="计划任务在我登录后每 70 天运行一次"></a>计划任务在我登录后每 70 天运行一次</h5><p>下面的命令计划安全脚本 Sec.vbs 每 70 天运行一次。该命令使用 <strong>/mo</strong> 参数来指定 70 天间隔时间。它还使用 <strong>/it</strong> 参数指定只有在其帐户下运行任务的用户登录到计算机时才运行任务。由于任务将使用我的用户帐户权限运行，因而任务仅在我登录时才运行。 <strong>schtasks /create /tn “Security Script” /tr sec.vbs /sc daily /mo 70 /it</strong> <strong>注意</strong></p><ul><li>  要使用仅交互 (<strong>/it</strong>) 属性标识任务，请使用详细查询 (<strong>/query /v</strong>)。在一个带有**/it** 的任务的详细查询显示中，<strong>Logon Mode</strong> 字段的值为<strong>Interactive only</strong>。</li></ul><h4 id="计划任务每-N-周运行一次"><a href="#计划任务每-N-周运行一次" class="headerlink" title="计划任务每 N 周运行一次"></a>计划任务每 N 周运行一次</h4><h5 id="周计划语法"><a href="#周计划语法" class="headerlink" title="周计划语法"></a>周计划语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc weekly</strong> [<strong>/mo</strong> {1 - 52}] [<strong>/d</strong> {_MON - SUN_[,MON - SUN…] *}] [<strong>/st</strong><em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]_User_[</strong>/p</em>*_Password_]]]</p><h5 id="备注-3"><a href="#备注-3" class="headerlink" title="备注"></a>备注</h5><p>在周计划中，**/sc weekly** 参数是必需的。**/mo<strong>（修饰符）参数是可选的，它指定了每次运行任务之间间隔的周数。</strong>/mo** 的默认值为 1（每周）。 周计划也拥有一个可选的 <strong>/d</strong> 参数，用于计划任务在一周的指定天或所有天 (*) 运行。默认值为 MON（星期一）。每天 (*) 选项相当于计划每日任务。</p><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务每六周运行一次"><a href="#计划任务每六周运行一次" class="headerlink" title="计划任务每六周运行一次"></a>计划任务每六周运行一次</h5><p>下面的命令计划 MyApp 程序在远程计算机上每六周运行一次。该命令使用 <strong>/mo</strong> 参数来指定间隔。由于该命令忽略了 <strong>/d</strong>参数，因此任务就在星期一运行。 该命令也使用 <strong>/s</strong> 参数指定远程计算机，并使用 <strong>/u</strong> 参数，以用户 Adiminsitrator 帐户的权限运行该命令。因为忽略了**/p** 参数，所以 SchTasks.exe 会提示用户输入 Administrator 帐户密码。 另外，因为命令是远程运行的，所以命令中所有的路径，包括到 MyApp.exe 的路径，都是指远程计算机上的路径。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc weekly /mo 6 /s Server16 /u Admin01</strong></p><h5 id="计划任务在隔周的周五运行"><a href="#计划任务在隔周的周五运行" class="headerlink" title="计划任务在隔周的周五运行"></a>计划任务在隔周的周五运行</h5><p>下面的命令计划任务在隔周的周五运行。它使用 <strong>/mo</strong> 参数来指定两周的间隔，使用 <strong>/d</strong> 参数来指定是一周内的哪一天。要计划任务在每个周五运行，要忽略**/mo** 参数或将其设置为 1。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc weekly /mo 2 /d FRI</strong></p><h4 id="计划任务每-N-月运行一次"><a href="#计划任务每-N-月运行一次" class="headerlink" title="计划任务每 N 月运行一次"></a>计划任务每 N 月运行一次</h4><h5 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc monthly</strong> [<strong>/mo</strong> {1 - 12}] [<strong>/d</strong> {<strong>1</strong> -<strong>31</strong>}] [<strong>/st</strong> <em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong>_StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-4"><a href="#备注-4" class="headerlink" title="备注"></a>备注</h5><p>在此计划类型中，**/sc monthly** 参数是必需的。**/mo<strong>（修饰符）参数指定每次运行任务之间的月份数，它是可选的，默认值为 1（每月）。此计划类型也拥有一个可选的</strong>/d** 参数，用于计划任务在月份的指定日期运行。默认值是 1 （月份的第一天）。</p><h5 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在每月的第一天运行"><a href="#计划任务在每月的第一天运行" class="headerlink" title="计划任务在每月的第一天运行"></a>计划任务在每月的第一天运行</h5><p>下面的命令计划 MyApp 程序在每月的第一天运行。由于值 1 是 <strong>/mo</strong>（修饰符）参数和 <strong>/d</strong>（天）参数的默认值，因此该命令中省略了这两个参数。 <strong>schtasks /create /tn “My App” /tr myapp.exe /sc monthly</strong></p><h5 id="计划任务每三个月运行一次"><a href="#计划任务每三个月运行一次" class="headerlink" title="计划任务每三个月运行一次"></a>计划任务每三个月运行一次</h5><p>下面的命令计划 MyApp 程序每三个月运行一次。它使用 <strong>/mo</strong> 参数来指定间隔。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo 3</strong></p><h5 id="计划任务在每隔一个月的第-21-天的午夜运行"><a href="#计划任务在每隔一个月的第-21-天的午夜运行" class="headerlink" title="计划任务在每隔一个月的第 21 天的午夜运行"></a>计划任务在每隔一个月的第 21 天的午夜运行</h5><p>以下命令计划 MyApp 程序在每隔一个月的第 21 天的午夜运行。该命令指定此任务应运行一年，从 2002 年 7 月 2 日到 2003 年 6 月 30 日。 该命令使用 <strong>/mo</strong> 参数指定月时间间隔（每两个月），**/d** 参数指定日期，而 <strong>/st</strong> 指定时间。它还使用 <strong>/sd</strong> 和 <strong>/ed</strong> 参数分别指定开始日期和结束日期。由于本地计算机在控制面板的“区域和语言选项”中设置为“英语（南非）”选项，因此以本地格式 YYYY/MM/DD 指定日期。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo 2 /d 21 /st 00:00 /sd 2002/07/01 /ed 2003/06/30</strong></p><h4 id="计划任务在周的指定天运行"><a href="#计划任务在周的指定天运行" class="headerlink" title="计划任务在周的指定天运行"></a>计划任务在周的指定天运行</h4><h5 id="周计划语法-1"><a href="#周计划语法-1" class="headerlink" title="周计划语法"></a>周计划语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc weekly</strong> [<strong>/d</strong> {_MON - SUN_[,MON - SUN…] *}] [<strong>/mo</strong> {1 - 52}] [<strong>/st</strong><em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]_User_[</strong>/p</em>*_Password_]]]</p><h5 id="备注-5"><a href="#备注-5" class="headerlink" title="备注"></a>备注</h5><p>“周的天”计划是周计划的变体。在周计划中，**/sc weekly** 参数是必需的。**/mo<strong>（修饰符）参数是可选的，它指定了每次运行任务之间间隔的周数。</strong>/mo** 的默认值为 1（每周）。**/d** 参数是可选的，它计划任务在周的指定天或所有天 (*) 运行。默认值为 MON（星期一）。每天选项 (<strong>/d *</strong>) 相当于计划每日任务。</p><h5 id="示例-5"><a href="#示例-5" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务每星期三运行一次"><a href="#计划任务每星期三运行一次" class="headerlink" title="计划任务每星期三运行一次"></a>计划任务每星期三运行一次</h5><p>下面的命令计划 MyApp 程序在每周的星期三运行一次。该命令使用 <strong>/d</strong> 参数指定周的天。由于该命令忽略了 <strong>/mo</strong> 参数，因此任务每周运行一次。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc weekly /d WED</strong></p><h5 id="计划任务每隔八周在星期一和星期五运行"><a href="#计划任务每隔八周在星期一和星期五运行" class="headerlink" title="计划任务每隔八周在星期一和星期五运行"></a>计划任务每隔八周在星期一和星期五运行</h5><p>以下命令计划任务每隔八周在星期一和星期五运行。它使用 <strong>/d</strong> 参数来指定天数，使用 <strong>/mo</strong> 参数指定八周时间间隔。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc weekly /mo 8 /d MON,FRI</strong></p><h4 id="计划任务在月份的指定周运行"><a href="#计划任务在月份的指定周运行" class="headerlink" title="计划任务在月份的指定周运行"></a>计划任务在月份的指定周运行</h4><h5 id="指定周的语法"><a href="#指定周的语法" class="headerlink" title="指定周的语法"></a>指定周的语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc monthly /mo</strong> {<strong>FIRST</strong>  <strong>SECOND</strong> <strong>THIRD</strong>  <strong>FOURTH</strong>  <strong>LAST</strong>} <strong>/d MON</strong> - <strong>SUN</strong> [<strong>/m</strong> {<strong>JAN</strong> -<strong>DEC</strong>[<strong>,JAN</strong> - <strong>DEC</strong>…] <strong>*</strong>}] [<strong>/st</strong><em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-6"><a href="#备注-6" class="headerlink" title="备注"></a>备注</h5><p>在此计划类型中，**/sc monthly** 参数、**/mo<strong>（修饰符）参数以及 <strong>/d</strong>（天）参数是必需的。</strong>/mo<strong>（修饰符）参数指定任务运行的周。</strong>/d** 参数指定一周中的第几天。（您可以仅为此计划类型指定一周中的某一天。）此计划也拥有一个可选的**/m**（月份）参数，用于针对特定月份计划任务。</p><h5 id="示例-6"><a href="#示例-6" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在每月的第二个周日运行"><a href="#计划任务在每月的第二个周日运行" class="headerlink" title="计划任务在每月的第二个周日运行"></a>计划任务在每月的第二个周日运行</h5><p>下面的命令计划 MyApp 程序在每月的第二个周日运行。它使用 <strong>/mo</strong> 参数指定每月的第二周，使用 <strong>/d</strong> 参数指定天。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo SECOND /d SUN</strong></p><h5 id="计划任务在三月和九月的第一个星期一运行"><a href="#计划任务在三月和九月的第一个星期一运行" class="headerlink" title="计划任务在三月和九月的第一个星期一运行"></a>计划任务在三月和九月的第一个星期一运行</h5><p>下面的命令计划 MyApp 程序在三月和九月的第一个星期一运行。它使用 <strong>/mo</strong> 参数指定是月份的第一个星期，使用 <strong>/d</strong> 参数指定天。它使用 <strong>/m</strong> 参数指定月份，用一个逗号把月份参数隔开。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo FIRST /d MON /m MAR,SEP</strong></p><h4 id="计划任务在每月的特定日期运行"><a href="#计划任务在每月的特定日期运行" class="headerlink" title="计划任务在每月的特定日期运行"></a>计划任务在每月的特定日期运行</h4><h5 id="特定日期语法"><a href="#特定日期语法" class="headerlink" title="特定日期语法"></a>特定日期语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc monthly /d</strong> {<strong>1</strong> - <strong>31</strong>} [<strong>/m</strong> {<strong>JAN</strong> -<strong>DEC</strong>[<strong>,JAN</strong> - <strong>DEC</strong>…] *}] [<strong>/st</strong><em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong>_StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]_User_[</strong>/p</em>*_Password_]]]</p><h5 id="备注-7"><a href="#备注-7" class="headerlink" title="备注"></a>备注</h5><p>在特定日期计划类型中，**/sc monthly** 参数和 <strong>/d</strong>（天）参数是必需的。**/d** 参数指定月份的日期 (1 - 31)，而不是周的天。您可以在计划中仅指定一天。**/mo<strong>（修饰符）参数对此计划类型无效。 <strong>/m</strong>（月份）参数对此计划类型而言是可选的，默认值为每个月 (*)。Schtasks 不允许您针对在 <strong>/m</strong> 参数指定的月份中不出现的日期计划任务。但是，如果忽略</strong>/m** 参数，并针对不是在每个月中出现的日期（如 31 日）计划任务，则该任务不会在较短的月份发生。要针对月份的最后一天计划任务，请使用最后一天计划类型。</p><h5 id="示例-7"><a href="#示例-7" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在每月的第一天运行-1"><a href="#计划任务在每月的第一天运行-1" class="headerlink" title="计划任务在每月的第一天运行"></a>计划任务在每月的第一天运行</h5><p>下面的命令计划 MyApp 程序在每月的第一天运行。因为默认修饰符是 none（即没有修饰符），默认天是第一天，默认的月份是每个月，所以该命令不需要任何其他参数。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly</strong></p><h5 id="计划任务在五月和六月的第-15-天运行"><a href="#计划任务在五月和六月的第-15-天运行" class="headerlink" title="计划任务在五月和六月的第 15 天运行"></a>计划任务在五月和六月的第 15 天运行</h5><p>下面的命令计划 MyApp 程序在 5 月 15 日和 6 月 15 日的下午 3:00 (15:00) 运行。它使用 <strong>/d</strong> 参数来指定日期，使用**/m** 参数指定月份。它也使用 <strong>/st</strong> 参数来指定开始时间。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /d 15 /m MAY,JUN /st 15:00</strong></p><h4 id="计划任务在月份的最后一天运行"><a href="#计划任务在月份的最后一天运行" class="headerlink" title="计划任务在月份的最后一天运行"></a>计划任务在月份的最后一天运行</h4><h5 id="最后一天语法"><a href="#最后一天语法" class="headerlink" title="最后一天语法"></a>最后一天语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc monthly /mo LASTDAY /m</strong> {<strong>JAN</strong> - <strong>DEC</strong>[<strong>,JAN</strong> - <strong>DEC</strong>…]}[<strong>/st</strong> <em>HH</em><strong>:</strong>_MM_] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]_User_[</strong>/p</em>*_Password_]]]</p><h5 id="备注-8"><a href="#备注-8" class="headerlink" title="备注"></a>备注</h5><p>在最后一天计划类型中，**/sc monthly** 参数、**/mo LASTDAY<strong>（修饰符）参数以及</strong>/m<strong>（月份）参数是必需的。</strong>/d**（天）参数无效。</p><h5 id="示例-8"><a href="#示例-8" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在每月的最后一天运行"><a href="#计划任务在每月的最后一天运行" class="headerlink" title="计划任务在每月的最后一天运行"></a>计划任务在每月的最后一天运行</h5><p>要在每个月的最后一天运行程序，您必须创建三项独立的任务。各项任务分别包括具有相同天数的月份。每项任务都使用 <strong>/mo</strong> 参数来指定最后一天，使用**/m** 参数指定月份。 下列命令计划 MyApp 程序在包含 31 天的每个月的最后一天运行。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo lastday /m JAN,MAR,MAY,JUL,AUG,OCT,DEC</strong> 下列命令计划 MyApp 程序在包含 30 天的每个月的最后一天运行。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo lastday /m APR,JUN,SEP,NOV</strong> 下列命令计划 MyApp 程序在二月的最后一天运行。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo lastday /m FEB</strong></p><h5 id="计划任务在二月的最后一天的下午-6-00-运行"><a href="#计划任务在二月的最后一天的下午-6-00-运行" class="headerlink" title="计划任务在二月的最后一天的下午 6:00 运行"></a>计划任务在二月的最后一天的下午 6:00 运行</h5><p>您还可以计划任务在某个月最后一天的特定时间运行。下列命令计划 MyApp 程序在二月最后一天的下午 6:00 运行。该命令使用 <strong>/mo</strong> 参数指定最后一天，使用**/m** 参数指定月份，使用 <strong>/st</strong> 参数指定开始时间。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /mo lastday /m FEB /st 18:00</strong></p><h4 id="计划任务运行一次"><a href="#计划任务运行一次" class="headerlink" title="计划任务运行一次"></a>计划任务运行一次</h4><h5 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc once /st</strong> <em>HH</em> <strong>:</strong> <em>MM</em> [<strong>/sd</strong>_StartDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-9"><a href="#备注-9" class="headerlink" title="备注"></a>备注</h5><p>在运行一次计划类型中，**/sc once** 参数是必需的。**/st** 参数（指定任务运行时间）是必需的。**/sd** 参数（指定任务运行的日期）是可选的。**/mo<strong>（修饰符）和</strong>/ed**（结束日期）参数对此计划类型无效。 如果根据本地计算机的时间，指定的日期和时间已经过去，Schtasks 就不允许您计划任务运行一次。要在不同时区的远程计算机上计划任务运行一次，您必须在本地计算机上的日期和时间到来之前计划任务。</p><h5 id="示例-9"><a href="#示例-9" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务运行一次-1"><a href="#计划任务运行一次-1" class="headerlink" title="计划任务运行一次"></a>计划任务运行一次</h5><p>以下命令计划 MyApp 程序在 2003 年 1 月 1 日的午夜运行。它使用 <strong>/sc</strong> 参数指定计划类型，并使用 <strong>/sd</strong> 和 <strong>st</strong> 指定日期和时间。 由于本地计算机使用“控制面板”的“区域和语言选项”中的“英语（美国）”选项，因此开始日期的格式为 MM/DD/YYYY。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc once /sd 01/01/2003 /st 00:00</strong></p><h4 id="计划任务在每次系统启动时运行"><a href="#计划任务在每次系统启动时运行" class="headerlink" title="计划任务在每次系统启动时运行"></a>计划任务在每次系统启动时运行</h4><h5 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc onstart</strong> [<strong>/sd</strong> _StartDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_] <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-10"><a href="#备注-10" class="headerlink" title="备注"></a>备注</h5><p>在启动时计划类型中，**/sc onstart** 参数是必需的。**/sd**（开始日期）参数是可选的，其默认值为当前日期。</p><h5 id="示例-10"><a href="#示例-10" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在系统启动时运行"><a href="#计划任务在系统启动时运行" class="headerlink" title="计划任务在系统启动时运行"></a>计划任务在系统启动时运行</h5><p>下面的命令计划 MyApp 程序在每次系统启动时运行，开始日期是 2001 年 3 月 15 日： 由于本地计算机使用“控制面板”的“区域和语言选项”中的“英语（美国）”选项，因此开始日期的格式为 MM/DD/YYYY。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc onstart /sd 03/15/2001</strong></p><h4 id="计划任务在用户登录时运行"><a href="#计划任务在用户登录时运行" class="headerlink" title="计划任务在用户登录时运行"></a>计划任务在用户登录时运行</h4><h5 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc onlogon</strong> [<strong>/sd</strong> _StartDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_] <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-11"><a href="#备注-11" class="headerlink" title="备注"></a>备注</h5><p>“登录时”计划类型计划任务在任何用户登录到计算机时运行。在“登录时”计划类型中，**/sc onlogon** 参数是必需的。**/sd**（开始日期）参数是可选的，其默认值为当前日期。</p><h5 id="示例-11"><a href="#示例-11" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在用户登录到远程计算机时运行"><a href="#计划任务在用户登录到远程计算机时运行" class="headerlink" title="计划任务在用户登录到远程计算机时运行"></a>计划任务在用户登录到远程计算机时运行</h5><p>下面的命令计划批处理文件在用户（任何用户）每次登录到远程计算机时运行。它使用 <strong>/s</strong> 参数指定远程计算机。因为命令是远程的，所以命令中所有的路径，包括批处理文件的路径，都是指远程计算机上的路径。 <strong>schtasks /create /tn “Start Web Site” /tr c:\myiis\webstart.bat /sc onlogon /s Server23</strong></p><h4 id="计划任务在系统空闲时运行"><a href="#计划任务在系统空闲时运行" class="headerlink" title="计划任务在系统空闲时运行"></a>计划任务在系统空闲时运行</h4><h5 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc onidle /i</strong> {1 - 999} [<strong>/sd</strong> _StartDate_] [<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="备注-12"><a href="#备注-12" class="headerlink" title="备注"></a>备注</h5><p>“空闲时”计划类型计划任务在 <strong>/i</strong> 参数指定的时间期间没有用户活动时运行。在“空闲时”计划类型中，**/sc onidle** 参数和**/i** 参数是必需的。**/sd**（开始日期）是可选的，其默认值为当前日期。</p><h5 id="示例-12"><a href="#示例-12" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务在计算机空闲时运行"><a href="#计划任务在计算机空闲时运行" class="headerlink" title="计划任务在计算机空闲时运行"></a>计划任务在计算机空闲时运行</h5><p>下面的命令计划 MyApp 程序在计算机空闲时运行。它使用必需的 <strong>/i</strong> 参数指定计算机必需持续空闲十分钟以后才启动任务。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc onidle /i 10</strong></p><h4 id="计划任务现在运行"><a href="#计划任务现在运行" class="headerlink" title="计划任务现在运行"></a>计划任务现在运行</h4><p>Schtasks 没有“现在运行”选项，但您可以模拟该选项，方法是创建运行一次，并且在几分钟内开始的任务。</p><h5 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /create /tn</strong> <em>TaskName</em> <strong>/tr</strong> <em>TaskRun</em><strong>/sc once</strong> [<strong>/st</strong> <em>HH</em><strong>:</strong>_MM_]<strong>/sd</strong> <em>MM</em><strong>/</strong><em>DD</em><strong>/</strong>_YYYY_[<strong>/it</strong>] [<strong>/ru</strong> {[<em>Domain</em><em>*\<strong>]_User_[</strong>/rp</em><em>_Password_]  <strong>System</strong>}] [**/s*</em> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="示例-13"><a href="#示例-13" class="headerlink" title="示例"></a>示例</h5><h5 id="计划任务从现在起运行几分钟。"><a href="#计划任务从现在起运行几分钟。" class="headerlink" title="计划任务从现在起运行几分钟。"></a>计划任务从现在起运行几分钟。</h5><p>下列命令计划任务在本地时间 2002 年 11 月 13 日上午 2:18 运行一次。 由于本地计算机使用“控制面板”的“区域和语言选项”中的“英语（美国）”选项，因此开始日期的格式为 MM/DD/YYYY。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc once /st 14:18 /sd 11/13/2002</strong></p><h4 id="计划任务以不同权限运行"><a href="#计划任务以不同权限运行" class="headerlink" title="计划任务以不同权限运行"></a>计划任务以不同权限运行</h4><p>您可以计划各种类型的任务以候选帐户的权限在本地计算机和远程计算机上运行。除了特定计划类型必需的参数之外，**/ru** 参数是必需的，而**/rp** 参数是可选的。</p><h5 id="示例-14"><a href="#示例-14" class="headerlink" title="示例"></a>示例</h5><h5 id="以-Administrator-权限在本地计算机上运行任务"><a href="#以-Administrator-权限在本地计算机上运行任务" class="headerlink" title="以 Administrator 权限在本地计算机上运行任务"></a>以 Administrator 权限在本地计算机上运行任务</h5><p>下面的命令计划 MyApp 程序在本地计算机上运行。它使用 <strong>/ru</strong> 指定任务应以用户 Administrator 帐户 (Admin06) 的权限运行。在此示例中，计划任务每星期二运行，但是您可以将任何计划类型用于以候选权限运行的任务。 <strong>schtasks /create /tn “My App” /tr myapp.exe /sc weekly /d TUE /ru Admin06</strong> 作为响应，SchTasks.exe 会提示为 Admin06 帐户提供“运行方式”密码，然后显示成功消息。</p><p>Please enter the run as password for Admin06: ********</p><p>SUCCESS: The scheduled task “My App” has successfully been created.</p><h5 id="以候选权限在远程计算机上运行任务"><a href="#以候选权限在远程计算机上运行任务" class="headerlink" title="以候选权限在远程计算机上运行任务"></a>以候选权限在远程计算机上运行任务</h5><p>下面的命令计划 MyApp 程序每四天在 Marketing 计算机上运行。 该命令使用 <strong>/sc</strong> 参数指定日计划，使用 <strong>/mo</strong> 参数指定时间间隔为四天。 该命令使用 <strong>/s</strong> 参数提供远程计算机的名称，使用 <strong>/u</strong> 参数指定在远程计算机上拥有计划任务权限的帐户（Marketing 计算机上的 Admin01）。它还使用**/ru** 参数指定任务应以用户的非 Administrator 帐户（Reskits 域中的 User01）权限运行。如果不使用 <strong>/ru</strong> 参数，任务将以 <strong>/u</strong> 指定的帐户权限运行。 <strong>schtasks /create /tn “My App” /tr myapp.exe /sc daily /mo 4 /s Marketing /u Marketing\Admin01 /ru Reskits\User01</strong> Schtasks 首次请求由 <strong>/u</strong> 参数（运行命令）所命名用户的密码，然后请求由 <strong>/ru</strong> 参数（运行任务）所命名用户的密码。对这些密码进行身份验证之后，Schtasks 显示表明已计划任务的消息。</p><p>Type the password for Marketing\Admin01:********</p><p>Please enter the run as password for Reskits\User01: ********</p><p>SUCCESS: The scheduled task “My App” has successfully been created.</p><h5 id="仅在特定用户登录时运行任务"><a href="#仅在特定用户登录时运行任务" class="headerlink" title="仅在特定用户登录时运行任务"></a>仅在特定用户登录时运行任务</h5><p>下面的命令计划 AdminCheck.exe 程序每星期五上午 4:00 在 Public 计算机上运行，但是只有在计算机管理员登录时才运行。 该命令使用 <strong>/sc</strong> 参数指定周计划，使用 <strong>/d</strong> 参数指定天，使用 <strong>/st</strong> 参数指定开始时间。 该命令使用 <strong>/s</strong> 参数提供远程计算机的名称，使用 <strong>/u</strong> 参数指定在远程计算机上拥有计划任务权限的帐户。它还使用**/ru** 参数把任务配置为以 Public 计算机的管理员 (Public\Admin01) 权限运行，使用 <strong>/it</strong> 参数表明仅在 Public\Admin01 帐户登录时才运行任务。 <strong>schtasks /create /tn “Check Admin” /tr AdminCheck.exe /sc weekly /d FRI /st 04:00 /s Public /u Domain3\Admin06 /ru Public\Admin01 /it</strong> <strong>注意</strong></p><ul><li>  要使用仅交互 (<strong>/it</strong>) 属性标识任务，请使用详细查询 (<strong>/query /v</strong>)。在一个带有**/it** 的任务的详细查询显示中，<strong>Logon Mode</strong> 字段的值为<strong>Interactive only</strong>。</li></ul><h4 id="计划任务以系统权限运行"><a href="#计划任务以系统权限运行" class="headerlink" title="计划任务以系统权限运行"></a>计划任务以系统权限运行</h4><p>各种类型的任务都可以用系统帐户的权限在本地和远程计算机上运行。除了特定计划类型所需的参数之外，**/ru system**（或 **/ru “”**）参数也是必需的，而 <strong>/rp</strong> 参数无效。 <strong>要点</strong></p><ul><li>  系统帐户没有交互式登录权限。用户无法看到以系统权限运行的程序或任务，也无法与它们进行交互。</li><li>  <strong>/ru</strong> 参数确定运行任务的权限，而不是用来计划任务的权限。只有 Administrators 可以计划任务，与**/ru** 参数的值无关。</li></ul><p><strong>注意</strong></p><ul><li>  要标识以系统权限运行的任务，请使用详细查询 (<strong>/query /v</strong>)。在系统运行任务的详细查询显示中，<strong>Run As User</strong> 字段拥有一个值<strong>NT AUTHORITY\SYSTEM</strong>，而 <strong>Logon Mode</strong> 字段拥有一个值 <strong>Background only</strong>。</li></ul><h5 id="示例-15"><a href="#示例-15" class="headerlink" title="示例"></a>示例</h5><h5 id="以系统权限运行任务"><a href="#以系统权限运行任务" class="headerlink" title="以系统权限运行任务"></a>以系统权限运行任务</h5><p>下面的命令计划 MyApp 程序以系统帐户权限在本地计算机上运行。在此示例中，任务计划在每月的第十四天运行，但是您可以将任何计划类型用于以系统权限运行的任务。 该命令使用 <strong>/ru System</strong> 参数指定系统安全上下文。因为系统任务不需要密码，所以忽略 <strong>/rp</strong> 参数。 <strong>schtasks /create /tn “My App” /tr c:\apps\myapp.exe /sc monthly /d 15 /ru System</strong> 作为响应，SchTasks.exe 显示一条信息性消息和一条成功消息。它不提示输入密码。</p><p>INFO: The task will be created under user name (“NT AUTHORITY\SYSTEM”).<br>SUCCESS: The Scheduled task “My App” has successfully been created.</p><h5 id="以系统权限在远程计算机上运行任务"><a href="#以系统权限在远程计算机上运行任务" class="headerlink" title="以系统权限在远程计算机上运行任务"></a>以系统权限在远程计算机上运行任务</h5><p>以下命令计划 MyApp 程序以系统权限每天上午 4:00 在 Finance01 计算机上运行。 此命令使用 <strong>/tn</strong> 参数命名任务，使用 <strong>/tr</strong> 参数指定 MyApp 程序的远程副本。它使用**/sc** 参数指定日计划，但省略 <strong>/mo</strong> 参数，因为 1（每天）为默认值。它使用 <strong>/st</strong> 参数指定开始时间，此时间也是任务每天运行的时间。 该命令使用 <strong>/s</strong> 参数提供远程计算机的名称，使用 <strong>/u</strong> 参数指定在远程计算机上拥有计划任务权限的帐户。它还使用**/ru** 参数指定任务应在系统帐户下运行。如果不使用 <strong>/ru</strong> 参数，任务将以 <strong>/u</strong> 指定的帐户权限运行。 <strong>schtasks /create /tn “My App” /tr myapp.exe /sc daily /st 04:00 /s Finance01 /u Admin01 /ru System</strong> Schtasks 请求 <strong>/u</strong> 参数命名的用户的密码，并对该密码进行身份验证之后显示一条消息，表明已创建任务，而且任务将以系统帐户权限运行。</p><p>Type the password for Admin01:**********</p><p>INFO: The Schedule Task “My App” will be created under user name (“NT AUTHORITY\<br>SYSTEM”).<br>SUCCESS: The scheduled task “My App” has successfully been created.</p><h4 id="计划任务运行多个程序"><a href="#计划任务运行多个程序" class="headerlink" title="计划任务运行多个程序"></a>计划任务运行多个程序</h4><p>每个任务只能运行一个程序。但是可以创建一个运行多个程序的批处理文件，然后计划一个任务来运行这个批处理文件。下面的过程演示了这个方法：</p><ol><li>创建一个启动所要运行程序的批处理文件。 在此示例中，创建一个启动“事件查看器”(Eventvwr.exe) 和“系统监视器”(Perfmon.exe) 的批处理文件。<ul><li>  启动文本编辑器，如“记事本”。</li><li>  键入每个程序的名称和可执行文件的完全合格路径。在这种情况下，文件包含下列语句。 <strong>C:\Windows\System32\Eventvwr.exe C:\Windows\System32\Perfmon.exe</strong></li><li>  将文件保存为 MyApps.bat。</li></ul></li><li> 使用 SchTasks.exe 创建一个运行 MyApps.bat 的任务。 以下命令创建了 Monitor 任务，每当有人登录时就运行该任务。它使用 <strong>/tn</strong> 参数命名任务，使用 <strong>/tr</strong> 参数运行 MyApps.bat。它使用**/sc** 参数来指明 OnLogon 计划类型，并使用 <strong>/ru</strong> 参数以用户 Administrator 帐户的权限运行任务。 <strong>schtasks /create /tn Monitor /tr C:\MyApps.bat /sc onlogon /ru Reskit\Administrator</strong> 该命令的结果是，每当用户登录到计算机，任务就启动“事件查看器”和“系统监视器”。</li></ol><h4 id="计划任务在远程计算机上运行"><a href="#计划任务在远程计算机上运行" class="headerlink" title="计划任务在远程计算机上运行"></a>计划任务在远程计算机上运行</h4><p>要计划任务在远程计算机上运行，您必须把任务添加到远程计算机的计划中。可以在远程计算机上计划各种类型的任务，但必须满足以下条件。</p><ul><li>  您必须具有计划任务的权限。因此，您必须以属于远程计算机上 Administrators 组成员的帐户登录到本地计算机，或者，您必须使用**/u** 参数提供远程计算机管理员的凭据。</li><li>  只有在本地和远程计算机处于同一个域，或者本机计算机处于远程计算机域信任的域时，您才能使用 <strong>/u</strong> 参数。否则，远程计算机无法对指定的用户帐户进行身份验证，也无法验证该帐户是否为 Administrators 组的成员。</li><li>  您必须具有足够的权限才能在远程计算机上运行。不同的任务要求不同的权限。默认情况下，任务以本地计算机当前用户的权限运行，或如果使用**/u** 参数，任务就以 <strong>/u</strong> 参数指定的帐户权限运行。但是，您可以使用 <strong>/ru</strong> 参数以另一个用户帐户的权限或以系统权限运行任务。</li></ul><h5 id="示例-16"><a href="#示例-16" class="headerlink" title="示例"></a>示例</h5><h5 id="管理员在远程计算机上计划任务"><a href="#管理员在远程计算机上计划任务" class="headerlink" title="管理员在远程计算机上计划任务"></a>管理员在远程计算机上计划任务</h5><p>下面的命令计划 MyApp 程序从现在开始每十天在 SRV01 远程计算机上运行。该命令使用 <strong>/s</strong> 参数提供远程计算机的名称。由于本地当前用户为远程计算机的管理员，因此不必使用为计划任务提供候选权限的**/u** 参数。 请注意，在远程计算机上计划任务时，所有参数都是指远程计算机。因此，**/tr** 参数指定的可执行文件是指远程计算机上的 MyApp.exe 的副本。 <strong>schtasks /create /s SRV01 /tn “My App” /tr “c:\program files\corpapps\myapp.exe” /sc daily /mo 10</strong> 作为响应，Schtasks 将显示一条表明任务已计划的成功消息。</p><h5 id="用户在远程计算机上计划命令（情况-1）"><a href="#用户在远程计算机上计划命令（情况-1）" class="headerlink" title="用户在远程计算机上计划命令（情况 1）"></a>用户在远程计算机上计划命令（情况 1）</h5><p>下面的命令计划 MyApp 程序在 SRV06 远程计算机上每三小时运行一次。由于需要“管理员”权限来计划任务，因此该命令使用 <strong>/u</strong> 和**/p** 参数提供用户管理员帐户（Reskits 域中的 Admin01）的凭据。默认情况下，这些权限还用来运行任务。但是，由于任务不需要“管理员”权限就能运行，因此该命令包括**/ru** 和 <strong>/rp</strong> 参数，以取代默认值，并以用户的非“管理员”帐户的权限在远程计算机上运行任务。 <strong>schtasks /create /s SRV06 /tn “My App” /tr “c:\program files\corpapps\myapp.exe” /sc hourly /mo 3 /u reskits\admin01 /p R43253@4$ /ru SRV06\user03 /rp MyFav!!Pswd</strong> 作为响应，Schtasks 将显示一条表明任务已计划的成功消息。</p><h5 id="用户在远程计算机上计划命令（情况-2）"><a href="#用户在远程计算机上计划命令（情况-2）" class="headerlink" title="用户在远程计算机上计划命令（情况 2）"></a>用户在远程计算机上计划命令（情况 2）</h5><p>下面的命令计划 MyApp 程序每月的最后一天在 SRV02 远程计算机上运行。由于本地当前用户 (user03) 不是远程计算机的管理员，因此该命令使用 <strong>/u</strong> 参数提供用户“管理员”帐户（Reskits 域中的 Admin01）的凭据。“管理员”帐户权限将用来计划任务和运行任务。 <strong>schtasks /create /s SRV02 /tn “My App” /tr “c:\program files\corpapps\myapp.exe” /sc monthly /mo LASTDAY /m * /u reskits\admin01</strong> 由于该命令没有包含 <strong>/p</strong>（密码）参数，因此 Schtasks 会提示输入密码。然后，它显示一条成功消息，在此情况下，是一条警告。</p><p>Type the password for reskits\admin01:********</p><p>SUCCESS: The scheduled task “My App” has successfully been created.</p><p>WARNING: The Scheduled task “My App” has been created, but may not run because<br>the account information could not be set.</p><p>此警告表示远程域无法对 <strong>/u</strong> 参数指定的帐户进行身份验证。在此种情况下，远程域无法对用户帐户进行身份验证，因为本地计算机不是远程计算机域信任的域的成员。如果发生这种情况，任务作业就会出现在计划任务的列表中，但任务实际上为空，所以不会运行。 以下来自一个详细查询的显示内容指明任务所遇到的问题。在显示内容中，请注意“下次运行时间”的值是“永不过期”，“作为用户运行”的值是“无法从任务计划程序数据库检索”。 如果此计算机是同一域或可信域的成员，任务就会成功计划，并会按指定的方式运行。</p><p>HostName:                             SRV44<br>TaskName:                             My App<br>Next Run Time:                        Never<br>Status:<br>Logon mode:                           Interactive/Background<br>Last Run Time:                        Never<br>Last Result:                          0<br>Creator:                              user03<br>Schedule:                             At 3:52 PM on day 31 of every month, start<br> starting 12/14/2001<br>Task To Run:                          c:\program files\corpapps\myapp.exe<br>Start In:                             myapp.exe<br>Comment:                              N/A<br>Scheduled Task State:                 Disabled<br>Scheduled Type:                       Monthly<br>Start Time:                           3:52:00 PM<br>Start Date:                           12/14/2001<br>End Date:                             N/A<br>Days:                                 31<br>Months:                               JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NO<br>V,DEC<br>Run As User:                          Could not be retrieved from the task sched<br>uler database<br>Delete Task If Not Rescheduled:       Enabled<br>Stop Task If Runs X Hours and X Mins: 72:0<br>Repeat: Every:                        Disabled<br>Repeat: Until: Time:                  Disabled<br>Repeat: Until: Duration:              Disabled<br>Repeat: Stop If Still Running:        Disabled<br>Idle Time:                            Disabled<br>Power Management:                     Disabled</p><h5 id="备注-13"><a href="#备注-13" class="headerlink" title="备注"></a>备注</h5><ul><li>  要以另一个用户的权限运行 <strong>/create</strong> 命令，请使用 <strong>/u</strong> 参数。只有在远程计算机上计划任务时，**/u** 参数才有效。</li><li>  要查看更多 <strong>schtasks /create</strong> 示例，请在命令提示符下键入 **schtasks /create /?**。</li><li>  要计划任务以另一个用户的权限运行，请使用 <strong>/ru</strong> 参数。**/ru** 参数对于本地和远程计算机上的任务均有效。</li><li>  要使用 <strong>/u</strong> 参数，本地计算机必须与远程计算机处于同一个域，或者必须处于远程计算机域信任的域中。否则，要么不创建任务，要么任务作业为空，并且任务不运行。</li><li>  Schtasks 会始终提示提供密码（除非您提供了密码），即使使用当前用户帐户在本地计算机上计划任务。这是 Schtasks 的正常行为。</li><li>  SchTasks 不验证程序文件的位置或用户帐户密码。如果没有为用户帐户输入正确的文件位置或正确的密码，任务仍然可以创建，但不会运行。另外，如果帐户的密码更改或过期，而且没有更改存储在任务中的密码，那么任务也不会运行。</li><li>  系统帐户没有交互式登录权限。用户看不到以系统权限运行的程序，也不能与其交互。</li><li>  每个任务只能运行一个程序。但是可以创建一个启动多个任务的批处理文件，然后计划运行该批处理文件的任务。</li><li>  创建任务之后即可对其进行测试。使用 <strong>run</strong> 操作来测试任务，然后从 SchedLgU.txt 文件 (_Systemroot_\SchedLgU.txt ) 中查阅错误。</li></ul><h3 id="schtasks-change"><a href="#schtasks-change" class="headerlink" title="schtasks change"></a>schtasks change</h3><p>更改一个或多个任务属性。</p><ul><li>  任务运行的程序 (<strong>/tr</strong>)。</li><li>  任务运行的用户帐户 (<strong>/ru</strong>)。</li><li>  用户帐户的密码 (<strong>/rp</strong>)。</li><li>  将仅交互属性添加到任务 (<strong>/it</strong>)。</li></ul><h5 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /change /tn</strong> <em>TaskName</em> [<strong>/s</strong> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em><em>_Password_]]] [**/ru*</em> {[<em>Domain</em><em>*\<strong>]<em>User</em> <strong>System</strong>}] [</strong>/rp</em>* _Password_] [<strong>/tr</strong> _TaskRun_] [<strong>/st</strong> _StartTime_] [<strong>/ri</strong> _Interval_] [{<strong>/et</strong> <em>EndTime</em>  <strong>/du</strong> <em>Duration</em>} [<strong>/k</strong>]] [<strong>/sd</strong> _StartDate_] [<strong>/ed</strong>_EndDate_] [/{<strong>ENABLE</strong>  <strong>DISABLE</strong>}] [<strong>/it</strong>] [<strong>/z</strong>]</p><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><p><strong>/tn <em>TaskName</em></strong></p><p>标识要更改的任务。输入任务名。</p><p><strong>/s <em>Computer</em></strong></p><p>指定远程计算机的名称或 IP 地址（带有或不带有反斜杠）。默认值是本地计算机。</p><p><strong>/u [_Domain_\] <em>User</em></strong></p><p>使用指定用户帐户的权限运行该命令。默认值为本地计算机上当前用户的权限。指定的用户帐户必须是远程计算机上 Administrators 组的成员。只有在远程计算机 (<strong>/s</strong>) 上更改任务时，**/u** 和**/p** 参数才有效。</p><p><strong>/p <em>Password</em></strong></p><p>指定在 <strong>/u</strong> 参数中指定的用户帐户的密码。如果使用 <strong>/u</strong> 参数，但忽略 <strong>/p</strong> 参数或密码参数，Schtasks 将提示您输入密码。 只有使用 <strong>/s</strong> 时，**/u** 和**/p** 参数才有效。</p><p><strong>/ru {[_Domain_\]<em>User</em> System}</strong></p><p>指定更改运行任务的用户帐户。对于指定 Local System 帐户，有效项为“”、“NT AUTHORITY\SYSTEM”或“SYSTEM”。 在更改用户帐户时，同时必须更改用户密码。如果某个命令包含**/ru** 参数，但不包含 <strong>/rp</strong> 参数，schtasks 就会提示提供新密码。使用本地系统帐户的权限运行任务不需要密码或不提示输入密码。</p><p><strong>/rp <em>Password</em></strong></p><p>为现有用户帐户或 <strong>/ru</strong> 参数指定的用户帐户指定一个新密码。在本地系统帐户中使用时，此参数会被忽略。</p><p><strong>/tr <em>TaskRun</em></strong></p><p>更改任务运行的程序。输入可执行文件、脚本文件或批处理文件的完全合格的路径和文件名。如果忽略该路径，SchTasks 将假定文件在 _systemroot_\System32 目录下。指定的程序替换任务运行的原始程序。</p><p><strong>/st <em>Starttime</em></strong></p><p>使用 24 小时时间格式 HH:mm 指定任务的开始时间。例如，值 14:30 相当于 12 小时时间格式的下午 2:30。</p><p><strong>/ri <em>Interval</em></strong></p><p>指定计划任务的重复间隔（以分钟计）。有效范围为 1 - 599940（599940 分钟 = 9999 小时）。</p><p><strong>/et <em>EndTime</em></strong></p><p>使用 24 小时时间格式 HH:mm 指定任务的结束时间。例如，值 14:30 相当于 12 小时时间格式的下午 2:30。</p><p><strong>/du <em>Duration</em></strong></p><p>指定关闭 <em>EndTime</em> 或 <em>Duration</em> 的任务（如果指定的话）。</p><p><strong>/k</strong></p><p>在 <strong>/et</strong> 或 <strong>/du</strong> 指定的时间停止任务运行的程序。如果没有 <strong>/k</strong>，Schtasks 在到达**/et** 或 <strong>/du</strong> 指定的时间之后不再启动程序，但它不会停止仍在运行的程序。此参数是可选的，并且仅对 MINUTE 或 HOURLY 计划有效。</p><p><strong>/sd <em>StartDate</em></strong></p><p>指定任务应运行的第一个日期。日期格式为 _mm/dd/yyyy_。</p><p><strong>/ed <em>EndDate</em></strong></p><p>指定任务应运行的最后一个日期。格式为 _mm/dd/yyyy_。</p><p><strong>/ENABLE</strong></p><p>指定启用已计划的任务。</p><p><strong>/DISABLE</strong></p><p>指定禁用已计划的任务。</p><p><strong>/it</strong></p><p>指定仅在“运行方式”用户（运行任务的用户帐户）登录到计算机时才运行已计划的任务。 此参数不会影响使用系统权限运行的任务，也不会影响已经设置仅交互属性的任务。不能使用更改命令从任务中删除仅交互属性。默认情况下，在计划任务时或由**/u** 参数（如果使用该参数）指定帐户时，“运行方式”用户将是本地计算机的当前用户。但是，如果该命令包含 <strong>/ru</strong> 参数，“运行方式”用户则是由**/ru** 参数指定的帐户。</p><p><strong>/z</strong></p><p>指定在计划完成时删除任务。</p><p><strong>/?</strong></p><p>在命令提示符下显示帮助。</p><h5 id="备注-14"><a href="#备注-14" class="headerlink" title="备注"></a>备注</h5><ul><li>  <strong>/tn</strong> 和 <strong>/s</strong> 参数标识该任务。**/tr<strong>、</strong>/ru** 和**/rp** 参数指定可以更改的任务属性。</li><li>  <strong>/ru</strong> 和 <strong>/rp</strong> 参数指定运行任务的权限。**/u** 和**/p** 参数指定用于更改任务的权限。</li><li>  要在远程计算机上更改任务，用户必须使用属于远程计算机上 Administrators 组成员的帐户登录到本地计算机。</li><li>  要使用另一个用户 (<strong>/u</strong>, <strong>/p</strong>) 的权限运行 <strong>/change</strong> 命令，本地计算机上必须与远程计算机处于同一个域，或者必须处于远程计算机域信任的域中。</li><li>  系统帐户没有交互式登录权限。用户看不到以系统权限运行的程序，也不能与其交互。</li><li>  要使用 <strong>/it</strong> 属性标识任务，请使用详细查询 (<strong>/query /v</strong>)。在一个带有**/it** 的任务的详细查询显示中，<strong>Logon Mode</strong> 字段的值为<strong>Interactive only</strong>。</li></ul><h5 id="示例-17"><a href="#示例-17" class="headerlink" title="示例"></a>示例</h5><h5 id="更改任务运行的程序"><a href="#更改任务运行的程序" class="headerlink" title="更改任务运行的程序"></a>更改任务运行的程序</h5><p>下面的命令将 Virus Check 任务运行的程序由 VirusCheck.exe 更改为 VirusCheck2.exe。此命令使用 <strong>/tn</strong> 参数标识任务，使用**/tr** 参数指定任务的新程序。（不能更改任务名称。） <strong>schtasks /change /tn “Virus Check” /tr C:\VirusCheck2.exe</strong> 作为响应，SchTasks.exe 显示以下成功消息：</p><p>SUCCESS: The parameters of the scheduled task “Virus Check” have been changed.</p><p>此命令的结果是，Virus Check 任务现运行 VirusCheck2.exe。</p><h5 id="更改远程任务的密码"><a href="#更改远程任务的密码" class="headerlink" title="更改远程任务的密码"></a>更改远程任务的密码</h5><p>以下命令用于更改远程计算机 Svr01 上 RemindMe 任务的用户帐户密码。该命令使用 <strong>/tn</strong> 参数标识任务，使用 <strong>/s</strong> 参数指定远程计算机。它使用 <strong>/rp</strong> 参数指定新的密码 p@ssWord3。 在用户帐户密码过期或更改时需要执行此程序。如果保存在任务中的密码不再有效，任务不会运行。 <strong>schtasks /change /tn RemindMe /s Svr01 /rp p@ssWord3</strong> 作为响应，SchTasks.exe 显示下列成功消息：</p><p>SUCCESS: The parameters of the scheduled task “RemindMe” have been changed.</p><p>此命令的结果是，RemindMe 任务现在以其初始的用户帐户运行，但拥有一个新密码。</p><h5 id="更改任务的程序和用户帐户"><a href="#更改任务的程序和用户帐户" class="headerlink" title="更改任务的程序和用户帐户"></a>更改任务的程序和用户帐户</h5><p>以下命令用于更改任务运行的程序以及任务运行的用户帐户。实质上，它将旧的计划用于新的任务。此命令将 ChkNews 任务（该任务每天早上 9:00 启动 Notepad.exe）更改为启动 Internet Explorer。 该命令使用 <strong>/tn</strong> 参数来标识任务。它使用 <strong>/tr</strong> 参数更改任务运行的程序，使用 <strong>/ru</strong> 参数更改任务运行的用户帐户。 忽略为用户帐户提供密码的 <strong>/rp</strong> 参数。必须为帐户提供密码，但可以使用 <strong>/rp</strong> 参数，并以明文形式键入密码，或等待 SchTasks.exe 提示您输入密码，然后以不显示文本的方式输入密码。 <strong>schtasks /change /tn ChkNews /tr “c:\program files\Internet Explorer\iexplore.exe” /ru DomainX\Admin01</strong> 作为响应，SchTasks.exe 要求输入用户帐户的密码。它不显示键入的文本，因此密码不可见。</p><p>Please enter the password for DomainX\Admin01: </p><p>请注意，**/tn** 参数标识任务，**/tr** 和 <strong>/ru</strong> 参数更改任务的属性。不能使用另外一个参数来标识任务，而且不能更改任务的名称。 作为响应，SchTasks.exe 显示下列成功消息：</p><p>SUCCESS: The parameters of the scheduled task “ChkNews” have been changed.</p><p>此命令的结果是，ChkNews 任务现在使用“管理员”帐户的权限运行 Internet Explorer。</p><h5 id="将程序更改为系统帐户"><a href="#将程序更改为系统帐户" class="headerlink" title="将程序更改为系统帐户"></a>将程序更改为系统帐户</h5><p>以下命令用于更改 SecurityScript 任务，以使其以“系统”帐户权限运行。它使用 <strong>/ru “”</strong> 参数来表示系统帐户。 <strong>schtasks /change /tn SecurityScript /ru “”</strong> 作为响应，SchTasks.exe 显示下列成功消息：</p><p>INFO: The run as user name for the scheduled task “SecurityScript” will be changed to “NT AUTHORITY\SYSTEM”.<br>SUCCESS: The parameters of the scheduled task “SecurityScript” have been changed.</p><p>因为任务以系统帐户权限运行不需要密码，所以 SchTasks.exe 不提示输入密码。</p><h5 id="仅在我登录时才运行程序"><a href="#仅在我登录时才运行程序" class="headerlink" title="仅在我登录时才运行程序"></a>仅在我登录时才运行程序</h5><p>以下命令将仅交互属性添加到现有任务 MyApp 中。此属性确保只有在“运行方式”用户（即运行任务的用户帐户）登录到计算机的情况下才运行任务。 此命令使用 <strong>/tn</strong> 参数标识任务，并使用 <strong>/it</strong> 参数将仅交互属性添加到任务中。由于任务已经以我的用户帐户权限运行，所以我不需要更改任务的**/ru** 参数。 <strong>schtasks /change /tn MyApp /it</strong> 作为响应，SchTasks.exe 显示以下成功消息。</p><p>SUCCESS: The parameters of the scheduled task “MyApp” have been changed.</p><h3 id="schtasks-run"><a href="#schtasks-run" class="headerlink" title="schtasks run"></a>schtasks run</h3><p>立即运行计划任务。<strong>run</strong> 操作忽略计划，但使用程序文件位置、用户帐户和保存在任务中的密码立即运行任务。</p><h5 id="语法-8"><a href="#语法-8" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /run /tn</strong> <em>TaskName</em> [<strong>/s</strong> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><p><strong>/tn <em>TaskName</em></strong></p><p>必需。标识任务。</p><p><strong>/s <em>Computer</em></strong></p><p>指定远程计算机的名称或 IP 地址（带有或不带有反斜杠）。默认设置为本地计算机。</p><p><strong>/u [_Domain_\] <em>User</em></strong></p><p>使用指定用户帐户的权限运行该命令。默认情况下，使用本地计算机当前用户的权限运行该命令。 指定的用户帐户必须是远程计算机上 Administrators 组的成员。只有使用**/s** 时，**/u** 和 <strong>/p</strong> 参数才有效。</p><p><strong>/p <em>Password</em></strong></p><p>指定在 <strong>/u</strong> 参数中指定的用户帐户的密码。如果使用 <strong>/u</strong> 参数，但忽略 <strong>/p</strong> 参数或密码参数，Schtasks 将提示您输入密码。 只有使用 <strong>/s</strong> 时，**/u** 和**/p** 参数才有效。</p><p><strong>/?</strong></p><p>在命令提示符下显示帮助。</p><h5 id="备注-15"><a href="#备注-15" class="headerlink" title="备注"></a>备注</h5><ul><li>  使用这个操作来测试任务。如果任务没有运行，请查阅“任务计划程序服务”事务日志 _Systemroot_\SchedLgU.txt，以获取错误。</li><li>  运行任务既不会影响任务计划，也不会更改为任务计划好的下次运行时间。</li><li>  要远程运行任务，必须在远程计算机上计划任务。在运行该任务时，它仅在远程计算机上运行。要验证任务正在远程计算机上运行，请使用“任务管理器”或“任务计划程序”事务日志_Systemroot_\SchedLgU.txt。</li></ul><h5 id="示例-18"><a href="#示例-18" class="headerlink" title="示例"></a>示例</h5><h5 id="在本地计算机上运行任务"><a href="#在本地计算机上运行任务" class="headerlink" title="在本地计算机上运行任务"></a>在本地计算机上运行任务</h5><p>以下命令用于启动“Security Script”任务。 <strong>schtasks /run /tn “Security Script”</strong> 作为响应，SchTasks.exe 启动与任务相关联的脚本并显示以下消息：</p><p>SUCCESS: Attempted to run the scheduled task “Security Script”.</p><p>正如消息提示的那样，Schtasks 尝试启动程序，但它无法验证该程序实际上已经启动。</p><h5 id="在远程计算机上运行任务"><a href="#在远程计算机上运行任务" class="headerlink" title="在远程计算机上运行任务"></a>在远程计算机上运行任务</h5><p>以下命令用于在远程计算机 Svr01 上启动 Update 任务： <strong>schtasks /run /tn Update /s Svr01</strong> 在这种情况下，SchTasks.exe 显示以下错误消息：</p><p>ERROR: Unable to run the scheduled task “Update”.</p><p>查看 Svr01 上的“计划任务程序”事务日志 C:\Windows\SchedLgU.txt 以获取错误的原因。在这种情况下，日志中显示以下条目：</p><p>“Update.job” (update.exe) 3/26/2001 1:15:46 PM ** ERROR **<br>The attempt to log on to the account associated with the task failed, therefore, the task did not run.<br>The specific error is:<br>0x8007052e: Logon failure: unknown user name or bad password.<br>Verify that the task’s Run-as name and password are valid and try again.</p><p>显然，任务中的用户名或密码在此系统中无效。下面的 <strong>schtasks /change</strong> 命令用于更新 Svr01 上 Update 任务的用户名和密码： <strong>schtasks /change /tn Update /s Svr01 /ru Administrator /rp PassW@rd3</strong> 在 <strong>change</strong> 命令完成之后，重新运行 <strong>run</strong> 命令。此时，Update.exe 程序启动，SchTasks.exe 显示以下消息：</p><p>SUCCESS: Attempted to run the scheduled task “Update”.</p><p>正如消息提示的那样，Schtasks 尝试启动程序，但它无法验证该程序实际上已经启动。</p><h3 id="schtasks-end"><a href="#schtasks-end" class="headerlink" title="schtasks end"></a>schtasks end</h3><p>停止由任务启动的程序。</p><h5 id="语法-9"><a href="#语法-9" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /end /tn</strong> <em>TaskName</em> [<strong>/s</strong> <em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><p><strong>/tn <em>TaskName</em></strong></p><p>必需。标识启动程序的任务。</p><p><strong>/s <em>Computer</em></strong></p><p>指定远程计算机的名称或 IP 地址。默认设置为本地计算机。</p><p><strong>/u [_Domain_\] <em>User</em></strong></p><p>使用指定用户帐户的权限运行该命令。默认情况下，使用本地计算机当前用户的权限运行该命令。 指定的用户帐户必须是远程计算机上 Administrators 组的成员。只有使用**/s** 时，**/u** 和 <strong>/p</strong> 参数才有效。</p><p><strong>/p <em>Password</em></strong></p><p>指定在 <strong>/u</strong> 参数中指定的用户帐户的密码。如果使用 <strong>/u</strong> 参数，但忽略 <strong>/p</strong> 参数或密码参数，Schtasks 将提示您输入密码。 只有使用 <strong>/s</strong> 时，**/u** 和**/p** 参数才有效。</p><p><strong>/?</strong></p><p>显示帮助。</p><h5 id="备注-16"><a href="#备注-16" class="headerlink" title="备注"></a>备注</h5><ul><li>  SchTasks.exe 只终止由计划任务启动的程序实例。要停止其他进程，请使用 TaskKill，它是一个包含在 Windows XP Professional 中的工具。有关 TaskKill 的详细信息，请参阅<a href="http://technet.microsoft.com/zh-cn/library/cc755991.aspx">Taskkill</a>。</li></ul><h5 id="示例-19"><a href="#示例-19" class="headerlink" title="示例"></a>示例</h5><h5 id="终止本地计算机上的任务"><a href="#终止本地计算机上的任务" class="headerlink" title="终止本地计算机上的任务"></a>终止本地计算机上的任务</h5><p>以下命令用于终止由 My Notepad 任务启动的 Notepad.exe 实例： <strong>schtasks /end /tn “My Notepad”</strong> 作为响应，SchTasks.exe 停止由任务启动的 Notepad.exe 实例，并显示以下成功消息：</p><p>SUCCESS: The scheduled task “My Notepad” has been terminated successfully.</p><h5 id="终止远程计算机上的任务"><a href="#终止远程计算机上的任务" class="headerlink" title="终止远程计算机上的任务"></a>终止远程计算机上的任务</h5><p>以下命令用于终止远程计算机 Svr01 上由 InternetOn 任务启动的 Internet Explorer 实例： <strong>schtasks /end /tn InternetOn /s Svr01</strong> 作为响应，SchTasks.exe 停止由任务启动的 Internet Explorer 实例，并显示以下成功消息：</p><p>SUCCESS: The scheduled task “InternetOn” has been terminated successfully.</p><h3 id="schtasks-delete"><a href="#schtasks-delete" class="headerlink" title="schtasks delete"></a>schtasks delete</h3><p>删除计划任务。</p><h5 id="语法-10"><a href="#语法-10" class="headerlink" title="语法"></a>语法</h5><p><strong>schtasks /delete /tn</strong> {<em>TaskName</em>  *} [<strong>/f</strong>] [<strong>/s</strong><em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h5><p><strong>/tn {<em>TaskName</em>  *}</strong></p><p>必需。标识要删除的任务。</p><p>值</p><p>描述</p><p><em>TaskName</em></p><p>删除已命名任务。</p><p><em>*</em></p><p>删除计算机上的所有计划任务。</p><p><strong>/f</strong></p><p>阻止确认消息。不警告就删除任务。</p><p><strong>/s <em>Computer</em></strong></p><p>指定远程计算机的名称或 IP 地址（带有或不带有反斜杠）。默认设置为本地计算机。</p><p><strong>/u [_Domain_\] <em>User</em></strong></p><p>使用指定用户帐户的权限运行该命令。默认情况下，使用本地计算机当前用户的权限运行该命令。 指定的用户帐户必须是远程计算机上 Administrators 组的成员。只有使用**/s** 时，**/u** 和 <strong>/p</strong> 参数才有效。</p><p><strong>/p <em>Password</em></strong></p><p>指定在 <strong>/u</strong> 参数中指定的用户帐户的密码。如果使用 <strong>/u</strong> 参数，但忽略 <strong>/p</strong> 参数或密码参数，Schtasks 将提示您输入密码。 只有使用 <strong>/s</strong> 时，**/u** 和**/p** 参数才有效。</p><p><strong>/?</strong></p><p>在命令提示符下显示帮助。</p><h5 id="备注-17"><a href="#备注-17" class="headerlink" title="备注"></a>备注</h5><ul><li>  <strong>delete</strong> 操作从计划中删除任务。它不删除任务运行的程序或中断正在运行的程序。</li><li>  <strong>delete *</strong> 命令删除所有为计算机计划的任务，而不仅仅是删除由当前用户计划的任务。</li></ul><h5 id="示例-20"><a href="#示例-20" class="headerlink" title="示例"></a>示例</h5><h5 id="从远程计算机上的计划中删除任务"><a href="#从远程计算机上的计划中删除任务" class="headerlink" title="从远程计算机上的计划中删除任务"></a>从远程计算机上的计划中删除任务</h5><p>下面的命令从远程计算机上的计划中删除“Start Mail”任务。它使用 <strong>/s</strong> 参数来标识远程计算机。 <strong>schtasks /delete /tn “Start Mail” /s Svr16</strong> 作为响应， SchTasks.exe 显示以下确认消息。要删除任务，请键入 <strong>y</strong>。要取消命令，请键入 <strong>n</strong>：</p><p>WARNING: Are you sure you want to remove the task “Start Mail” (Y/N )?<br>SUCCESS: The scheduled task “Start Mail” was successfully deleted.</p><h5 id="删除所有为本地计算机计划的任务。"><a href="#删除所有为本地计算机计划的任务。" class="headerlink" title="删除所有为本地计算机计划的任务。"></a>删除所有为本地计算机计划的任务。</h5><p>下面的命令从本地计算机的计划中删除所有的任务，包括由其他用户计划的任务。它使用 <strong>/tn *</strong> 参数代表计算机上所有的任务，使用**/f** 参数取消确认消息。 <strong>schtasks /delete /tn * /f</strong> 作为响应，SchTasks.exe 显示以下成功消息以表明只删除了计划任务 SecureScript。 <code>SUCCESS: The scheduled task &quot;SecureScript&quot; was successfully deleted.</code></p><h3 id="schtasks-query"><a href="#schtasks-query" class="headerlink" title="schtasks query"></a>schtasks query</h3><p>显示计划在计算机上运行的任务。</p><h5 id="语法-11"><a href="#语法-11" class="headerlink" title="语法"></a>语法</h5><p><strong>Schtasks</strong> [<strong>/query</strong>] [<strong>/fo</strong> {<strong>TABLE</strong> <strong>LIST</strong>  <strong>CSV</strong>}] [<strong>/nh</strong>] [<strong>/v</strong>] [<strong>/s</strong><em>Computer</em> [<strong>/u</strong> [<em>Domain</em><em>*\<strong>]<em>User</em> [</strong>/p</em>*_Password_]]]</p><h5 id="参数-5"><a href="#参数-5" class="headerlink" title="参数"></a>参数</h5><p><strong>[/query]</strong></p><p>操作名称可选。键入不带任何参数的 <strong>schtasks</strong> 执行查询。</p><p><strong>/fo {TABLE LISTCSV}</strong></p><p>指定输出格式。<strong>TABLE</strong> 为默认值。</p><p><strong>/nh</strong></p><p>忽略表格显示中的列标题。此参数对 <strong>TABLE</strong> 和 <strong>CSV</strong> 输出格式有效。</p><p><strong>/v</strong></p><p>将任务的高级属性添加到显示中。 使用 <strong>/v</strong> 的查询格式应该设置为 <strong>LIST</strong> 或 <strong>CSV</strong>。</p><p><strong>/s <em>Computer</em></strong></p><p>指定远程计算机的名称或 IP 地址（带有或不带有反斜杠）。默认设置为本地计算机。</p><p><strong>/u [_Domain_\] <em>User</em></strong></p><p>使用指定用户帐户的权限运行该命令。默认情况下，使用本地计算机当前用户的权限运行该命令。 指定的用户帐户必须是远程计算机上 Administrators 组的成员。只有使用**/s** 时，**/u** 和 <strong>/p</strong> 参数才有效。</p><p><strong>/p <em>Password</em></strong></p><p>指定在 <strong>/u</strong> 参数中指定的用户帐户的密码。如果使用 <strong>/u</strong>，但忽略 <strong>/p</strong> 或密码参数，Schtasks 将提示您输入密码。 只有使用**/s<strong>时，</strong>/u** 和 <strong>/p</strong> 参数才有效。</p><p><strong>/?</strong></p><p>在命令提示符下显示帮助。</p><h5 id="备注-18"><a href="#备注-18" class="headerlink" title="备注"></a>备注</h5><ul><li>  <strong>query</strong> 操作将列出用户有权查看的所有任务。管理员可以查看计算机上的所有任务。用户只能查看他们计划的任务。</li></ul><h5 id="示例-21"><a href="#示例-21" class="headerlink" title="示例"></a>示例</h5><h5 id="显示本地计算机上的计划任务"><a href="#显示本地计算机上的计划任务" class="headerlink" title="显示本地计算机上的计划任务"></a>显示本地计算机上的计划任务</h5><p>下面的命令显示本地计算机计划的所有任务。这些命令得到的结果相同，并可以交换使用。 <strong>schtasks</strong> <strong>schtasks /query</strong> 作为响应，SchTasks.exe 以默认的简单表格格式显示任务，如下表所示：</p><p>TaskName                  Next Run Time            Status<br>========================= ======================== ==============<br>Microsoft Outlook         At logon time<br>SecureScript              14:42:00 PM , 2/4/2001   </p><h5 id="显示已计划任务的高级属性"><a href="#显示已计划任务的高级属性" class="headerlink" title="显示已计划任务的高级属性"></a>显示已计划任务的高级属性</h5><p>下面的命令要求详细的显示本地计算机上的任务。它使用 <strong>/v</strong> 参数来请求详细显示，使用 <strong>/fo LIST</strong> 参数将显示格式化为易于阅读的列表。这个命令可以用来验证创建的任务有预期的循环模式。 <strong>schtasks /query /fo LIST /v</strong> 作为响应，SchTasks.exe 显示所有任务的详细属性列表。以下显示给出了一个计划在每月最后一个周五的上午 4:00 运行的任务列表：</p><p>HostName:                                  RESKIT01<br>TaskName:                                  SecureScript<br>Next Run Time:                             4:00:00 AM , 3/30/2001<br>Status:                                    Not yet run<br>Logon mode:                                Interactive/Background<br>Last Run Time:                             Never<br>Last Result:                               0<br>Creator:                                   user01<br>Schedule:                                  At 4:00 AM on the last Fri of every month, starting 3/24/2001<br>Task To Run:                               C:\WINDOWS\system32\notepad.exe<br>Start In:                                  notepad.exe<br>Comment:                                   N/A<br>Scheduled Task State:                      Enabled<br>Scheduled Type:                            Monthly<br>Modifier:                                  Last FRIDAY<br>Start Time:                                4:00:00 AM<br>Start Date:                                3/24/2001<br>End Date:                                  N/A<br>Days:                                      FRIDAY<br>Months:                                    JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC<br>Run As User:                               RESKIT\user01<br>Delete Task If Not Rescheduled:            Enabled<br>Stop Task If Runs X Hours and X Mins:      72:0<br>Repeat: Until Time:                        Disabled<br>Repeat: Duration:                          Disabled<br>Repeat: Stop If Still Running:             Disabled<br>Idle: Start Time(For IDLE Scheduled Type): Disabled<br>Idle: Only Start If Idle for X Minutes:    Disabled<br>Idle: If Not Idle Retry For X Minutes:     Disabled<br>Idle: Stop Task If Idle State End:         Disabled<br>Power Mgmt: No Start On Batteries:         Disabled<br>Power Mgmt: Stop On Battery Mode:          Disabled</p><h5 id="将为远程计算机计划的任务记入日志"><a href="#将为远程计算机计划的任务记入日志" class="headerlink" title="将为远程计算机计划的任务记入日志"></a>将为远程计算机计划的任务记入日志</h5><p>下面的命令请求为远程计算机计划的任务列表，并将任务添加到本地计算机中以逗号分隔的日志文件中。此命令的格式可以用来收集和跟踪为多个计算机计划的任务。 该命令使用 <strong>/s</strong> 参数标识远程计算机 Reskit16，使用 <strong>/fo</strong> 参数指定格式，使用**/nh** 参数取消列标题。**&gt;&gt;**附加符号将输出重定向到本地计算机 Svr01 上的任务日志 p0102.csv。因为命令在远程计算机上运行，所以本地计算机路径必须是完全合格的。 <strong>schtasks /query /s Reskit16 /fo csv /nh &gt;&gt; \\svr01\data\tasklogs\p0102.csv</strong> 作为响应，SchTasks.exe 会把为计算机 Reskit16 计划的任务添加到本地计算机 Svr01 上的 p0102.csv 文件中。</p><h5 id="备注-19"><a href="#备注-19" class="headerlink" title="备注"></a>备注</h5><ul><li>  此帮助文件描述 Windows Server™ 2003 家族中包含的 Schtasks.exe 的版本。有关 Windows XP Professional 中的 Schtasks.exe 的版本信息，请参阅 Windows XP Professional“帮助”中的 Schtasks 主题。</li><li>  SchTasks.exe 执行与“控制面板”中的“计划任务”相同的操作。您可以一起使用这些工具，也可以互换使用。</li><li>  SchTasks 取代了包含在 Windows 早期版本中的工具 At.exe。尽管 Windows Server™ 2003 家族中仍然包含 At.exe，但是建议使用 Schtasks 这个命令行任务计划工具。</li><li>  Schtasks 命令中的参数可以按任何顺序显示。键入不带任何参数的 <strong>schtasks</strong> 执行查询。</li><li>Schtasks 的权限<ul><li>  必须具有运行该命令的权限。任何用户都可以在本地计算机上计划任务，而且他们可以查看和更改他们所计划的任务。Administrators 组的成员可以计划、查看和更改本地计算机上的所有任务。</li><li>  要在远程计算机上计划、查看或更改任务，您必须是远程计算机上 Administrators 组的成员，或者必须使用 <strong>/u</strong> 参数提供远程计算机管理员的凭据。</li><li>  只有在本地和远程计算机处于同一个域或本地计算机处于远程计算机域信任的域中，您才可以在 <strong>/create</strong> 或**/change** 操作中使用**/u** 参数。否则，远程计算机无法对指定的用户帐户进行身份验证，也无法验证该帐户是否为 Administrators 组的成员。</li><li>  必须具有运行该任务的权限。不同的任务要求不同的权限。默认情况下，使用本地计算机的当前用户权限或使用 <strong>/u</strong> 参数指定的用户权限（如果包含的话）运行任务。要使用不同用户帐户的权限或使用系统权限运行任务，请使用**/ru** 参数。</li></ul></li><li>  要验证计划运行或要找出计划不运行的原因，请查看“任务计划”服务事务日志 _Systemroot_\SchedLgU.txt。该日志记录了由所有使用该服务的工具（包括“计划任务”和 SchTasks.exe 在内）启动的尝试运行。</li><li>损坏任务文件的情况极少发生。已损坏文件不会运行。在已损坏任务上试图执行某项操作时，SchTasks.exe 显示以下错误消息：  ERROR: The data is invalid.  已损坏任务无法恢复。要恢复系统的计划任务特征，请使用 SchTasks.exe 或“计划任务”从系统中删除任务并重新计划。</li></ul><h2 id="格式图例"><a href="#格式图例" class="headerlink" title="格式图例"></a>格式图例</h2><p>格式</p><p>意义</p><p><em>斜体</em></p><p>用户必须提供的信息</p><p><strong>粗体</strong></p><p>用户必须按照显示准确键入的元素</p><p>省略号 (…)</p><p>可在命令行中重复多次的参数</p><p>在括号 ([]) 之间</p><p>可选项目</p><p>在大括号 ({}) 之间；将选项用管线 () 隔开。例如：{evenodd}</p><p>用户必须从中只选择一个选项的选项组</p><p><code>Courier font</code></p><p>代码或程序输出</p><h2 id="另请参阅"><a href="#另请参阅" class="headerlink" title="另请参阅"></a>另请参阅</h2><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p><a href="http://technet.microsoft.com/zh-cn/library/cc778084.aspx">命令行参考 A-Z</a> <a href="http://technet.microsoft.com/zh-cn/library/cc737438.aspx">命令行解释器概述</a> <a href="http://technet.microsoft.com/zh-cn/library/cc755991.aspx">Taskkill</a> <a href="http://technet.microsoft.com/zh-cn/library/cc779419.aspx">任务计划概述</a> <a href="http://technet.microsoft.com/zh-cn/library/cc778200.aspx">任务计划程序最佳操作</a> refer for personal and forward from <a href="http://technet.microsoft.com/zh-cn/library/cc772785.aspx">http://technet.microsoft.com/zh-cn/library/cc772785.aspx</a></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Win10安装后必做的优化，解决磁盘100%占用</title>
      <link href="/2018/12/13/win10-an-zhuang-hou-bi-zuo-de-you-hua-jie-jue-ci-pan-100-zhan-yong/"/>
      <url>/2018/12/13/win10-an-zhuang-hou-bi-zuo-de-you-hua-jie-jue-ci-pan-100-zhan-yong/</url>
      
        <content type="html"><![CDATA[<h5 id="Win10安装后必做的优化，解决磁盘100-占用"><a href="#Win10安装后必做的优化，解决磁盘100-占用" class="headerlink" title="Win10安装后必做的优化，解决磁盘100%占用"></a>Win10安装后必做的优化，解决磁盘100%占用</h5><p>01关闭家庭组</p><p>控制面板–管理工具–服务– HomeGroup Listener和HomeGroup Provider禁用。</p><p>02关闭磁盘碎片整理、自动维护计划任务</p><p>选中磁盘C-属性–工具–对驱动器进行优化和碎片整理–优化–更改设置–取消选择按计划运行。</p><p>03关闭Windows Defender（视情况而定）</p><p>控制面板–Windows Defender –设置–实施保护-去掉勾和管理员–启用 Windows Defender –去掉勾。</p><p>控制面板–管理工具–服务- Windows Defender Service禁用。</p><p>04关闭Windows Search</p><p>控制面板–管理工具–服务- Windows Search禁用。</p><p>05设置好 Superfetch 服务</p><p>控制面板–管理工具–服务– Superfetch -启动类型–自动（延迟启动）。</p><p>06清理Windows.old文件夹</p><p>C盘–右键–属性-磁盘清理-选中以前的Windows 安装复选框–确定清理。</p><p>07设置自动登陆</p><p>Win+R–输入netplwiz-取消使用计算机必须输入用户名和密码的选项–然后双击需要自动登录的账户–输入你的密码。</p><p>08关闭ipv6</p><p>网络共享中心–网络连接–以太网–属性–取消 ipv6 。</p><p>09关闭特效</p><p>系统属性–高级-性能-设置–视觉效果-关闭淡出淡入效果。</p><p>10关闭虚拟内存</p><p>系统属性–高级-性能-设置，选择“高级”，点击虚拟内存中的“更改”，将“自动管理驱动器的分页文件大小”对勾去掉，点击下面的“无分页文件”，点击“设置”并“确定”即可。</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows借助脚本实现自动化加域</title>
      <link href="/2018/12/13/windows-jie-zhu-jue-ben-shi-xian-zi-dong-hua-jia-yu/"/>
      <url>/2018/12/13/windows-jie-zhu-jue-ben-shi-xian-zi-dong-hua-jia-yu/</url>
      
        <content type="html"><![CDATA[<p>Windows借助脚本实现自动化加域 说到自动加域，我们作为一个运维管理员来说，是必须要掌握了的 ，通过脚本提高管理员的工作效率，一般可以将自动加域脚本(前提是需要将脚本加密，内部有明文账户及密码)通过共享的方式然后用户手动执行，前一段时间领导也有这个需求，所以就总了一些，分享给有需要的。 一般分为两步，首先是计算更改计算机名，其次就是加域了；最后是需要将用户增加到管理员组中，保证用户有足够的权限进行操作。 首先是修改计算机名：执行会提示当前的计算机名，然后输入新的计算机名，单击确认即可；</p><pre class="line-numbers language-none"><code class="language-none">Dim revalSet objnet &#x3D; CreateObject (&quot;WScript.Network&quot;)Set R &#x3D; CreateObject(&quot;WScript.Shell&quot;)reval &#x3D; InputBox (&quot;Your ComputerName is：&quot; &amp; objnet.ComputerName,&quot;Input Your new ComputerName&quot;)On Error Resume NextstrComputer &#x3D; &quot;.&quot;Set objWMIService &#x3D; GetObject(&quot;winmgmts:&quot; _    &amp; &quot;&#123;impersonationLevel&#x3D;impersonate&#125;!\\&quot; _    &amp; strComputer &amp; &quot;\root\cimv2&quot;)Set colComputers &#x3D; objWMIService.ExecQuery _    (&quot;Select * from Win32_ComputerSystem&quot;)For Each objComputer in colComputers    errReturn &#x3D; ObjComputer.Rename (reval)    If reval &lt;&gt; &quot;&quot; Then                 return&#x3D;MsgBox (&quot;Reboot Computer?&quot;,vbokcancel+vbexclamation,&quot;tips!&quot;)                If return&#x3D;vbok Then                        R.run(&quot;Shutdown.exe -r -t 0&quot;)                End if    End If Next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改计算机名后，然后就是加域：</p><pre class="line-numbers language-none"><code class="language-none">On Error Resume Nextdim domainset domain &#x3D;createobject(&quot;wscript.shell&quot;)Const JOIN_DOMAIN &#x3D; 1Const ACCT_CREATE &#x3D; 2Const ACCT_DELETE &#x3D; 4Const WIN9X_UPGRADE &#x3D; 16Const DOMAIN_JOIN_IF_JOINED &#x3D; 32Const JOIN_UNSECURE &#x3D; 64Const MACHINE_PASSWORD_PASSED &#x3D; 128Const DEFERRED_SPN_SET &#x3D; 256Const INSTALL_INVOCATION &#x3D; 262144&#39;Domain NamestrDomain &#x3D; &quot;ixmsoft.com&quot;&#39;administrator member passwordstrPassword &#x3D; &quot;123&quot;&#39;administrator memberstrUser &#x3D; &quot;gavin&quot;Set objNetwork &#x3D;CreateObject(&quot;WScript.Network&quot;)strComputer &#x3D; objNetwork.ComputerNameSet objComputer &#x3D; GetObject(&quot;winmgmts:&#123;impersonationLevel&#x3D;Impersonate&#125;!\\&quot;&amp; _strComputer &amp;&quot;\root\cimv2:Win32_ComputerSystem.Name&#x3D;&#39;&quot; &amp; _strComputer &amp; &quot;&#39;&quot;)ReturnValue &#x3D;objComputer.JoinDomainOrWorkGroup(strDomain, _strPassword, strDomain &amp; &quot;\&quot;&amp; strUser, NULL, _JOIN_DOMAIN + ACCT_CREATE)wscript.echo &quot;Join Domain Success!&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后就是将用户增加到管理员组中；</p><pre class="line-numbers language-none"><code class="language-none">dmain_user&#x3D;&quot;ixmsoft\zhangsan&quot;Set objShell&#x3D;wscript.createObject(&quot;wscript.shell&quot;) objshell.Run &quot;net localgroup Administrators &quot; &amp; domain_user &amp; &quot; &#x2F;add&quot;,0,true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上脚本需要执行三次，但是比较麻烦，我们最终将三个脚本的功能合成一个， 执行后，会提示修改计算机名，然后提交后，系统会重启，重启后，会将计算机自动加域。</p><pre class="line-numbers language-none"><code class="language-none">On Error Resume NextErr.ClearSet oWsh &#x3D; CreateObject(&quot;WScript.Shell&quot;)sRegValue &#x3D; oWsh.RegRead(&quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\rr.vbs&quot;)If sRegValue &#x3D; &quot;&quot; Then    Dim reval_all    Set objnet &#x3D; CreateObject (&quot;WScript.Network&quot;)    Set R &#x3D; CreateObject(&quot;WScript.Shell&quot;)    reval_all &#x3D; InputBox (&quot;当前计算机名称：&quot; &amp; objnet.ComputerName &amp; chr(10)&amp;chr(13) &amp; &quot;当前登录名：&quot; &amp; objnet.username &amp; chr(10)&amp;chr(13)  &amp;&quot;请输入新的计算机名和登录账户，用”,“分开.(例子:zhangsan-pc,zhangsan)&quot;  &amp; chr(10)&amp;chr(13) &amp; &quot;注：登陆账户为登陆此计算机的域账户。&quot; ,&quot;请输入计算名和登录名&quot;)    arr1 &#x3D; split(reval_all,&quot;,&quot;)    reval &#x3D; arr1(0)    On Error Resume Next    strComputer &#x3D; &quot;.&quot;    Set objWMIService &#x3D; GetObject(&quot;winmgmts:&quot; _        &amp; &quot;&#123;impersonationLevel&#x3D;impersonate&#125;!\\&quot; _        &amp; strComputer &amp; &quot;\root\cimv2&quot;)    Set colComputers &#x3D; objWMIService.ExecQuery _        (&quot;Select * from Win32_ComputerSystem&quot;)    For Each objComputer in colComputers        errReturn &#x3D; ObjComputer.Rename (reval)        If reval &lt;&gt; &quot;&quot; Then             Dim AutoRunProgram     Set AutoRunProgram &#x3D; WScript.CreateObject(&quot;WScript.shell&quot;)     RegPath &#x3D;&quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\&quot;     Type_Name &#x3D; &quot;REG_SZ&quot;     Key_Name &#x3D; &quot;rr.vbs&quot;     strComputer &#x3D; &quot;.&quot;    Set objWMIService &#x3D; GetObject(&quot;winmgmts:\\&quot; &amp; strComputer &amp; &quot;\root\cimv2&quot;)     Set colItems &#x3D; objWMIService.ExecQuery(&quot;Select * From Win32_Process Where Name &#x3D; &#39;wscript.exe&#39; OR Name &#x3D; &#39;cscript.exe&#39;&quot;)    For Each objItem in colItems        lmq&#x3D; objItem.CommandLine        lmq&#x3D; replace(lmq,Chr(34),&quot;,&quot;)        arr &#x3D; split(lmq,&quot;,&quot;)    Next    Key_data &#x3D; arr(3)    AutorunProgram.RegWrite regpath&amp;Key_Name,Key_data,Type_Name     AutorunProgram.RegWrite &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\loginName&quot;,arr1(1),Type_Name                     return&#x3D;MsgBox (&quot;Please Reboot Computer?&quot;,vbokcancel+vbexclamation,&quot;tips!&quot;)                    If return&#x3D;vbok Then                            R.run(&quot;Shutdown.exe -r -t 0&quot;)                    End if        End If     NextEnd Ifif sRegValue &lt;&gt; &quot;&quot; then    dim domain    set domain &#x3D;createobject(&quot;wscript.shell&quot;)    Const JOIN_DOMAIN &#x3D; 1    Const ACCT_CREATE &#x3D; 2    Const ACCT_DELETE &#x3D; 4    Const WIN9X_UPGRADE &#x3D; 16    Const DOMAIN_JOIN_IF_JOINED &#x3D; 32    Const JOIN_UNSECURE &#x3D; 64    Const MACHINE_PASSWORD_PASSED &#x3D; 128    Const DEFERRED_SPN_SET &#x3D; 256    Const INSTALL_INVOCATION &#x3D; 262144    &#39;Domain Name    strDomain &#x3D; &quot;ixmsoft.com&quot;    &#39;administrator member password    strPassword &#x3D; &quot;Bey0d101&quot;    &#39;administrator member    strUser &#x3D; &quot;addtodomain&quot;    Set objNetwork &#x3D;CreateObject(&quot;WScript.Network&quot;)    strComputer &#x3D; objNetwork.ComputerName    Set objComputer &#x3D; GetObject(&quot;winmgmts:&#123;impersonationLevel&#x3D;Impersonate&#125;!\\&quot;&amp; _    strComputer &amp;&quot;\root\cimv2:Win32_ComputerSystem.Name&#x3D;&#39;&quot; &amp; _    strComputer &amp; &quot;&#39;&quot;)    ReturnValue &#x3D;objComputer.JoinDomainOrWorkGroup(strDomain, _    strPassword, strDomain &amp; &quot;\&quot;&amp; strUser, NULL, _    JOIN_DOMAIN + ACCT_CREATE)       dim wsh     set wsh&#x3D;wscript.createobject(&quot;wscript.shell&quot;)    wsh.regdelete &quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\rr.vbs&quot;    wscript.echo &quot;Join Domain Success!&quot;     Dim oWshNetwork    Set oWshNetwork &#x3D; WScript.CreateObject(&quot;WScript.Network&quot;)    strComputer &#x3D; oWshNetwork.ComputerName    sFlag&#x3D;0    On Error Resume Next    &#39;Set colGroups &#x3D; GetObject(&quot;WinNT:&#x2F;&#x2F;&quot; &amp; strComputer &amp; &quot;&#x2F;Administrators&quot;)    &#39;For Each objUser In colGroups.Members    &#39;Next    strTestString &#x3D; &quot;&#x2F;&quot; &amp; strComputer &amp; &quot;&#x2F;&quot;    Set colGroups &#x3D; GetObject(&quot;WinNT:&#x2F;&#x2F;&quot; &amp; strComputer &amp; &quot;&#x2F;Administrators&quot;)    For Each objUser In colGroups.Members        If InStr(objUser.AdsPath, strTestString) Then            &#39;Wscript.Echo &quot;Local user: &quot; &amp; objUser.Name        &#39;msgbox(objUser.ADsPath)        Else            IF objuser.Name &#x3D; &quot;DomainUser&quot; Then               sFlag&#x3D;1                                   end if         End If    Next    if sFlag&#x3D;0 then     &#39;Set objGroup &#x3D; GetObject(&quot;WinNT:&#x2F;&#x2F;&quot; &amp; strComputer &amp; &quot;&#x2F;Administrators&quot;)    &#39;    Set oWsh &#x3D; CreateObject(&quot;WScript.Shell&quot;)    reval &#x3D; oWsh.RegRead(&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\loginName&quot;)        wsh.regdelete &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\loginName&quot;            adspath &#x3D; &quot;WinNT:&#x2F;&#x2F;ixmsoft&#x2F;&quot; &amp; reval            &#39;msgbox(adspath)            Set objUser &#x3D; GetObject(adspath)            colGroups.Add(objUser.ADsPath)    end if               wscript.echo  &quot;Added Finish&quot;end if<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加域 </tag>
            
            <tag> 管理员 </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftp服务配置文件记录</title>
      <link href="/2018/12/13/ftp-fu-wu-pei-zhi-wen-jian-ji-lu/"/>
      <url>/2018/12/13/ftp-fu-wu-pei-zhi-wen-jian-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>因为南京的客户死活要ftp服务而不是sftp，所以我作手用vsftp作为服务器，尝试在windows ftp软件登录进去，特记录vsftp的用法。</p><p>配置文件在/etc/vsftpd.conf</p><pre class="line-numbers language-none"><code class="language-none">有如下代码：# Example config file &#x2F;etc&#x2F;vsftpd.conf## The default compiled in settings are fairly paranoid. This sample file# loosens things up a bit, to make the ftp daemon more usable.# Please see vsftpd.conf.5 for all compiled in defaults.## READ THIS: This example file is NOT an exhaustive list of vsftpd options.# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&#39;s# capabilities.## Allow anonymous FTP? (Beware - allowed by default if you comment this out).anonymous_enable&#x3D;YES# 设置运行匿名访问登录## Uncomment this to allow local users to log in.local_enable&#x3D;YES# 设置本地用户可以访问，主要是针对虚拟用户# Uncomment this to enable any form of FTP write command.write_enable&#x3D;YES# 设置可以进行写操作# Default umask for local users is 077. You may wish to change this to 022,# if your users expect that (022 is used by most other ftpd&#39;s)local_umask&#x3D;022# 设置上传文件后文件的权限掩码# Uncomment this to allow the anonymous FTP user to upload files. This only# has an effect if the above global write enable is activated. Also, you will# obviously need to create a directory writable by the FTP user.anon_upload_enable&#x3D;YES# 是否允许匿名用户上传# Uncomment this if you want the anonymous FTP user to be able to create# new directories.anon_mkdir_write_enable&#x3D;YES# 是否允许匿名用户创建目录# Activate directory messages - messages given to remote users when they# go into a certain directory.dirmessage_enable&#x3D;YES# 设定开启目录标语功能# Activate logging of uploads&#x2F;downloads.xferlog_enable&#x3D;YES# 设定开启日志记录功能# Make sure PORT transfer connections originate from port 20 (ftp-data).connect_from_port_20&#x3D;YES# 设定端口20进行数据连接# If you want, you can arrange for uploaded anonymous files to be owned by# a different user. Note! Using &quot;root&quot; for uploaded files is not# recommended!#chown_uploads&#x3D;YES# 设置是否允许上传文件更改宿主#chown_username&#x3D;whoever# # You may override where the log file goes if you like. The default is shown# below.xferlog_file&#x3D;&#x2F;var&#x2F;log&#x2F;vsftpd.log# 设置vsftpd的服务日志保存路径，该文件默认不存在，必须手动touch出来# If you want, you can have your log file in standard ftpd xferlog format.# Note that the default log file location is &#x2F;var&#x2F;log&#x2F;xferlog in this case.xferlog_std_format&#x3D;YES# 设置日志使用标准的记录格式# You may change the default value for timing out an idle session.#idle_session_timeout&#x3D;600# 设定空闲的连接超时时间，这里使用默认# You may change the default value for timing out a data connection.#data_connection_timeout&#x3D;120# 设定单次最大的连续传输时间，这里使用默认。# It is recommended that you define on your system a unique user which the# ftp server can use as a totally isolated and unprivileged user.#nopriv_user&#x3D;ftpsecure# 设定支撑vsftpd 服务的宿主用户为手动建立的vsftpd用户。# Enable this and the server will recognise asynchronous ABOR requests. Not# recommended for security (the code is non-trivial). Not enabling it,# however, may confuse older FTP clients.#async_abor_enable&#x3D;YES# 设定支持异步传输功能# By default the server will pretend to allow ASCII mode but in fact ignore# the request. Turn on the below options to have the server actually do ASCII# mangling on files when in ASCII mode.# Beware that on some FTP servers, ASCII support allows a denial of service# attack (DoS) via the command &quot;SIZE &#x2F;big&#x2F;file&quot; in ASCII mode. vsftpd# predicted this attack and has always been safe, reporting the size of the# raw file.# ASCII mangling is a horrible feature of the protocol.#ascii_upload_enable&#x3D;YES#ascii_download_enable&#x3D;YES# 设置支持ASCII的上传以及下载模式# You may fully customise the login banner string:#ftpd_banner&#x3D;Welcome to blah FTP service.# 设置vsftp的登录标语# You may specify a file of disallowed anonymous e-mail addresses. Apparently# useful for combatting certain DoS attacks.#deny_email_enable&#x3D;YES# (default follows)#banned_email_file&#x3D;&#x2F;etc&#x2F;vsftpd.banned_emails## You may specify an explicit list of local users to chroot() to their home# directory. If chroot_local_user is YES, then this list becomes a list of# users to NOT chroot().# (Warning! chroot&#39;ing can be very dangerous. If using chroot, make sure that# the user does not have write access to the top level directory within the# chroot)#chroot_local_user&#x3D;YES#chroot_list_enable&#x3D;YES# 设置是否允许用户登出自己的ftp主目录# (default follows)#chroot_list_file&#x3D;&#x2F;etc&#x2F;vsftpd.chroot_list## You may activate the &quot;-R&quot; option to the builtin ls. This is disabled by# default to avoid remote users being able to cause excessive I&#x2F;O on large# sites. However, some broken FTP clients such as &quot;ncftp&quot; and &quot;mirror&quot; assume# the presence of the &quot;-R&quot; option, so there is a strong case for enabling it.#ls_recurse_enable&#x3D;YES# 设置是否允许用户登录FTP后使用ls -R 的功能，因为这条命令会对系统造成很大的开销# When &quot;listen&quot; directive is enabled, vsftpd runs in standalone mode and# listens on IPv4 sockets. This directive cannot be used in conjunction# with the listen_ipv6 directive.listen&#x3D;YES## This directive enables listening on IPv6 sockets. To listen on IPv4 and IPv6# sockets, you must run two copies of vsftpd with two configuration files.# Make sure, that one of the listen options is commented !!#listen_ipv6&#x3D;YES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>思科华为命令</title>
      <link href="/2018/11/08/si-ke-hua-wei-ming-ling/"/>
      <url>/2018/11/08/si-ke-hua-wei-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>思科、华为、H3C这些网络设备的命令还是挺多的，不过我们一般用的路由交换机设备都是最简单的了，先学基本命令，再学其他功能命令。路由命令是最基本的命令了。 思科、华为、H3C常用命令对比大全</p><table><thead><tr><th>CISCO</th><th>H3C</th><th>HUAWEI</th><th>描述</th></tr></thead><tbody><tr><td>no</td><td>undo</td><td>undo</td><td>取消、关闭当前设置</td></tr><tr><td>show</td><td>display</td><td>display</td><td>显示查看</td></tr><tr><td>exit</td><td>quit</td><td>quit</td><td>退回上级</td></tr><tr><td>hostname</td><td>sysname</td><td>sysname</td><td>设置主机名</td></tr><tr><td>en, config terminal</td><td>system-view</td><td>system-view</td><td>进入全局模式</td></tr><tr><td>delete</td><td>delete</td><td>delete</td><td>删除文件</td></tr><tr><td>reload</td><td>reboot</td><td>reboot</td><td>重启</td></tr><tr><td>write</td><td>save</td><td>save</td><td>保存当前配置</td></tr><tr><td>username</td><td>local-user</td><td>local-user</td><td>创建用户</td></tr><tr><td>shutdown</td><td>shutdown</td><td>shutdown</td><td>禁止、关闭 端口</td></tr><tr><td>show version</td><td>display version</td><td>display version</td><td>显示当前系统版本</td></tr><tr><td>show startup-config</td><td>display  saved-configuration</td><td>display  saved-configuration</td><td>查看已保存过的配置</td></tr><tr><td>show running-config</td><td>display  current-configuration</td><td>display  current-configuration</td><td>显示当前配置</td></tr><tr><td>no debug all</td><td>ctrl+d</td><td>ctrl+d</td><td>取消所有debug命令</td></tr><tr><td>erase startup-config</td><td>reset saved-configuration</td><td>reset saved-configuration</td><td>删除配置</td></tr><tr><td>end</td><td>return</td><td>return</td><td>退到用户视图</td></tr><tr><td>exit</td><td>logout</td><td>logout</td><td>登出</td></tr><tr><td>logging</td><td>info-center</td><td>info-center</td><td>指定信息中心配置信息</td></tr><tr><td>line</td><td>user-interface</td><td>user-interface</td><td>进入线路配置（用户接口）模式</td></tr><tr><td>start-config</td><td>saved-configuration</td><td>saved-configuration</td><td>启动配置</td></tr><tr><td>running-config</td><td>current-configuration</td><td>current-configuration</td><td>当前配置</td></tr><tr><td>host</td><td>ip host</td><td>ip host</td><td>host名字和ip地址对应</td></tr><tr><td>交换部分</td><td></td><td></td><td></td></tr><tr><td>enable password</td><td>set authentication  password simple</td><td>set authentication  password simple</td><td>配置明文密码</td></tr><tr><td>interface type/number</td><td>interface type/number</td><td>interface type/number</td><td>进入接口</td></tr><tr><td>interface vlan 1</td><td>interface vlan 1</td><td>interface vlan 1</td><td>进入vlan配置vlan管理地址</td></tr><tr><td>interface rang</td><td>interface ethID to ID</td><td>interface ethID to ID</td><td>定议多个端口的组</td></tr><tr><td>enabl esecret</td><td>super password</td><td>super password</td><td>设置特权口令</td></tr><tr><td>duplex (half|full|auto)</td><td>duplex (half|full|auto)</td><td>duplex (half|full|auto)</td><td>配置接口状态</td></tr><tr><td>speed (10/100/1000)</td><td>speed (10/100/1000)</td><td>speed (10/100/1000)</td><td>配置端口速率</td></tr><tr><td>switchport mode trunk</td><td>port link-type trunk</td><td>port link-type trunk</td><td>配置trunk</td></tr><tr><td>vlan ID /no vlan ID</td><td>vlan batch ID /undo vlan batch ID</td><td>vlan batch ID /undo vlan batch ID</td><td>添加、删除vlan</td></tr><tr><td>switchport access  vlan</td><td>port default vlan ID</td><td>port acces vlan ID</td><td>将端口接入vlan</td></tr><tr><td>show interface</td><td>display interface</td><td>display interface</td><td>查看接口</td></tr><tr><td>show vlan ID</td><td>display vlan ID</td><td>display vlan ID</td><td>查看vlan</td></tr><tr><td>encapsulation</td><td>link-protocol</td><td>link-protocol</td><td>封装协议</td></tr><tr><td>channel-group 1 mode on</td><td>port link-aggregation  group 1</td><td>port link-aggregation  group 1</td><td>链路聚合</td></tr><tr><td>ip routing</td><td>默认开启</td><td>默认开启</td><td>开启三层交换的路由功能</td></tr><tr><td>no switchport</td><td>不支持</td><td>不支持</td><td>开启接口三层功能</td></tr><tr><td>vtp domain</td><td>GVRP</td><td>GVRP</td><td>对跨以太网交换机的VLAN进行动态注册和删除</td></tr><tr><td>spanning-tree vlan ID  root primary</td><td>stp instance id root primary</td><td>stp instance id root primary</td><td>stp配置根网桥</td></tr><tr><td>spanning-tree vlan ID  priority</td><td>stp primary vlaue</td><td>stp primary vlaue</td><td>配置网桥优先级</td></tr><tr><td>show spanning-tree</td><td>dis stp brief</td><td>dis stp brief</td><td>查看STP配置</td></tr><tr><td>路由部分</td><td></td><td></td><td></td></tr><tr><td>ip route 0.0.0.0  0.0.0.0</td><td>ip route-static  0.0.0.0 0.0.0.0</td><td>ip route-static  0.0.0.0 0.0.0.0</td><td>配置默认路由</td></tr><tr><td>ip route 目标网段+掩码 下一跳</td><td>ip route-static 目标网段+掩码 下一跳</td><td>ip route-static 目标网段+掩码 下一跳</td><td>配置静态路由</td></tr><tr><td>show ip route</td><td>display ip  routing-table</td><td>display ip  routing-table</td><td>查看路由表</td></tr><tr><td>router rip /network 网段</td><td>rip /network 网段</td><td>rip /network 网段</td><td>启用rip、并宣告网段</td></tr><tr><td>router ospf</td><td>ospf</td><td>ospf</td><td>启用ospf</td></tr><tr><td>network ip 反码 area <area-id></area-id></td><td>area  <area-id></area-id></td><td>area  <area-id></area-id></td><td>配置OSPF区域</td></tr><tr><td>no auto-summary</td><td>rip split-horizon</td><td>rip split-horizon</td><td>配置RIP V2水平分割</td></tr><tr><td>show ip protocol</td><td>display ip protocol</td><td>display ip protocol</td><td>查看路由协议</td></tr><tr><td>access-list 1-99  permit/deny IP</td><td>rule id permit source  IP</td><td>rule id permit source  IP</td><td>标准访问控制列表</td></tr><tr><td>access-list 100-199  permit/deny protocol source IP+反码  destination IP+反码 operator operan</td><td>rule  {normal|special}{permit|deny}{tcp|udp}source {<ip wild>|any}destination  <ip wild>|any}[operate]</ip></ip></td><td>rule  {normal|special}{permit|deny}{tcp|udp}source {<ip wild>|any}destination  <ip wild>|any}[operate]</ip></ip></td><td>扩展访问控制列表</td></tr><tr><td>standby group-number  ip virtual-ip</td><td>vrrp vrid number  virtual-ip</td><td>vrrp vrid number  virtual-ip</td><td>配置HSRP组</td></tr><tr><td>standby group-number  priority</td><td>vrrp vrid number  priority</td><td>vrrp vrid number  priority</td><td>配置HSRP优先级</td></tr><tr><td>standby group-number  preempt</td><td>vrrp vrid number  preempt-mode</td><td>vrrp vrid number  preempt-mode</td><td>配置HSRP占先权</td></tr><tr><td>standby group-number  track</td><td></td><td></td><td>配置端口跟踪</td></tr><tr><td>ip nat inside source  static</td><td>nat server global  <ip> [port] inside <ip> port [protocol]</ip></ip></td><td>nat server global  <ip> [port] inside <ip> port [protocol]</ip></ip></td><td>配置静态地址转换</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><p><strong>cisco****常用命令解释</strong></p><p>视图模式介绍：</p><p>普通视图 router&gt;</p><p>特权视图 router#  /在普通模式下输入enable</p><p>全局视图 router(config)#  /在特权模式下输入config t</p><p>接口视图 router(config-if)#    /在全局模式下输入int 接口名称 例如int s0或int e0</p><p>路由协议视图 router（config-route）#   /在全局模式下输入router 动态路由协议名称</p><p>1、基本配置：</p><p>router&gt;enable    /进入特权模式</p><p>router#conf t    /进入全局配置模式</p><p>router(config)#hostname xxx    /设置设备名称就好像给我们的计算机起个名字</p><p>router(config)#enable password   /设置特权口令</p><p>router(config)#no ip domain-lookup    /不允许路由器缺省使用DNS解析命令</p><p>router(config)#line console 0   /进入控制口的服务模式</p><p>router(config-line)#password xxx /要设置console的密码</p><p>router(config-line)#login /使能可以登陆</p><p>router(config-line)#logging synchronous /日志同步</p><p>router(config-line)#exec-timeout 0 0   /设置时间溢出为0</p><p>router(config-line)#line vty 0 4 /进入设置telnet服务模式</p><p>router(config-line)#password xxx /设置telnet的密码</p><p>router(config-line)#login /使能可以登陆</p><p>router(config-line)#exit  /保存退出到特权模式</p><p>router(config)# Service password-encrypt /对所有在路由器上输入的口令进行暗文加密</p><p><strong>2****、接口配置：</strong> </p><p>router(config)#interface serial0 /进入接口配置模式 serial 0 端口配置（如果是模块化的路由器前面加上槽位编号，例如serial0/0 代表这个路由器的0槽位上的第一个接口）</p><p>router(config-if)#ip address xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx  /添加ip 地址和掩码</p><p>router(config-if)#enca hdl/ppp   捆绑链路协议 hdlc 或者 ppp 思科缺省串口封装的链路层协议是HDLC所以在show run配置的时候接口上的配置没有，如果要封装为别的链路层协议例如PPP/FR/X25就是看到接口下的enca ppp或者enca fr</p><p>router(config)#int loopback    /建立环回口(逻辑接口)模拟不同的本机网段</p><p>router(config-if)#ip add xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx  /添加ip 地址和掩码给环回口</p><p>router(config-if)#no shutdown   /在物理接口上配置了ip地址后用no shut启用这个物理接口反之可以用shutdown管理性的关闭接口</p><p>3、路由配置：</p><p>(1)静态路由</p><p>router(config)#ip route xxx.xxx.xxx.xxx xxx.xxx.xxx.xxx 下一条或自己的接口</p><p>router(config)#ip route 0.0.0.0 0.0.0.0 s 0    添加缺省路由</p><p>(2)动态路由</p><p>rip协议</p><p>router(config)#router rip  /启动rip协议</p><p>router(config-router)#network xxx.xxx.xxx.xxx   /宣告自己的网段</p><p>router(config-router)#version 2   转换为rip 2版本</p><p>router(config-router)#no auto-summary   /关闭自动汇总功能，rip V2才有作用</p><p>router(config-router)# passive-int 接口名 /启动本路由器的那个接口为被动接口</p><p>router(config-router)# nei xxx.xxx.xxx.xxx /广播转单播报文，指定邻居的接ip</p><p>igrp协议</p><p>router(config)#router igrp xxx    /启动igrp协议</p><p>router(config-router)#network xxx.xxx.xxx.xxx   /宣告自己的网段</p><p>router(config-router)#variance xxx /调整倍数因子，使用不等价的负载均衡</p><p>eigrp协议</p><p>router(config)router eigrp xxx    /启动协议</p><p>router(config-router)#network xxx.xxx.xxx.xxx   /宣告自己的网段</p><p>router(config-router)#variance xxx /调整倍数因子，使用不等价的负载均衡</p><p>router(config-router)#no auto-summary    /关闭自动汇总功能</p><p>ospf协议</p><p>router(config)router ospf xxx    /启动协议启动一个OSPF协议进程</p><p>router(config-router)network xxx.xxx.xxx.xxx area xxx /宣告自己的接口或网段在ospf的区域中可以把不同接口宣告在不同区域中</p><p>router(config-router)router-id xxx.xxx.xxx.xxx   /配置路由的id</p><p>router(config-router)aera xxx stub  /配置xxx区域为末梢区域 加入这个区域的路由器全部要配置这个条命令</p><p>router(config-router)aera xxx stub no-summary    /配置xxx区域为完全末梢区域 只在ABR上配置</p><p>router(config-router)aera xxx nssa  /配置xxx区域为非纯末梢区域加入这个区域的路由器全部要配置这个条命令</p><p>router(config-router)aera xxx nssa no-summary    /配置xxx区域为完全非纯末梢区域 只在ABR上配置,并发布缺省路由信息进入这个区域内的路由器</p><p>4、保存当前修改/运行的配置：</p><p>router#write  /将RAM中的当前配置存储到NVRAM中，下次路由器启动就是</p><p>执行保存的配置</p><p>router#Copy running-config startup-config  /命令与write效果一样</p><p><strong>5****、一般的常用命令</strong></p><p>router(config-if)#exit</p><p>router(config)#</p><p>router(config-router)#exit</p><p>router(config)#</p><p>router(config-line)#exit</p><p>router(config)#</p><p>router(config)#exit</p><p>router#</p><p>exit命令     /从接口、协议、line等视图模式下退回到全局配置模式，或从全局配置模式退回到特权模式</p><p>router(config-if)#end</p><p>router(config-router)#end</p><p>router(config-line)#end</p><p>router#</p><p>end命令   /从任何视图直接回到特权模式</p><p>router#Logout     /退出当前路由器登陆模式相对与windows的注销</p><p>router#reload     /重新启动路由器（热启动）冷启动就是关闭路由器再打开电源开关</p><p>特权模式下：</p><p>router#show ip route      /查看当前的路由表</p><p>router#clear ip route *    /清楚当前的路由表</p><p>router#show ip protocol    /查看当前路由器运行的动态路由协议情况</p><p>router#show ip int brief    /查看当前的路由器的接口ip地址启用情况</p><p>router#show running-config  /查看当前运行配置</p><p>router#show startup-config  /查看启动配置</p><p>router#debug ip pack      /打开ip报文的调试</p><p>router#terminal monitor    /输出到终端上显示调试信息</p><p>router#show ip eigrp neighbors    /查看eigrp协议的邻居表</p><p>router#show ip eigrp top    /查看eigrp协议的拓朴表</p><p>router#show ip eigrp interface    /查看当前路由器运行eigrp协议的接口情况</p><p>router#show ip ospf neighbor     /查看当前路由器的ospf协议的邻居表</p><p>router#show ip ospf interface    /查看当前路由器运行ospf协议的接口情况</p><p>router#clear ip ospf process     /清楚当前路由器ospf协议的进程</p><p>router#Show interfaces     /显示设置在路由器和访问服务器上所有接口的统计信息. 显示路由器上配置的所有接口的状态</p><p>router#Show interfaces serial    /显示关于一个串口的信息</p><p>router#Show ip interface    /列出一个接口的IP信息和状态的小结, 列出接口的状态和全局参数</p><p>――――――――――――――――――――――――</p><p><strong>CISCO****命令全集　－　思科命令汇总</strong></p><p>Access-enable   允许路由器在动态访问列表中创建临时访问列表入口</p><p>Access-group   把访问控制列表(ACL)应用到接口上</p><p>Access-list    定义一个标准的IP ACL</p><p>Access-template     在连接的路由器上手动替换临时访问列表入口</p><p>Appn    向APPN子系统发送命令</p><p>Atmsig       执行ATM信令命令</p><p>B     手动引导操作系统</p><p>Bandwidth     设置接口的带宽</p><p>Banner motd    指定日期信息标语</p><p>Bfe    设置突发事件手册模式</p><p>Boot system    指定路由器启动时加载的系统映像</p><p>Calendar      设置硬件日历</p><p>Cd     更改路径</p><p>Cdp enable     允许接口运行CDP协议</p><p>Clear   复位功能</p><p>Clear counters      清除接口计数器</p><p>Clear interface     重新启动接口上的硬件逻辑</p><p>Clockrate     设置串口硬件连接的时钟速率，如网络接口模块和接口处理器能接受的速率</p><p>Cmt    开启/关闭FDDI连接管理功能</p><p>Config-register     修改配置寄存器设置</p><p>Configure     允许进入存在的配置模式，在中心站点上维护并保存配置信息</p><p>Configure memory     从NVRAM加载配置信息</p><p>Configure terminal    从终端进行手动配置</p><p>Connect      打开一个终端连接</p><p>Copy    复制配置或映像数据</p><p>Copy flash tftp     备份系统映像文件到TFTP服务器</p><p>Copy running-config startup-config   将RAM中的当前配置存储到NVRAM</p><p>Copy running-config tftp     将RAM中的当前配置存储到网络TFTP服务器上</p><p>Copy tftp flash     从TFTP服务器上下载新映像到Flash</p><p>Copy tftp running-config 从TFTP服务器上下载配置文件</p><p><strong>Debug</strong> <strong>使用调试功能</strong></p><p>Debug dialer 显示接口在拨什么号及诸如此类的信息</p><p>Debug ip rip 显示RIP路由选择更新数据</p><p>Debug ipx routing activity 显示关于路由选择协议(RIP)更新数据包的信息</p><p>Debug ipx sap 显示关于SAP（业务通告协议）更新数据包信息</p><p>Debug isdn q921 显示在路由器D通道ISDN接口上发生的数据链路层（第2层）的访问过程</p><p>Debug ppp 显示在实施PPP中发生的业务和交换信息</p><p>Delete 删除文件</p><p>Deny 为一个已命名的IP ACL设置条件</p><p>Dialer idle-timeout 规定线路断开前的空闲时间的长度</p><p>Dialer map 设置一个串行接口来呼叫一个或多个地点</p><p>Dialer wait-for-carrier-time 规定花多长时间等待一个载体</p><p>Dialer-group 通过对属于一个特定拨号组的接口进行配置来访问控制</p><p>Dialer-list protocol 定义一个数字数据接受器（DDR）拨号表以通过协议或ACL与协议的组合来控制控制拨号</p><p>Dir 显示给定设备上的文件</p><p>Disable 关闭特许模式</p><p>Disconnect 断开已建立的连接</p><p>Enable 打开特许模式</p><p>Enable password 确定一个密码以防止对路由器非授权的访问</p><p>Enable password 设置本地口令控制不同特权级别的访问</p><p>Enable secret 为enable password命令定义额外一层安全性</p><p>Encapsulation frame-relay 启动帧中继封装</p><p>Encapsulation novell-ether 规定在网络段上使用的Novell独一无二的格式</p><p>Encapsulation PPP 把PPP设置为由串口或ISDN接口使用的封装方法</p><p>Encapsulation sap 规定在网络段上使用的以太网802.2格式Cisco的密码是sap</p><p>End 退出配置模式</p><p>Erase 删除闪存或配置缓存</p><p>Erase startup-config 删除NVRAM中的内容</p><p>Exec-timeout 配置EXEC命令解释器在检测到用户输入前所等待的时间</p><p>Exit 退出所有配置模式或者关闭一个激活的终端会话和终止一个EXEC</p><p>Exit 终止任何配置模式或关闭一个活动的对话和结束EXEC</p><p>format 格式化设备</p><p>Frame-relay local-dlci 为使用帧中继封装的串行线路启动本地管理接口（LMI）</p><p>Help 获得交互式帮助系统</p><p>History 查看历史记录</p><p>Hostname 使用一个主机名来配置路由器，该主机名以提示符或者缺省文件名的方式使用</p><p>Interface 设置接口类型并且输入接口配置模式</p><p>Interface 配置接口类型和进入接口配置模式</p><p>Interface serial 选择接口并且输入接口配置模式</p><p>Ip access-group 控制对一个接口的访问</p><p>Ip address 设定接口的网络逻辑地址</p><p>Ip address 设置一个接口地址和子网掩码并开始IP处理</p><p>Ip default-network 建立一条缺省路由</p><p>Ip domain-lookup 允许路由器缺省使用DNS</p><p>Ip host 定义静态主机名到IP地址映射</p><p>Ip name-server 指定至多6个进行名字-地址解析的服务器地址</p><p>Ip route 建立一条静态路由</p><p>Ip unnumbered 在为给一个接口分配一个明确的IP地址情况下，在串口上启动互联网协议（IP）的处理过程</p><p>Ipx delay 设置点计数</p><p>Ipx ipxwan 在串口上启动IPXWAN协议</p><p>Ipx maximum-paths 当转发数据包时设置Cisco IOS软件使用的等价路径数量</p><p>Ipx network 在一个特定接口上启动互联网数据包交换（IPX）的路由选择并且选择封装的类型（用帧封装）</p><p>Ipx router 规定使用的路由选择协议</p><p>Ipx routing 启动IPX路由选择</p><p>Ipx sap-interval 在较慢的链路上设置较不频繁的SAP（业务广告协议）更新</p><p>Ipx type-20-input-checks 限制对IPX20类数据包广播的传播的接受</p><p>Isdn spid1 在路由器上规定已经由ISDN业务供应商为B1信道分配的业务简介号（SPID）</p><p>Isdn spid2 在路由器上规定已经由ISDN业务供应商为B2信道分配的业务简介号（SPID）</p><p>Isdn switch-type 规定了在ISDN接口上的中央办公区的交换机的类型</p><p>Keeplive 为使用帧中继封装的串行线路LMI（本地管理接口）机制</p><p>Lat 打开LAT连接</p><p>Line 确定一个特定的线路和开始线路配置</p><p>Line concole 设置控制台端口线路</p><p>Line vty 为远程控制台访问规定了一个虚拟终端</p><p>Lock 锁住终端控制台</p><p>Login 在终端会话登录过程中启动了密码检查</p><p>Login 以某用户身份登录，登录时允许口令验证</p><p>Mbranch 向下跟踪组播地址路由至终端</p><p><strong>Media-type</strong> <strong>定义介质类型</strong></p><p>Metric holddown 把新的IGRP路由选择信息与正在使用的IGRP路由选择信息隔离一段时间</p><p>Mrbranch 向上解析组播地址路由至枝端</p><p>Mrinfo 从组播路由器上获取邻居和版本信息</p><p>Mstat 对组播地址多次路由跟踪后显示统计数字</p><p>Mtrace 由源向目标跟踪解析组播地址路径</p><p>Name-connection 命名已存在的网络连接</p><p>Ncia 开启/关闭NCIA服务器</p><p>Network 把一个基于NIC的地址分配给一个与它直接相连的路由器把网络与一个IGRP的路由选择的过程联系起来在IPX路由器配置模式下，在网络上启动加强的IGRP</p><p>Network 指定一个和路由器直接相连的网络地址段</p><p>Network-number 对一个直接连接的网络进行规定</p><p>No shutdown 打开一个关闭的接口</p><p>Pad 开启一个X.29 PAD连接</p><p>Permit 为一个已命名的IP ACL设置条件</p><p>Ping 把ICMP响应请求的数据包发送网络上的另一个节点检查主机的可达性和网络的连通性对网络的基本连通性进行诊断</p><p>Ping 发送回声请求，诊断基本的网络连通性</p><p>Ppp 开始IETF点到点协议</p><p>Ppp authentication 启动Challenge握手鉴权协议（CHAP）或者密码验证协议（PAP）或者将两者都启动，并且对在接口上选择的CHAP和PAP验证的顺序进行规定</p><p>Ppp chap hostname 当用CHAP进行身份验证时，创建一批好像是同一台主机的拨号路由器</p><p>Ppp chap password 设置一个密码，该密码被发送到对路由器进行身份验证的主机命令对进入路由器的用户名/密码的数量进行了限制</p><p>Ppp pap sent-username 对一个接口启动远程PAP支持，并且在PAP对同等层请求数据包验证过程中使用sent-username和password</p><p>Protocol 对一个IP路由选择协议进行定义，该协议可以是RIP，内部网关路由选择协议（IGRP），开放最短路径优先（OSPF），还可以是加强的IGRP</p><p>Pwd 显示当前设备名</p><p>Reload 关闭并执行冷启动；重启操作系统</p><p>Rlogin 打开一个活动的网络连接</p><p>Router 由第一项定义的IP路由协议作为路由进程，例如：router rip 选择RIP作为路由协议</p><p>Router igrp 启动一个IGRP的路由选择过程</p><p>Router rip 选择RIP作为路由选择协议</p><p>Rsh 执行一个远程命令</p><p>Sdlc 发送SDLC测试帧</p><p>Send 在tty线路上发送消息</p><p>Service password-encryption 对口令进行加密</p><p>Setup 运行Setup命令</p><p>Show 显示运行系统信息</p><p>Show access-lists 显示当前所有ACL的内容</p><p>Show buffers 显示缓存器统计信息</p><p>Show cdp entry 显示CDP表中所列相邻设备的信息</p><p>Show cdp interface 显示打开的CDP接口信息</p><p>Show cdp neighbors 显示CDP查找进程的结果</p><p>Show dialer 显示为DDR（数字数据接受器）设置的串行接口的一般诊断信息</p><p>Show flash 显示闪存的布局和内容信息</p><p>Show frame-relay lmi 显示关于本地管理接口（LMI）的统计信息</p><p>Show frame-relay map 显示关于连接的当前映射入口和信息</p><p>Show frame-relay pvc 显示关于帧中继接口的永久虚电路（pvc）的统计信息</p><p>Show hosts 显示主机名和地址的缓存列表</p><p>Show ip protocols 显示活动路由协议进程的参数和当前状态</p><p>Show ip route 显示路由选择表的当前状态</p><p>Show ip router 显示IP路由表信息</p><p>Show ipx interface 显示Cisco IOS软件设置的IPX接口的状态以及每个接口中的参数</p><p>Show ipx route 显示IPX路由选择表的内容</p><p>Show ipx servers 显示IPX服务器列表</p><p>Show ipx traffic 显示数据包的数量和类型</p><p>Show isdn active 显示当前呼叫的信息，包括被叫号码、建立连接前所花费的时间、在呼叫期间使用的自动化操作控制（AOC）收费单元以及是否在呼叫期间和呼叫结束时提供AOC信息</p><p>Show isdn ststus 显示所有isdn接口的状态、或者一个特定的数字信号链路（DSL）的状态或者一个特定isdn接口的状态</p><p>Show memory 显示路由器内存的大小，包括空闲内存的大小</p><p>Show processes 显示路由器的进程</p><p>Show protocols 显示设置的协议</p><p>Show protocols 显示配置的协议。这条命令显示任何配置了的第3层协议的状态</p><p>Show running-config 显示RAM中的当前配置信息</p><p>Show spantree 显示关于虚拟局域网（VLAN）的生成树信息</p><p>Show stacks 监控和中断程序对堆栈的使用，并显示系统上一次重启的原因</p><p>Show startup-config 显示NVRAM中的启动配置文件</p><p>Show ststus 显示ISDN线路和两个B信道的当前状态</p><p>Show version 显示系统硬件的配置，软件的版本，配置文件的名称和来源及引导映像</p><p>Shutdown 关闭一个接口</p><p>Telnet 开启一个telect连接</p><p>Term ip 指定当前会话的网络掩码的格式</p><p>Term ip netmask-format 规定了在show命令输出中网络掩码显示的格式</p><p>Timers basic 控制着IGRP以多少时间间隔发送更新信息</p><p>Trace 跟踪IP路由</p><p>Username password 规定了在CHAP和PAP呼叫者身份验证过程中使用的密码</p><p>Verify 检验flash文件</p><p>Where 显示活动连接</p><p>Which-route OSI路由表查找和显示结果</p><p>Write 运行的配置信息写入内存，网络或终端</p><p>Write erase 现在由copy startup-config命令替换</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cisco常用命令大全</title>
      <link href="/2018/11/08/cisco-chang-yong-ming-ling-da-quan/"/>
      <url>/2018/11/08/cisco-chang-yong-ming-ling-da-quan/</url>
      
        <content type="html"><![CDATA[<p>路由器的几个基本命令：</p><p>Router&gt;enable 进入特权模式</p><p>Router#disable 从特权模式返回到用户模式</p><p>Router#configure terminal 进入到全局配置模式</p><p>Router(config)#interface ethernet 1 进入到路由器编号为1的以太网口</p><p>exit 返回上层模式 end 直接返回到特权模式</p><p>=========================================================</p><p>注意：</p><p>1、CISCO CATALYST（交换机），如果在初始化时没有发现“用户配置”文件，就会自动载入Default Settings（默认配置）文件，进行交换机初始化，以确保交换机正常工作。</p><p>2、CISCO Router（路由器）在初始化时，如果没有发现“用户配置”文件，系统会自动进入到“初始化配置模式”（系统配置对话模式，SETUP模式， STEP BY STEP CONFIG模式），不能正常工作！</p><p>=========================================================</p><p>1、CONSOLE PORT（管理控制台接口）：距离上限制，独占的方式。刚开始配置的时候一般使用这个。</p><p>2、AUX port（辅助管理接口）：可以挂接MODEM实现远程管理，独占的方式。</p><p>3、Telnet：多人远程管理（决定于性能，VTY线路数量）不安全。后期维护，远程管理登陆。</p><p>=========================================================</p><p>注意：</p><p>交换机、路由器配置命令都是回车后立即执行，立即生效的。在运行中的机器上修改命令的时候要特别注意。</p><p>=========================================================</p><p>Router(config)#hostname ? WORD This system’s network name</p><p>在配置模式下修改当前主机的本地标识，例： —————— Router(config)#hostname r11 r11(config)# ——————</p><p>r11(config-if)#ip address ? A.B.C.D IP address 为当前端口设置IP地址，使用前先进入需要配置的端口，例： —————— r11(config)#interface ethernet 1 r11(config-if)#ip address 172.16.1.1 255.255.255.0 ——————</p><p>r11&gt;show version r11#show version 观察IOS版本，设备工作时间，相关接口列表</p><p>r11#show running-config 查看当前生效的配置，此配置文件存储在RAM</p><p>r11#show interfaces ethernet 1 查看以太网接口的状态，工作状态等等等…</p><p>=========================================================</p><p>r11#reload 重新加载Router（重启）</p><p>r11#setup 手工进入setup配置模式</p><p>r11#show history 查看历史命令（最近刚用过的命令）</p><p>r11#terminal history size &lt;0-256&gt; 设置命令缓冲区大小，0 : 代表不缓存</p><p>r11#copy running-config startup-config 保存当前配置</p><p>注意概念：</p><p>nvram：非易失性内存，断电信息不会丢失 &lt;– 用户配置 &lt;– 保存着startup-config</p><p>ram：随机存储器，断电信息全部丢失 &lt;– 当前生效配置 &lt;– 保存着running-config</p><p>startup-config：在每次路由器或是交换机启动时候，会主动加载（默认情况）</p><p>=========================================================</p><p>设置说明和密码的几个命令：</p><p>r11(config)#banner motd [char c] 同时要以[char c]另起一行结束，描述机器登陆时的说明</p><p>r11(config-if)#description 描述接口注释，需要在端口配置模式下</p><p>配置console口密码： —————— r11(config)#line console 0 进入到consolo 0</p><p>r11(config-line)#password eliuzd 设置一个密码为“eliuzd”</p><p>r11(config-line)#login 设置login（登陆）时使用密码 ——————</p><p>配置enable密码： —————— r11(config)#enable password cisco 设置明文的enable密码</p><p>r11(config)#enable secret eliuzd 设置暗文的enable密码（优先于明文被使用）</p><p>r11(config)#service password-encryption 加密系统所有明文密码（功能较弱） ——————</p><p>配置Telnet密码： —————— r11(config)#line vty 0</p><p>r11(config-line)#password cisco</p><p>r11(config-line)#login ——————</p><p>=========================================================</p><p>配置虚拟回环接口：（回环接口默认为UP状态）</p><p>(config)# 下，虚拟一个端口</p><p>—————— r11(config)#interface loopback 0 创建一个回环接口loopback 0</p><p>r11(config-if)#ip address 192.168.1.1 255.255.255.0 配置它的IP地址</p><p>no * 做配置的反向操作（删除配置） ——————</p><p>=========================================================</p><p>路由器 DCE/DTE 仅存在广域网中</p><p>r11#show controllers serial 0 用于查看DCE与DTE的属性，serial 0路由器广域网端口</p><p>DCE的Router需要配置时钟频率</p><p>r11(config-if)#clock rate ? 配置DCE接口的时钟频率（系统指定频率）</p><p>一般实际情况下，这个不需要自己配置，因为DCE设备都在运营商那。</p><p>=========================================================</p><p>r11#show interfaces serial 1 查看端口状态，第一行提示说明</p><p>Serial1 is administratively down, Line protocol is down 没有使用no shutdown命令激活端口</p><p>Serial1 is down, Line protocol is down 1、对方没有no shutdown激活端口 2、线路损坏，接口没有任何连接线缆</p><p>Serial1 is up, line protocol is down 1、对方没有配置相同的二层协议，Serial接口default encapsulation: HDLC 2、可能没有配置时钟频率 3、可能没有正确的配置三层地址（可能）</p><p>Serial1 is up，line protocol is up 接口工作正常</p><p>=========================================================</p><p>查看CDP信息的几个命令：</p><p>r11#show cdp neighbors 查看CDP的邻居（不含IP）</p><p>r11#show cdp neighbors detail 查看CDP的邻居（包含三层的IP地址）</p><p>r11#show cdp entry * 查看CDP的邻居（包含三层的IP地址）老命令</p><p>r1(config)#no cdp run 在全局配置模式关闭CDP协议（影响所有的接口）</p><p>r1(config-if)#no cdp enable 在接口下关闭CDP协议（仅仅影响指定的接口）</p><p>r11#clear cdp table 清除CDP邻居表</p><p>r11#show cdp interface serial 1 查看接口的CDP信息</p><p>注意两个提示：</p><p>Sending CDP packets every 60 seconds（每60秒发送cdp数据包）</p><p>HoldTime 180 seconds（每个cdp数据包保持180秒）</p><p>=========================================================</p><p>r11(config)#ip host <name> <ip> 设置静态的主机名映射</ip></name></p><p>r11#show sessions 查看设置过的映射主机名</p><p>=========================================================</p><p>Telnet <em>.</em>.<em>.</em> 被telnet的设备，需要设置line vty的密码，如果需要进入特权模式需要配置enable密码</p><p>例： —————— Router#telnet 192.168.1.1 ——————</p><p>Router#show users 查看登录到本地的用户 Router#show sessions 查看从本地telnet外出的会话</p><p>Router#clear line * 强制中断“telnet到本地”的会话 Router#disconnect * 强制中断“telnet外出”的会话</p><p>=========================================================</p><p>以下只是在实验时连接交换机上切换登陆路由器的命令，可以跳过。</p><blockquote><p>show hosts 显示当前的主机名配置 &gt;show sessions 显示当前的外出TELNET会话</p></blockquote><blockquote><p>clear line XXX 清除线路</p></blockquote><p><ctrl>+<z> 直接返回到特权模式 <ctrl>+<shift>+&lt;6&gt; + x</shift></ctrl></z></ctrl></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IT菜鸟如何才能获得成功？-纯干货！</title>
      <link href="/2018/11/08/it-cai-niao-ru-he-cai-neng-huo-de-cheng-gong-chun-gan-huo/"/>
      <url>/2018/11/08/it-cai-niao-ru-he-cai-neng-huo-de-cheng-gong-chun-gan-huo/</url>
      
        <content type="html"><![CDATA[<p>学了再多的技术，也不如领悟一点运维思想重要，且看老男孩老师的多年成功心经分享。</p><p>1、做一个靠谱，被信任的人。</p><p>这是一个人的成功之本。</p><p>忠诚、靠谱，被信任是当前社会职场所有人当中最为稀缺的的素质。希望老男孩的学生能具备。</p><p>即使是211,985毕业的大学生，也只是一个敲门砖而已，真正决定发展的好坏，还是做人做事的态度和能力。所以即使你没学历也不要气馁，学会老男孩老师说的做人做事态度，一样可以牛气冲天。</p><p>从自身小事做起，做一个勤奋，努力，不计较，不抱怨的人。</p><p>学会积极主动的去做事情，快速完成领导交给的任务，学会把加班、帮人解决问题当享受，年轻吃点亏真不是坏事，别遇事躲着然后当着领导面表现，这些小聪明没用的。</p><p>学会把公司当做是自己开的，或者自己是股东之一，用这个思想和态度去工作。</p><p>学会坚持，不要努力了一点点，就要求回报，一旦没有回报就到处吐槽。就算老板没给你</p><p>加薪进爵，你也得到了回报的，起码成长了（经验和能力，态度习惯）。</p><p>老板没有傻子，当你还没有回报时，多反问自己做的是否真的足够好，真的足够持久，</p><p>如果真的是，那你完全可以解雇老板，总有下一个人会赏识有态度的你，当然，前提是你养成了上述的忠诚、靠谱，被信任的态度。</p><p> </p><p>2、把所有精力都集中到一点</p><p>这是一个人成功的关键思想</p><p>先来个故事。</p><p>有一次，一个年轻人问法拉第：请问您能告诉我您成功的秘诀么？</p><p>法拉第问：你能让眼前的阳光点燃一张纸么？年轻人说：不能！他就拿出一个放大镜来，放在阳光下，很快就点燃了一张纸！法拉第说：年轻人：把你的所有精力都集中到一点上去，你就能成功啊！</p><p>老男孩喜欢象棋和围棋，还是拿这个比喻吧。</p><p>下象棋：关键是擒老将。</p><p>老男孩老师经常把少数有杀伤力的子力集中在一点，快速突破，擒老将！为了达到这个目的，还要学会弃子攻杀，弃子谋势，弃子占先，这样你的优势子力集中在一点才能发挥作用，因为对手也不是傻子，所以，你必须要有付出才可能赢的，随随便便成功都是不可能的。</p><p>从学习上说，就是集中自己的所有休息以外的时间（谈恋爱，打游戏，扯蛋都放弃），在这4-5个月把所有时间都让给了学习linux，和上面下棋弃子谋势，占先是一个道理，只有这样你才有赢得你的“棋局”的可能。脱产班学生最好每天学习时间不低于10个小时。周末班学生每天不低于4-6个小时学习时间，这是老男孩老师认为linux菜鸟成功的必要基础。</p><p> </p><p>3、把基础搞熟练，把会的搞精通。就能触类旁通。</p><p>这是一个人成功的必要基础</p><p>古代的师傅教徒弟武功，基本都是先从马步开始，基本功可能都要练习2-3年，在开始习武，可见基础的重要。</p><p> </p><p>拿象棋来讲，基本功就是，基本布局定式演变要熟练，总听人说可以预先看5-6步，这些都是基础牢固的直接表现，例如：中炮局，夹马炮，屏风马，横车顺炮，龟背炮等这些基础布局要熟练，然后基本杀法要成定式，例如：马擒单士，车擒双相，车擒双士、铁门栓，大刀剜心，弃马十三先等。</p><p> </p><p>20多年前看过的一个马擒单士的口诀至今还记得。1、将头马。2、炮花定将。3、相位将军吃士。这个口诀就是解决马擒单士的效率问题，下棋都是有时间和步骤限制的。到运维成面，就是解决个问题你一解决一小时，人家瞬间就能搞定。这些都是基础是否牢固问题决定的。</p><p> </p><p>现在的媒体很可恶，总是引导菜鸟们，关注高大上的技术，例如：大数据，云计算，机器学习。</p><p>结果很多菜鸟学了很久也还是一事无成。究其原因，没有基础啊，学啥都是没用的。</p><p>老男孩教育运维就业班的课程第一抓重点讲，第二讲的细，最后把知识从点变线成网。8套集群架构实战实现。这也是老男孩教育学生就业工资普遍比其他机构高的原因之一。修炼好基础，才能厚积薄发。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何快速的增加自己的行业经验？</title>
      <link href="/2018/11/08/ru-he-kuai-su-de-zeng-jia-zi-ji-de-hang-ye-jing-yan/"/>
      <url>/2018/11/08/ru-he-kuai-su-de-zeng-jia-zi-ji-de-hang-ye-jing-yan/</url>
      
        <content type="html"><![CDATA[<p>如何快速的增加自己的行业经验？</p><p>本来这一篇文章是要推后来写的，因为这个话题是需要经历过的才会有感悟，入行也没多久，也不敢妄自决断，不过，适应环境这几天，遇到了一些问题，虽然说这些问题跟平时也没多大的差异，但从这件事情上，感觉出了自己的无知，在不改变这种状态，自己的未来估计不会太有太大的发展了！希望拿出自己的经历感受，与大家一起感受，改变，为未来准备好我们的状态！</p><p>案例说明</p><p>开篇我来说明几个案例：</p><p>1，上次面试一个工程师，大概是做这行有8年了，但面试结果却差强人意！</p><p>2，不知道是在哪里听到的：30%靠经验，70%靠网络来解决问题！就像上次UFO发的那个帖子：<a href="http://bbs.51cto.com/thread-942931-1.html">http://bbs.51cto.com/thread-942931-1.html</a>  你是否有搜索引擎依赖症？</p><p>问题提出这里我想请问大家：“经验是什么？” 这里为大家推荐一篇blog可以看下：<a href="http://z00w00.blog.51cto.com/515114/865300">http://z00w00.blog.51cto.com/515114/865300</a> （所谓经验，未必是扯淡），首先，我们看一下，什么叫经验?百度百科是这么解释的：</p><p>(1)从多次实践中得到的知识或技能</p><p>      经验丰富</p><p>(2) 人亲身经历</p><p>     对那里的严寒,他是有经验的</p><p>我们暂且不看第二点，就从第一点来说：“从多次实践中得到的知识或技能”！</p><p>问题分析</p><p>知道了什么的经验后我们开始分析：</p><p>1，相对来说，对于每一个行业，我们来分辨大师，高手的时候，在没有深入了解前我们首先就是从工作年限来判断，在多种场合，经常看到某一个人工作了很多年，然后其他人羡慕嫉妒，我们心里有一种固定思维，工作的越久就越厉害，但实际是这样吗？面对一个8年的工程师，我当时是很尊敬他的，很敬畏他的，但经过10分钟的谈话，我彻底的看清8年后的自己，为什么呢？简单的说，问了他几个问题，第一，域的五个角色，第二，如果有主和辅助DC，主DC宕机后无法修复，我们该如何尽快的恢复公司业务的正常运行？ 其实，问题很简单，但结果却很出人意料，他的回答，第一 ：大概说出了3个，另外2个太含糊，第二：在我的任期内并没有出现过这种问题，也没有做过相关的模拟，所以。。。。从他的身上我也看到了自己，自己不也是只是理论，并没有过多的去模拟或者实际的操作，我很害怕，很害怕我30岁的时候跟他一样来和年轻人竞争！</p><p>转移到我们的话题上，经验和时间到底是什么关系？我想，我们都知道时间越久那经验肯定是会增加的，这是一个成正比的关系，但经验增加的速度、深度以及广度不是时间的长短来控制的，而是由我们自己来控制的</p><p>2，对于网络搜索，我想大家都比较熟悉了，我们每天都需要跟她打交道，甚至帮助我们来解决问题，但过度的依赖，会给我们带来严重的后果，啥?不信？ OK，我们来稍微的分析一下：对于一个问题，在没有网络或者网络上没有相同的解决方案之前，我们凭什么来解决这个问题呢？比如说microsoft第一次增加AD 域技术的时候，那个时候遇到问题又该如何解决呢？因为是刚开始，网络上的解决方案基本上都还没有，怎么办？这个时候，扎实的理论基础和Microsoft自带的支持与帮助中心就是我们的救命稻草，曾几何时，某些人通过这些解决了多少个问题！放眼现在，我们遇到的90%的问题都可以在网络上搜索到，看起来我们应该很庆幸，但我们没看到另外一面，就拿我自己打比方，以前不怎么会利用搜索引擎，遇到问题都是靠自身思路加上理论以及以前稍微积累的经验来进行解决，但现在呢，发现了网络搜索后，一碰到以前没碰到的问题，习惯性的打开搜索，很快就解决了，自己还很自豪，其实，这个时候，我已经输了，为什么？因为我自己放弃了思考的权利，放弃了创新的权利，放弃了我们应该拥有可以积累起来的经验的权利！</p><p>昨天去一用户现场，发现一cisco交换机的登录密码忘记了，死活登录不进去，面对这个问题，我想大家一想说这个很简单呀，网络上一搜一大把， 是的，确实很简单的，但如果你从来没操作过，只是看网络上的，在客户现场你敢直接操作？如果你回答是，我认为你是没有高度责任心的，你这是在拿用户再开玩笑，在玩一个赌博游戏！站在公司层面来说，公司花钱招你来做事，不是让你来现做现学的，不是需要用到的时候你才去学才去积累的，而是需要你有一定的技术能力的储备，如果没有，公司也就没必要花重金请你来担当了！</p><p>网络是有利有弊的，我们应该合理的利用，而不是过度的去依赖，不管网络是如何的发展，我们都应该为自己的技术能力做好储备，不为公司，只为我们的将来！</p><p>总结：如何快速的增加经验呢？</p><p>1，自己真真实实遇到的，这个一定要彻底的进行消化，彻底的进行掌握，因为这是我们工作中真是遇到的，不敢说下次不会再出现，至于怎么来消化，我想这个大家都会有自己的方法，比如发帖子，写博客什么的！</p><p>2，自己所不曾遇到但有可能在后来的日子里自己真实遇到的！有人说，公司环境很好，设备也很好，出问题的几率很小，所以这经验该如何增加呢？总不能折腾坏了在解决来积累吧！我们也不至于这样的，现在的51CTO BBS以及51CTO博客上都有很多帖子，你可以多参与其中，进行解答，更比如说，BBS里的推荐以及精华里的帖子，你都有必要很认真的跟着帖子的内容来实际的操作几遍（我试过，操作一遍是根本记不住的），拿别人的问题来给提高自己，我想着是最直接，最快的，最有效的方法，再比如说51CTO博客，特别是一些专家以及推荐博客，里面都是大师们的经典都是他们的经验，都是他们的心血，他们都 这么费力的发布出来了，我们难道只是看看就了事吗？我想如果你真想积累经验，你不会那样的，你会实际的操练几遍的，并进校总结成自己的思想、自己的经验！没有比这种来的经验更直接了！</p><p>3，根据自身的爱好，买点书来看，不要多问为什么，以上2点只是我们的实际操作或者说是一些机械的动作，好比是机器人一样，书就不一样了，她是一个系统的知识，是一个思想的锻炼，是一个思路的形成的产物，如果只是单纯的靠以上2点，我们不能长久的超越别人，因为我们都是跟随着他们的脚步走的，要想超越，我们必须形成自己的思想，自己的思路，自己的经验！</p><p>结束语：</p><p>自己的知识===》》》》》》官网的资料＋模拟实验＋有计划的深入研究＋不断的总结＋不断的从他人的经验中学习知识＋不间断的学习笔记＋不断的分享贡献。</p><p>   在某些时候，不要过多的依赖网络，不要过多的羡慕别人，更不要过多持乐观的态度，因为，下一秒，我们不敢确定：网络是否还存在，别人是否会一落千丈，事情是否会一直很乐观？但我们可以确定的是：我们的未来一定要很成功！有了这个确定后就放手的去为这个确定去准备、实施吧！相信成果是属于你的！</p><p>根据博友的回复，我想我有必要补充一下：</p><p>一个人不管是在企业还是社会，都需要有一个核心，比如说，你精通AD、他精通Exchange、我精通SQL等，这样我们才会有竞争力，面对IT行业的知识更新快，工作需要接触的面也比较广，我们就需要集中精力来积累我们的核心经验，这是我们必须要做的，因为这是他高于别人的一个核心优势！如果说你连自己精通的AD技术的排错或者实施，都需要依赖外在的支持（当然一少部分还是允许的，大家不要一刀切哈），那么可以负责任的说，你并不精通AD，你并不拥有你的核心经验！所以，经验并不是要求我们全面的去积累，而是主攻我们的核心，至于其他方面，条件允许的话可以慢慢积累或依靠外在支持！</p><p>再次补充：</p><p>其实，关于网络搜索，我的中心思想是不要太依赖，并不是丢弃不用，所以关于弃用搜索的观点就不要讨论了，因为弃用搜索并不是本文分析的重点！当出问题了，OK，先按照自己的思路，基础知识以及经验来进行排查，在一定程度上，我们可以再利用搜索来验证我们的思路，我们的技能，我们的经验是否正确！我们不能一味的让搜索来牵着我们的鼻子走，我们要自我控制让搜索作为我们是对还是错的一种验证机制，对了，就更会增加自己的信心，错了，我们就在这一次改思路，下次就会积累成了自己的经验！</p><p>经验积累blog：</p><p>聪明的ITPRO之一如何快速定位并解决故障：</p><p><a href="http://z00w00.blog.51cto.com/515114/972090">http://z00w00.blog.51cto.com/515114/972090</a></p><p>IT之梦—你—我—他</p><p>Day   Day   Up</p><p>2012年8月18日星期六</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>低学历者如何轻松获得10K月薪？</title>
      <link href="/2018/11/08/di-xue-li-zhe-ru-he-qing-song-huo-de-10k-yue-xin/"/>
      <url>/2018/11/08/di-xue-li-zhe-ru-he-qing-song-huo-de-10k-yue-xin/</url>
      
        <content type="html"><![CDATA[<p>今天老男孩给大家分享一下，低学历者如何轻松获得10K月薪？</p><p>什么是低学历？</p><p>答：非正规统招的大专、高中、中专及以下，毕业后后补的成考、自考学历也算在内！</p><p>其他学历划分（全日制统招）</p><p>中等学历：大专、本科</p><p>高学历：硕士、博士</p><p>说明，这是老男孩运维班2015年10月份一次课前运维思想，</p><p>我觉得很多朋友会需要这些，所以分享给大家。</p><p>也许你不需要，但是你身边的朋友可能需要！</p><p>例如：你的兄弟姐妹，朋友、同学等！</p><p>好，开整！</p><p>我打字慢大家别着急。</p><p>首先给个结论吧！</p><p>做一个态度素质和技术能力过硬的人，则10K月薪轻松到手！</p><p>现在的企业招聘运维人员，经常要求、本科学历。</p><p>这是为什么呢？</p><p>因为人家素质高啊，也许你不承认，但这是一个不争的事实，社会共识（个例除外）。</p><p>那到底高学历的人素质高在哪呢？</p><p>简单的讲，就是他们的基础知识、素养的储备要多，例如：数学、外语等的基本功，</p><p>另外就是，学习能力，坚持及抗压能力更强，遇到问题，大多会积极寻找方法及周边解决，而不是抱怨。还有，就是沟通及做人做事的能力要好一些，做事积极主动，对于领导说的对的事情会努力去做。最后就是他们更懂得做人、感恩，甚至回报社会，这些都比没学历的好很多。</p><p>其实那些高学历的人也没什么了不起的，企业用人要求本科学历，就以为素质会高，那也不一定，有一些高中、大专学历的人素质也是非常高的，只不过这部分没有本科及以上的多而已！</p><p>2014-2015年全国每年的毕业生都是700万以上。</p><p>大学四年毕业，太多的学生毕业就3，4千起，还有大批毕业就失业的呢。</p><p>前些年，还可以说学历是敲门砖，但是现在就是烂砖头了，敲不开门了。</p><p>太多大学生毕业面临失业，或者工资低的可怜。</p><p>所以说，我们这些没有高学历的，也不要气馁，因为这并不可怕，最可怕的是你学历不高还随波逐流，整天混日子，不想改变自己，想改变也没有决心和勇气，只停留在想的层面。</p><p>我们各位朋友，如果你的学历不高，已经即成事实了，就是无法改变的了，</p><p>我指的是统招的学历！在国内现有体制下，后补的学历可以补证书，但是不无法补素质了，因为学习的过程已经变质了，大多学习者的初衷也仅仅是为了学历证书而已。</p><p>但是，从现在起，我们可以让我们自己的素质高起来！</p><p>素质高了，没有学历一样可以。因为学历就是素质的代名词而已。</p><p>素质高不一定是通过读书、读学历获得，只要我们意识到这个问题，完全</p><p>可以从自身去真正的改变！</p><p>因此，各位，低学历的朋友，要想达到月薪10K，要想成功，就要从自我改变开始，这是最直接的捷径！</p><p>好了，现在我们都问下自己的内心，大学四年毕业，也就3，4千起，还有大批毕业就失业的呢。那么没有学历的你，凭什么半年不到从老男孩教育毕业就月薪过1万？</p><p>凭什么？凭什么？凭什么？</p><p>你凭什么轻松拿到月薪10K，请你给企业的老板找一个给你开10K月薪的理由？</p><p>你能说出来么？啥，说不出来？</p><p>好，那我给你一个凭什么，就是凭你们这段日子里修炼的过硬的态度素质和技术能力！</p><p>好了，回到开篇的主题：</p><p>做一个态度素质和技术能力过硬的人，则10K轻松到手，不管的学历如何！</p><p>据我这么多年和企业招聘人员和老板打交道，10K的运维岗位对技术的要求其实很低，更多还是态度素质。</p><p>上百家企业来老男孩教育招聘，第一条要求就是，要踏实、靠谱、有责任心的。</p><p>这样就8K起步了！技术差点没什么，只要态度素质高，企业就愿意培养你，</p><p>积极主动点，勤奋点，学会做人，技术能力在企业里都可以慢慢的学到。</p><p>人品、态度、素质差，就没人会给你机会！</p><p>素质态度的其它文章见</p><p><a href="http://oldboy.blog.51cto.com/2561410/1706490">http://oldboy.blog.51cto.com/2561410/1706490</a></p><p>因此，我下个结论：</p><p>运维高薪==态度素质+技术能力</p><p>薪水越高，对态度和素质的要求越高，相反对技术能力的要求可以降低到很低。</p><p>例如：人品、做人、对企业和老板忠诚，这些都是老板任命领导重点考量的素质。人品不行，不忠诚，一切都免谈，即使用你也是临时的，将来有人替你，你终将被踢掉。</p><p>我时常问我的学生，当然以前也会自己问自己，我们这些屌丝来北上广深的目的到底是什么?</p><p>喜欢大城市？找漂亮的女朋友？看人山人海的人流？当然不是，直白的讲，我们要的就是：快速积累经验和赚更多的钱！</p><p>将来可以让自己活的更体面，让我们的父母、妻儿有更好的生活。</p><p>那么素质高的基本体现是什么呢？</p><p>让大家看看，我给学生分享的说素质高的几条吧。</p><p>素质低的体现：</p><p>1、大便后不冲厕所。</p><p>2、洗完手到处甩水，不关水龙头。</p><p>3、在室内吸烟，到处仍烟头，扔到厕所小便池，大便坑。</p><p>4、垃圾随手到处放离开不收拾走，垃圾桶满了，还放垃圾导致垃圾桶旁边满地狼藉。</p><p>能把这些列出来，大家思考想想吧！80年代的海尔总裁张瑞敏，竟然列出禁止在车间随地大小便，是不是太低俗了，但是当时就是这个状况。</p><p>素质高的体现：</p><p>1、上面的事情都不要去做，看到了别人做的要进行劝阻。</p><p>2、看到地上、桌子上的遗留垃圾能够随手拿手。</p><p>3、做事积极主动，不本位主义，不抱怨。</p><p>4、不但要帮同组的同学，非同组的也要帮他搞定。</p><p>5、有责任心，做事有始有终，让人感觉你是踏实、靠谱的人。</p><p>6、不迟到，不旷课，按时完成作业，高标准（对应企业就是完成工作）。</p><p>7、要有团队精神，奉献精神，学会协作，互相帮忙。</p><p>8、听课少交头接耳，少玩手机、上网。</p><p>9、老师开口讲课，你们就都闭口。让你开口讲的时候你要多开口讲。</p><p>同学们，其实，这些看似都很简单，甚至有些让人笑掉大牙的条目，</p><p>但是真正做到的又有几个？包括高学历的在内！</p><p>我们要想成就自己，要和高学历的人PK态度素质，光知道哪些是对的还是不够的。</p><p>最最关键的就是老师再开学第一天给大家说的，“你们都知道了，而我做到了”</p><p>如果你们做到这些，则毕业后8K月薪起步，再加上老师讲解的技术，则10K月薪起步。</p><p>如果这样还达不到8K月薪，老师可以按月给你补差的薪水。</p><p>怎么样？同学们，你们想不想毕业以后达到10K？</p><p>请一起回答我，大点声……“想”！</p><p>那我们应该怎么做？</p><p>请一起回答我，大点声……!</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>初入运维职场菜鸟必知必做的工作心态！</title>
      <link href="/2018/11/08/chu-ru-yun-wei-zhi-chang-cai-niao-bi-zhi-bi-zuo-de-gong-zuo-xin-tai/"/>
      <url>/2018/11/08/chu-ru-yun-wei-zhi-chang-cai-niao-bi-zhi-bi-zuo-de-gong-zuo-xin-tai/</url>
      
        <content type="html"><![CDATA[<p>今日无意中整理资料发现如下为学生就业指导的草稿，和伙伴们分享。</p><p> </p><p>已经拿到OFFER并就业的同学，一定要仔细看看这篇文章，最好看过后认真评论下，让老师知道你的心态状况，这里老男孩老师留下了自己的多个优秀员工证书截图在下面，希望以过来人的身份能带给大家一点新的态度的改变，你们的老师和小伙伴们讲的不是空话、套话，而是曾经实践过的发自肺腑的话，这是智商普通的我们发展的不二之选。</p><p> 下面有个网友的评论很贴切，有些人一辈子都无法明白此文章的精髓的，这里的有些人很可能就是你们其中的各位某些人。</p><p>   虽然很多同学拿到月薪过万的OFFER了，但是仍然要戒骄戒躁，继续加油，同时提升自己的工作素质，和做人做事的能力，前方的路还很远。10K—&gt;20K—-&gt;40K，能不能让老师也看到你的优秀员工证书？</p><p> </p><p>主动性：</p><p>1.发现架构服务等的问题隐患，主动提出问题解决方案(转正前以先了解为主，除非老大让你提方案)。</p><p>  不要光用口说，而是写好专业的可实施的解决方案提交给领导抉择。</p><p> </p><p>2.领导无意中交代的任务。</p><p>  越是领导无意中交代的，你更要格外重视，快速响应，并完成！</p><p> </p><p>3.领导：发邮件，让研究技术？</p><p>这是常有的事，要加班熬夜，最短时间完成，不能影响自己的正常工作。</p><p>哪怕是加班到半夜，第二天也不要迟到。</p><p>新工作面临被信任问题，因此无论什么任务，都要最快速度完成。</p><p>让领导信任，可能就是入职后打2-3个漂亮仗，以后路就平坦了。</p><p>做完后可以发给老师帮你审核确认，再提交领导，这样提升你打仗的漂亮程度！</p><p> </p><p>表现：</p><p>1.要表现就要人前人后一致，不要领导在了努力，不在偷懒，领导都不是傻子。</p><p>  例如：加班。踏实，靠谱是公司最需要的人。</p><p> </p><p>2.去新单位少做和工作无关的事。实在没事干可以学习工作相关的内容，</p><p>  了解公司业务，了解架构，提提隐患，写写未来扩展方案。</p><p>  或者请示领导分配活，总之不要闲着，闲着没进步，还比较危险。</p><p> </p><p>3.做了有价值的工作要表现出来。</p><p>  例如半夜处理报警，比较好的表现方法是，再处理问题后立即整理，发邮件（记录好），不要拖到天亮上班后发，那样效果就差多了。年底加薪主要靠业绩说话，某年某月某日某晚某时某分为公司做了什么事（减少了哪些不利影响），一年下来记录下工作大事记，就是年终总结了。数据是最好的表现自己的方法，其他文字都是苍白无力的。</p><p> </p><p>4.要有把公司当做自己是老板的态度。</p><p>老男孩曾经叮嘱过：作为新人应该有的工作态度。</p><p>尽量不要把自己当做公司的外人，员工。</p><p>而是当做股东之一或者老板的心态去做事！</p><p>多加油，多卖点力气！！如果把公司当自己的，就不在无谓的抱怨。</p><p>加班熬夜也自然就有的乐趣和成就了。</p><p>万一公司发展大了，可能你也就是核心了！</p><p>就算公司没发展起来，你的能力也会大大提升，一年经验顶别人二年的！</p><p>这是一个有智慧的人成就大事的心态！</p><p>老板都不是傻子（一定比你聪明的，不然就不是你老板了），你的长期执着的努力，他一定是看得到的（当然做事还有很多技巧，如果不会技巧，最好的技巧就是踏实干活）！</p><p>有的时候伯乐常有，千里马也是不常有的！与其在等待自己的伯乐，不如，先让自己变成真正的千里马吧！</p><p> </p><p>5.简单做人，勤奋做事，是初入职场的同学最应该有的心态!</p><p>但是10个人里恰恰不超过2个能真正有这个心态并去贯彻实施的。</p><p>到处抱怨加班，抱怨工资低，抱怨没前途。。</p><p>抱怨的结果只能让自己越来越差！心态没有了，也不会进步了，工作也不会好好干了。</p><p>工资自然就没法涨，还是那句话，老板都不是聋子哑巴，你的一举一动无时不刻的</p><p>已经写进了你的业绩考核档案。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>运维人员低学历者要不要补学历？何时补合适？</title>
      <link href="/2018/11/08/yun-wei-ren-yuan-di-xue-li-zhe-yao-bu-yao-bu-xue-li-he-shi-bu-he-shi/"/>
      <url>/2018/11/08/yun-wei-ren-yuan-di-xue-li-zhe-yao-bu-yao-bu-xue-li-he-shi-bu-he-shi/</url>
      
        <content type="html"><![CDATA[<p>学历说白了，主要代表了一个人的2点能力：</p><p>1、做人做事的素质</p><p>2、学习的基本功</p><p>这两点你要具备了，就不用担心学历了，大事一样可成！</p><p>不是全日制第一统招学历，后补的大多都是掩耳盗铃，意义不是很大！</p><p>老男孩教育的运维班课程40%-50%的精力，都在帮学生在个人素质上和做事态度和能力上下功夫，这也是老男孩教育学生毕业工资高的原因之一！抓住了运维学生的特点，对症下药才是良方！否则，光灌技术没任何意义，素质太低，如果不改变，无论怎么努力注定就业工资不会很高，而且成长发展的空间小！</p><p>低学历者，认识自己的不足，非常关键，不用过多自卑，把一切力量用于补救就好了！</p><p>如果你现在没有学历，就抓紧努力提升能力吧，未来一定有你的一片天空！</p><p>等未来技术能力稳定再一个阶段了，再去补学历，否则，总是心里有个坎，能力也难提升。</p><p>老男孩经常建议学生工资达到15K以上稳定后，再利用业余时间补补学历！</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 学历 </tag>
            
            <tag> 学历者 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试问题</title>
      <link href="/2018/11/08/mian-shi-wen-ti/"/>
      <url>/2018/11/08/mian-shi-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>根据在咨询中针对人事主管的调查，统计出20个人事主管最常问的问题和最喜欢的答案。</p><p>　　我去应聘的时候，初试时我都会看这些问题，有些问题面试官的确会问，而我本人也做了有半年的初试官，也常会在面试时问起这些问题。</p><p>　　问题1：你为什么想离开目前的职务？</p><p>　　A.别的同仁认为我是老板前的红人，所以处处排挤我。</p><p>　　B.调薪的结果令我十分失望，完全与我的付出不成正比。</p><p>　　C.老板不愿授权，工作处处受限，绑手绑脚、很难做事。</p><p>　　D.公司营运状况不佳，大家人心惶惶。</p><p>　　解答：超过一半的人事主管选择C，其次为D。选择C的回答，可以显示应征者的企图心、能力强，且希望被赋予更多的职责。选择D，则是因离职原因为个人无法改变的客观外在因素，因此，面谈者也就不会对个人的能力或工作表现，有太多的存疑。</p><p>　　问题2：你对我们公司了解有多少？</p><p>　　A.贵公司在去年里，长达8个月的时间，都高居股王的宝座。</p><p>　　B.贵公司连续3年被XX杂志评选为“求职者最想进入的企业”的第一名。</p><p>　　C.不是很清楚，能否请您做些介绍。</p><p>　　D.贵公司有意改变策略，加强与国外大厂的OEM合作，自有品牌的部分则透过海外经销商。</p><p>　　解答：以D居多。道理很简单，他们希望求职者对所申请的工作有真正的了解，而不仅仅是慕名而来。</p><p>　　问题3：你找工作时，最重要的考虑因素为何？</p><p>　　A.公司的远景及产品竞争力。</p><p>　　B.公司对员工生涯规划的重视及人性化的管理。</p><p>　　C.工作的性质是否能让我发挥所长，并不断成长。</p><p>　　D.合理的待遇及主管的管理风格。</p><p>　　解答：以C居多，因为公司要找工作表现好、能够真正有贡献的人，而非纯粹慕名、求利而来的人。</p><p>　　问题4：为什么我们应该录取你？</p><p>　　A.因为我深信我比别人都优秀。</p><p>　　B.因为我有很强烈的企图心，想要与贵公司共同成长。</p><p>　　C.您可以由我过去的工作表现所呈现的客观数据，明显地看出我全力以赴的工作态度。</p><p>　　D.我在这个产业已耕耘了8年，丰富的人脉是我最大的资产。</p><p>　　解答：这题理想的回答是C。你如何让对方看到你的好？单凭口才，是很难令对方信服的，因此，从履历表内容或之前的回答内容中，如果能以客观数字、具体的工作成果，来辅助说明，是最理想的回答。</p><p>　　问题5：请谈谈你个人的最大特色。</p><p>　　A.我人缘极佳，连续3年担任福委会委员。</p><p>　　B.我的坚持度很高，事情没有做到一个令人满意的结果，绝不罢手。</p><p>　　C.我非常守时，工作以来，我从没有迟到过。</p><p>　　D.我的个性很随和，是大家公认的好好先生。</p><p>　　解答：这题理想的回答是B。A、C、D虽然都表示出应征者个性上的优点，但只有B的回答，最能和工作结合，能够与工作表现相结合的优点、特质，才是面谈者比较感兴趣的回答。</p><p>　　问题6：“请你自我介绍一下”。</p><p>　　思路：1、这是面试的必考题目。</p><p>　　2、介绍内容要与个人简历相一致。</p><p>　　3、表述方式上尽量口语化。</p><p>　　4、要切中要害，不谈无关、无用的内容。</p><p>　　5、条理要清晰，层次要分明。6、事先最好以文字的形式写好背熟。</p><p>　　问题7：“谈谈你的家庭情况”</p><p>　　思路：1、况对于了解应聘者的性格、观念、心态等有一定的作用，这是招聘单位问该问题的主要原因。</p><p>　　2、简单地罗列家庭人口。</p><p>　　3、宜强调温馨和睦的家庭氛围。</p><p>　　4、宜强调父母对自己教育的重视。</p><p>　　5、宜强调各位家庭成员的良好状况。</p><p>　　6、宜强调家庭成员对自己工作的支持。</p><p>　　7、宜强调自己对家庭的责任感。</p><p>　　问题8：“你有什么业余爱好？”</p><p>　　思路：1、业余爱好能在一定程度上反映应聘者的性格、观念、心态，这是招聘单位问该问题的主要原因。</p><p>　　2、最好不要说自己没有业余爱好。</p><p>　　3、不要说自己有那些庸俗的、令人感觉不好的爱好。</p><p>　　4、最好不要说自己仅限于读书、听音乐、上网，否则可能令面试官怀疑应聘者性格孤僻。</p><p>　　5、最好能有一些户外的业余爱好来“点缀”你的形象。</p><p>　　问题9：“你最崇拜谁？”</p><p>　　思路：1、最崇拜的人能在一定程度上反映应聘者的性格、观念、心态，这是面试官问该问题的主要原因。</p><p>　　2、不宜说自己谁都不崇拜。</p><p>　　3、不宜说崇拜自己。</p><p>　　4、不宜说崇拜一个虚幻的、或是不知名的人。</p><p>　　5、不宜说崇拜一个明显具有负面形象的人。</p><p>　　6、所崇拜的人人最好与自己所应聘的工作能“搭”上关系。</p><p>　　7、最好说出自己所崇拜的人的哪些品质、哪些思想感染着自己、鼓舞着自己。</p><p>　　问题10：“你的座右铭是什么？”</p><p>　　思路：1、座右铭能在一定程度上反映应聘者的性格、观念、心态，这是面试官问这个问题的主要原因。</p><p>　　2、不宜说那些引起不好联想的座右铭。</p><p>　　3、不宜说那些太抽象的座右铭。</p><p>　　4、不宜说太长的座右铭。</p><p>　　5、座右铭最好能反映出自己某种优秀品质。</p><p>　　6、参考答案——“只为成功找方法，不为失败找借口”</p><p>　　问题11：“谈谈你的缺点”</p><p>　　思路：1、不宜说自己没缺点。</p><p>　　2、不宜把那些明显的优点说成缺点。</p><p>　　3、不宜说出严重影响所应聘工作的缺点。</p><p>　　4、不宜说出令人不放心、不舒服的缺点。</p><p>　　5、可以说出一些对于所应聘工作“无关紧要”的缺点，甚至是一些表面上看是缺点，从工作的角度看却是优点的缺点。</p><p>　　问题12：“谈一谈你的一次失败经历”</p><p>　　思路：1、不宜说自己没有失败的经历。</p><p>　　2、不宜把那些明显的成功说成是失败。</p><p>　　3、不宜说出严重影响所应聘工作的失败经历。</p><p>　　4、所谈经历的结果应是失败的。</p><p>　　5、宜说明失败之前自己曾信心白倍、尽心尽力。</p><p>　　6、说明仅仅是由于外在客观原因导致失败。</p><p>　　7、失败后自己很快振作起来，以更加饱满的热情面对以后的工作。</p><p>　　问题13：“你为什么选择我们公司？”</p><p>　　思路：1、面试官试图从中了解你求职的动机、愿望以及对此项工作的态度。</p><p>　　2、建议从行业、企业和岗位这三个角度来回答。</p><p>　　3、参考答案——“我十分看好贵公司所在的行业，我认为贵公司十分重视人才，而且这项工作很适合我，相信自己一定能做好。”</p><p>　　问题14：“如果我录用你，你将怎样开展工作？”</p><p>　　思路：1、如果应聘者对于应聘的职位缺乏足够的了解，最好不要直接说出自己开展工作的具体办法。</p><p>　　2、可以尝试采用迂回战术来回答，如“首先听取领导的指示和要求，然后就有关情况进行了解和熟悉，接下来制定一份近期的工作计划并报领导批准，最后根据计划开展工作。”</p><p>　　问题15：“与上级意见不一致时，你将怎么办？”</p><p>　　思路：1、一般可以这样回答“我会给上级以必要的解释和提醒，在这种情况下，我会服从上级的意见。”</p><p>　　2、如果面试你的是总经理，而你所应聘的职位另有一位经理，且这位经理当时不在场，可以这样回答：“对于非原则性问题，我会服从上级的意见，对于涉及公司利益的重大问题，我希望能向更高层领导反映。”“应届毕业生缺乏经验，如何能胜任工作？”</p><p>　　问题16：“我们为什么要录用你？”</p><p>　　思路：1、应聘者最好站在招聘单位的角度来回答。</p><p>　　2、招聘单位一般会录用这样的应聘者：基本符合条件、对这份共组感兴趣、有足够的信心。</p><p>　　3、如“我符合贵公司的招聘条件，凭我目前掌握的技能、高度的责任感和良好的饿适应能力及学习能力，完全能胜任这份工作。我十分希望能为贵公司服务，如果贵公司给我这个机会，我一定能成为贵公司的栋梁！”</p><p>　　问题17：“你能为我们做什么？”</p><p>　　思路：1、基本原则上“投其所好”。</p><p>　　2、回答这个问题前应聘者最好能“先发制人”，了解招聘单位期待这个职位所能发挥的作用。</p><p>　　3、应聘者可以根据自己的了解，结合自己在专业领域的优势来回答这个问题。</p><p>　　问题18：“你是应届毕业生，缺乏经验，如何能胜任这项工作？”</p><p>　　思路：1、如果招聘单位对应届毕业生的应聘者提出这个问题，说明招聘单位并不真正在乎“经验”，关键看应聘者怎样回答。</p><p>　　2、对这个问题的回答最好要体现出应聘者的诚恳、机智、果敢及敬业。</p><p>　　3、如“作为应届毕业生，在工作经验方面的确会有所欠缺，因此在读书期间我一直利用各种机会在这个行业里做兼职。我也发现，实际工作远比书本知识丰富、复杂。但我有较强的责任心、适应能力和学习能力，而且比较勤奋，所以在兼职中均能圆满完成各项工作，从中获取的经验也令我受益非浅。请贵公司放心，学校所学及兼职的工作经验使我一定能胜任这个职位。”</p><p>　　问题19：“你希望与什么样的上级共事？”</p><p>　　思路：1、通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又上一次机会。</p><p>　　2、最好回避对上级具体的希望，多谈对自己的要求。</p><p>　　3、如“做为刚步入社会新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。”</p><p>　　问题20：“您在前一家公司的离职原因是什么？”</p><p>　　思路：1、最重要的是：应聘者要使找招聘单位相信，应聘者在过往的单位的“离职原因”在此家招聘单位里不存在。</p><p>　　2、避免把“离职原因”说得太详细、太具体。</p><p>　　3、不能掺杂主观的负面感受，如“太幸苦”、“人际关系复杂”、“管理太混乱”、“公司不重视人才”、“公司排斥我们某某的员工”等。</p><p>　　4、但也不能躲闪、回避，如“想换换环境”、“个人原因”等。</p><p>　　5、不能涉及自己负面的人格特征，如不诚实、懒惰、缺乏责任感、不随和等。</p><p>　　6、尽量使解释的理由为应聘者个人形象添彩。</p><p>　　7、如“我离职是因为这家公司倒闭。我在公司工作了三年多，有较深的感情。从去年始，由于市场形势突变，公司的局面急转直下。到眼下这一步我觉得很遗憾，但还要面对，重新寻找能发挥我能力的舞台。”同一个面试问题并非只有一个答案，而同一个答案并不是在任何面试场合都有效，关键在于应聘者掌握了规律后，对面试的具体情况进行把握，有意识地揣摩面试官提出问题的心理背景，然后投其所好。（完）</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>面试中应注意的问题</title>
      <link href="/2018/11/08/mian-shi-zhong-ying-zhu-yi-de-wen-ti/"/>
      <url>/2018/11/08/mian-shi-zhong-ying-zhu-yi-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>一、面试中应注意的问题</p><p>应试者要想在面试答辩中获得成功，必须注意以下几个问题：</p><p>本帖隐藏的内容</p><p>（一）淡化面试的成败意识</p><p>一位面试者在面试前自认为各方面都比别人优秀，因此，他认为自己可以高枕无忧了。谁知主考官在面试中出其不意，提了一个他前所未闻的问题。顿时，他像失了魂似的，情绪十分低落。等到主考官再提些简单的问题时，他仍无法从刚才的失败中走出来，最终名落孙山。</p><p>应试者对于面试的成败，首先在思想上应注意淡化，要有一种“不以物喜，不以己悲”的超然态度。如果在面试中有这样的心态，才会处变不惊。如果只想到成功，不想到失败，那么在面试中一遇到意外情况，就会惊慌失措，一败涂地。</p><p>（二）保持自信</p><p>应试者在面试前树立了自信，在面试中也要始终保持自信，只有保持了自信，才能够在面试中始终保持高度的注意力、缜密的思维力、敏锐的判断力、充沛的精力，夺取答辩的胜利。</p><p>（三）保持愉悦的精神状态</p><p>愉悦的精神状态，能充分地反映出人的精神风貌。所以，作为应试者来说，保持了愉快的精神状态，面部表情就会和谐自然，语言也会得体流畅。反之，就会给人一种低沉、缺乏朝气和活力的感觉，那么首先就会给主考官或者主持人一种精神状态不佳的印象。由此可见，面试中一定要注意保持一种愉悦的精神状态。</p><p>（四）树立对方意识</p><p>应试者始终处于被动地位，考官或主考官始终处于主动地位。他问你答，一问一答，正因为如此，应试者要注意树立对方意识。首先要尊重对方，对考官要有礼貌，尤其是考官提出一些难以回答的问题时，应试者脸上不要露出难看的表情，甚至抱怨考官或主持人。当然，尊重对方并不是要一味地逢迎对方，看对方的脸色行事，对考官的尊重是对他人格上的尊重；其次在面试中不要一味地提到“我”的水平、“我”的学识、“我”的文凭、“我”的抱负、“我”的要求等。“我”字太多，会给考官目中无人的感觉。因此，要尽量减少“我”字，要尽可能地把对方单位摆进去，“贵单位向来重视人才，这一点大家都是清楚的，这次这么多人来竞争就说明了这一点。”这种话既得体，又确立了强烈的对方意识，考官们是很欢迎的；再次是考官提问，你才回答，不要考官没有提问，你就先谈开了，弄得考官或主持人要等你停下来才提问，既耽误了时间，同时也会给考官或主持人带来不愉快。另外，面试完后，千万不要忘记向考官或主持人道声“谢谢”和“再见”。</p><p>（五）面试语言要简洁流畅</p><p>面试有着严格的时间限制。因此，面试语言要做到要言不烦、一语中的。同时，语言要有条理性、逻辑性，讲究节奏感，保证语言的流畅性。切忌含含糊糊，吞吞吐吐，这会给考官或主持人留下坏的印象，从而导致面试的失败。因此，应试者一定要注意面试语言的简洁性和流畅性。</p><p>（六）不要紧张</p><p>有些应试者尽管在面试前已做好了充分的心理准备，但是一进面试室就紧张起来；有些应试者在答辩中遇到“卡壳”时，心情也立刻变得紧张起来。怎样解决在这两种情况下出现的心理紧张呢?我们要分析紧张的原因。这种极度的紧张是由于应试者的卑怯心理和求胜心切而造成的。因此，应试者一进面试室，应该去掉“自愧不如人”的意识，确立“大家都差不多，我的水平与其他人一样”的意识，有了这种意识，紧张的情绪就会减少一大半，随着面试的开始，紧张情绪就有可能完全消失。对于遇到“卡壳”而紧张的问题，如果抱着“能取胜则最好，不能胜也无妨”的态度，紧张就会即刻消失，很快就进入正常的面试状态，有可能出现“柳暗花明又一村”的境界。所以，应试者在面试中一定要注意不要紧张。</p><p>（七）仪态大方，举止得体</p><p>大胆前卫、浓妆艳抹的装扮，尤其是男士戴戒指、留长头发等标新立异的装扮不太合适，与机关工作人员的身份不符，会给考官留下很坏的印象。应试者入座以后，尽量不要出现晃腿、玩笔、摸头、伸舌头等小动作，这很容易给考官一种幼稚、轻佻的感觉。一般说来，穿着打扮应力求端庄大方，可以稍作修饰，男士可以把头发吹得整齐一点，皮鞋擦得干净一些，女士可以化个淡雅的职业妆。总之，应给考官自然、大方、干练的印象。</p><p>（八）平视考官，不卑不亢</p><p>考场上，相当一部分应试者不能很好地控制自己的情绪，容易走向两个极端：一是妄自菲薄，觉得坐在对面的那7个考官都博学多才、身居要职，回答错了会被笑话。所以，畏首畏尾，欲言又止，肚里有货却“倒”不出来。二是有些应试者在大学里担任过学生会干部，组织过很多活动，社会实践能力很强，或是在企业里担任经理等领导职务，也统率过一帮子人，所以很自信。进入考场，如入无人之境，对考官们嗤之以鼻。这两种表现都不可取，都会影响到应试者的面试得分。最好的表现应是：平视考官，彬彬有礼，不卑不亢。应树立三种心态：第一，双方是合作不是比试。考官对应试者的态度一般是比较友好的，他肩负的任务是把优秀的人才挑选到国家机关，而不是想和应试者一比高低，所以应试者在心理上不要定位谁强谁弱的问题，那不是面试的目的。第二，应试者是在通过竞争谋求职业，而不是向考官乞求工作，考中与否的关键在于自己的才能以及临场发挥情况，这不是由考官主观决定的。第三，考官来自不同的行业，一般都具有较高的学历和多年的工作经验，理论水平较高，工作经验也比较丰富。但他们毕竟是人，不是神，有其所长，也有其短，说不定你所掌握的一些东西，他们不一定了解。</p><p>（九）辩证分析，多维答题</p><p>辩证法是哲学的基本原理和方法。应试者应具备一定的哲学知识和头脑。回答问题不要陷入绝对的肯定和否定，应多方面进行正反两面的考虑。从以往面试所出的一些题目来看，测评的重点往往不在于应试者答案的是与非，或是观点的赞同与反对，而在于分析说理让人信服的程度。听以要辩证地分析问题，解决问题，而不要简单地乱下结论，有时还要从多个角度去思考，具体情况具体分析。</p><p>（十）冷静思考，理清思路</p><p>一般说来，考官提出问题后，应试者应稍作思考，不必急于回答。即便是考官所提问题与你事前准备的题目有相似性，也不要在考官话音一落，立即答题，那给考官的感觉可能是你不是在用脑答题，而是在背事先准备好的答案。如果是以前完全没有接触过的题目，则更要冷静思考。磨刀不误砍柴工，匆忙答题可能会不对路、东拉西扯或是没有条理性、眉毛胡子一把抓。经过思考，理清思路后抓住要点、层次分明地答题，效果要好一些。</p><p>二、面试禁忌</p><p>（一）面试中，忌不良用语</p><p>1.急问待遇</p><p>“你们的待遇怎么样?”工作还没干，就先提条件，何况还没被录用呢!谈论报酬待遇无可厚非，只是要看准时机，一般在双方已有初步意向时，再委婉地提出。</p><p>2.报有熟人</p><p>“我认识你们单位的××”，“我和××是同学，关系很不错”，等等。这种话主考官听了会反感，如果主考官与你所说的那个人关系不怎么好，甚至有矛盾，那么你这话引起的结果就会更糟。</p><p>3.不当反问</p><p>主考官问：“关于工资，你的期望值是多少?”应试者反问：“你们打算出多少?”这样的反问就很不礼貌，很容易引起主考官的不快。</p><p>4.不合逻辑</p><p>考官问：“请你告诉我一次失败的经历。”“我想不起我曾经失败过。”如果这样说，在逻辑上讲不通。又如：“你有何优缺点?”“我可以胜任一切工作。”这也不符合实际。</p><p>5.本末倒置</p><p>例如，一次面试快要结束时，主考官问应试者：“请问你有什么问题要问我们吗?”这位应试者欠了欠身，开始了他的发问：“请问你们的单位有多大?招考比例有多少?请问你们在单位担当什么职务?你们会是我的上司吗?”参加面试，一定要把自己的位置摆正，像这位应试者，就是没有把自己的位置摆正，提出的问题已经超出了应当提问的范围，使主考官产生了反感。</p><p>（二）面试中，忌不良习惯</p><p>面试时，个别应试者由于某些不拘小节的不良习惯，破坏了自己的形象，使面试的效果大打折扣，导致失败。 手：这个部位最易出毛病。如双手总是不安稳，忙个不停，做些玩弄领带、挖鼻、抚弄头发、掰关节、玩弄考官递过来的名片等动作。</p><p>脚：神经质般不住晃动、前伸、翘起等，不仅人为地制造紧张气氛，而且显得心不在焉，相当不礼貌。</p><p>眼：或惊慌失措，或躲躲闪闪，该正视时，却目光游移不定，给人缺乏自信或者隐藏不可告人的秘密的印象，容易使考官反感；另外，死盯着考官，又难免给人压迫感，招致不满。</p><p>脸：或呆滞死板，或冷漠无生气等，如此僵尸般的表情怎么能打动人?得快快改掉，一张活泼动人的脸很重要。</p><p>行：其动作手足无措，慌里慌张，明显缺乏自信；反应迟钝，不知所措，不仅会自贬身价，而且考官会将你看“扁”。</p><p>总之，面试时，这些坏习惯一定要改掉，并自始自终保持斯文有礼、不卑不亢、大方得体、生动活泼的言谈举止。这不仅可大大地提升自身的形象，而且往往使成功机会大增。</p><p>（三）面试中，忌不良态度</p><p>凡参加面试的人，不管你素质如何，水平高低，一定不要忘记自己是在接受用人单位的挑选，以下态度应当注意：</p><p>1.忌目空一切、盛气凌人</p><p>有的应试者笔试成绩名列前茅，各方面条件也较优越，于是就恃才傲物，目空一切。面试中态度傲慢，说话咄咄迫恕R皇侵骺脊俣宰约旱幕卮鸩还宦饣蚪猩埔庖际保G看识崂怼⑵疵票纭⒕懿怀腥洗砦螅欢亲芟胝季菝媸缘闹鞫匚唬7次手骺脊僖恍┯朊媸阅谌菸薰氐奈侍猓缬萌说ノ蛔》刻跫绾危约航魏沃种拔瘢孟裼萌说ノ灰丫龆加盟ㄋ媸越鼋鍪窃谔柑跫蝗窃诒晃始霸ノ还ぷ髑榭鍪保荒鼙3掷渚玻1岬驮ノ涣斓技肮ぷ鳎穸ㄈ思业某杉āR蛭媸灾泄值乇岬驮ノ涣斓嫉墓ぷ鳎崛萌司醯媚汨铈癫谎保岩粤斓迹帽澈笠槁郾鹑耍献骶癫睢?br&gt;</p><p>2.孤芳自赏、态度冷漠</p><p>有的应试者平时性格孤僻，对人冷淡、心事较重，并把这种个性带进了面试考场，面试中表情冷漠，不能积极与主考官配合，缺乏必要的热情和亲切感。岂知所有用人单位的领导都希望自己的工作人员能够在工作中和睦相处、与人为善、团结互助、使人感到轻松愉快，这样才能提高工作效率。即使应试者平时性格孤僻，在面试的过程中，也要加以克服，否则气氛一定很沉闷，回答机械呆板，很难说你有中选的希望。</p><p>（四）面试中，忌不良表现</p><p>1.准备不足</p><p>无论你学历多高，资历多深，工作经验多丰富，当主考官发现应试者对申请的职位知之不多，甚至连最基本的问题也回答不好时，印象分自然大打折扣。主考官不但会觉得应试者准备不足，甚至会认为他们根本无志于在这方面发展。所以，面试前应做好充分的准备工作。</p><p>2.迟到失约</p><p>迟到失约是面试中的大忌。这不但会表现出应试者没有时间观念和责任感，更会令主考官觉得应试者对这份工作没有热忱，印象分自然大减。守时不但是美德，更是面试时必须做到的事。因此，应提前10～15分钟或准时到达。如因有要事迟到或缺席，一定要尽早打电话通知该公司，并预约另一个面试时间。另外，匆匆忙忙到公司，心情还未平静便要进行面试，面试表现也会大失水准。</p><p>3.欠缺目标</p><p>面试时，千万不要给主考官留下没有明确目标的印象。虽然一些应试者的其他条件不错，但工作没有目标就会缺少主动性和创造性，给企业带来损失。主考官倒情愿聘用一个各方面表现虽较逊色，但有远大目标和热忱的应试者。</p><p>4.逞强好胜、耍小聪明</p><p>有的应试者一入面试考场，便无拘无束，神采飞扬，处处显示高人一筹。不管主考官愿不愿意，主动上前与他们一一握手，然后四平八稳地就座；对主考官所提出的各种问题，均表现出不在话下的样子，回答问题总喜欢用“我以为”、“我主张”这一类字眼开头，不管对错，均夸夸其谈。本来有些问题自己确实答不上来，但自作聪明，东拉西扯地乱讲一遍，宁可答跑了题，也不愿做个老实人。这样做不仅容易贻笑大方，而且会使主考官感到你骄傲自满、敷衍塞责、不可信赖。</p><p>5.过多谈论前任工作</p><p>不管你的前任工作做得如何，都不要过多谈起。一般说来，你只要说明你做过类似的事，有相关经验即可，不必说工作的成效。如果你做得很好，为什么要离开?如果做得很差，那你个人的能力肯定有问题。总之，不管怎样说，都可能会招来主考官的反感。</p><p>6.与主考官“套近乎”</p><p>具备一定专业素养的主考官是忌讳与应试者套近乎的，因为面试中双方关系过于随便或过于紧张都会影口向主考官的评判。“套近乎”也会在客观上妨碍应试者在短短的面试时间内，做好专业经验与技能的陈述。聪明的应试者可以列举一至两例来赞扬招聘单位，从而表现出你对这家公司的兴趣。</p><p>7.长篇大论</p><p>虽说面试是在推销自己，不过切勿滔滔不绝、喋喋不休。主考官最怕应试者长篇大论，无终无始。其实，回答问题只需针对重点。相反，有些应试者十分害羞，不懂得把握机会表现自己，无论回答什么问题，答案往往只有一两点，甚至只回答“是、有、好、可以”等，这也是不可取的。如果性格胆小害羞，则应多加练习。</p><p>8.不善于打破沉默</p><p>面试开始时，应试者不善于打破沉默，而等待主考官打开话匣。面试中，应试者又出于种种顾虑，不愿主动说话，结果使面试出现冷场。即便能勉强打破沉默，语音语调也极其生硬，使场面更显尴尬。实际上，无论是面试前或面试中，应试者主动致意与交谈，会留给主考官热情和善于交谈的良好印象。</p><p>9.语气词过多</p><p>使用太多的如“呢、啦、吧”等语气词或口头禅会把主考官弄得心烦意乱，这只会让主考官误以为你自卑，准备不充分。</p><p>10.数落别人</p><p>在面试时，当着主考官数落现任或前任领导和同事的不是，这样做不但得不到同情，只会令人觉得你记仇、不念旧情和不懂得与人相处，反而更会招来主考官的反感。</p><p>11.说谎邀功</p><p>面试时，说谎、伪造“历史”，或将不属于自己的功劳“据为己有”，后果可大可小。即使现在能瞒天过海，也难保谎言将来不被揭穿。因此面试时，应实话实说，可以扬长避短，却不能以谎话代替事实。</p><p>三、面试中的误区</p><p>国外有些大公司甚至对不予录用的情况给出明文规定，如日本某公司条文说：“应聘者声音轻如蚊子者，不予录用；说话没有抑扬顿挫者，不予录用；交谈不得要领者，不予录用；面谈不能干脆利落地回答问题者，不予录用……”如果概括而言，至少要走出以下两方面的误区。</p><p>（一）缺乏信心</p><p>缺乏信心，是因为怕落聘，假设求职者的学识才能是基本符合要求的，那么缺乏信心是一种自卑心理的表现。在这种心理驱动下，它的种种表现：</p><p>1.说话吞吞吐吐，声音轻如蚊叫，表情很不自然。生怕说错、出丑，担心自己不符合要求。</p><p>2.说话空洞，有时会不自觉地加大音量。往往伴有表情、手势、姿态上的小动作。说话空洞，令人乏味，过多的小动作是为了掩饰自己内心不安的胆怯表现。</p><p>3.刻意追求仪表，不合所求工作岗位的要求。求职者注意服装穿着整洁得体即可，应届毕业生浓妆艳抹或西装革履、衣冠楚楚，去竞争机关团体干部岗位等就很不得体，实际是掩饰内心虚弱的表现。</p><p>4.谈话时经常打断对方话头，生怕对方不了解自己，尤怕对方误解自己，想通过插话来壮胆，一方面显得不礼貌，一方面又是着意掩饰自己信心不足的表现。</p><p>5.说话唯唯诺诺，思维只跟对方走，对所有话题的处理，只是一味地顺从、点头，看不到自己的主观能动性，更无法显示出自己的个性。</p><p>缺乏信心的表现很多，其总的特征是瞻前顾后，缩手缩脚，小心翼翼，顾虑重重。现代心理学告诉我们：“除了一些基本条件之处，成功来源于自信。”心理坦然，态度自然，说话实事求是，才有可能正常发挥自己的学识和能力水平，甚至超常发挥，取得成功。</p><p>（二）强人所难</p><p>面试成功的条件之一是与对方取得共鸣，可是有些人却喜欢谈一些以为对方也感兴趣的话题，谈一些以为对方也知道的话题“套近乎”，结果常常是事与愿违。须知，自荐过程的双方，己是客，彼是主，客须取悦于主，客须感动主。客的自说自话不能令主产生共鸣反让人感到生厌，其失败是必然的。我国古代战国时期的商鞅自荐于秦王，第一次谈商道，“孝公时时睡，弗听”；第二次谈王道，“孝公依然弗听”；第三次谈霸道，“孝公有了兴趣”；第四次精心准备，一举自荐成功，掀起中国历史上著名的“商鞅变法”运动。</p><p>面试过程，还请遵循客随主便原则。面试人是主导方，它决定着谈话内容和方向。但是高明的求职者应努力控制对方的问话和思路，将其引到对己方有利的内容和方向上来。这时候，形式上面试者是主导方，而实际上在努力让对方觉得他依然在控制局面的同时，求职者已经成功地把主题“和平演变”到己方立场上来了。强调的是，须让对方觉得依然在控制局面，否则仍将走进强人所难的误区。</p><p>四、公务员面试中的12种“高级”错误</p><p>在求职面试中，没有人能保证不犯错误。只是聪明的求职者会不断地修正错误走向成熟。然而在面试中有些错误却是一些相当聪明的求职者也难免会一犯再犯的，我们权称之为“高级”错误。</p><p>（一）不善于打破沉默</p><p>面试开始时，应试者不善“破冰”（英文直译，即打破沉默），而等待面试官打开话匣。面试中，应试者又出于种种顾虑，不愿主动说话，结果使面试出现冷场。即便能勉强打破沉默，语音语调亦极其生硬，使场面更显尴尬。实际上，无论是面试前或面试中，面试者主动致意与交谈，会留给面试官热情和善于与人交谈的良好印象。</p><p>（二）与面试官“套近乎”</p><p>具备一定专业素养的面试官是忌讳与应试者套近乎的，因为面试中双方关系过于随便或过于紧张都会影响面试官的评判。过分“套近乎”亦会在客观上妨碍应试者在短短的面试时间内，作好专业经验与技能的陈述。聪明的应试者可以例举一至两件有根有据的事情来赞扬招聘单位，从而表现出您对这家公司的兴趣。</p><p>（三）为偏见或成见所左右</p><p>有时候，参加面试前自己所了解的有关面试官，或该招聘单位的负面评价会左右自己面试中的思维。误认为貌似冷淡的面试官或是严厉或是对应试者不满意，因此十分紧张。还有些时候，面试官是一位看上去比自己年轻许多的小姐，心中便开始嘀咕：“她怎么能有资格面试我呢？”其实，在招聘面试这种特殊的采购关系中，应试者作为供方，需要积极面对不同风格的面试官即客户。一名真正的销售员在面对客户的时候，他的态度是无法选择的。</p><p>（四）慷慨陈词，却举不出例子</p><p>应试者大谈个人成就、特长、技能时，聪明的面试官一旦反问：“能举一两个例子吗？”应试者便无言应对。而面试官恰恰认为：事实胜于雄辩。在面试中，应试者要想以其所谓的沟通能力、解决问题的能力、团队合作能力，领导能力等取信于人，惟有举例。</p><p>（五）缺乏积极态势</p><p>面试官常常会提出或触及一些让应试者难为情的事情。很多人对此面红耳赤，或躲躲闪闪，或撒谎敷衍，而不是诚实的回答、正面的解释。比方说面试官问：您为什么5年中换了3次工作？有人可能就会大谈工作如何困难，上级不支持等，而不是告诉面试官：虽然工作很艰难，自己却因此学到了很多，也成熟了很多。</p><p>（六）丧失专业风采</p><p>有些应试者面试时各方面表现良好，可一旦被问及现所在公司或以前公司时，就会愤怒地抨击其老板或者公司，甚至大肆谩骂。在众多国际化的大企业中，或是在具备专业素养的面试官面前，这种行为是非常忌讳的。</p><p>（七）不善于提问</p><p>有些人在不该提问时提问，如面试中打断面试官谈话而提问。也有些人面试前对提问没有足够准备，轮到有提问机会时不知说什么好。而事实上，一个好的提问，胜过简历中的无数笔墨，会让面试官刮目相看。</p><p>（八）对个人职业发展计划模糊</p><p>对个人职业发展计划，很多人只有目标，没有思路。比如当问及“您未来5年事业发展计划如何？”时，很多人都会回答说“我希望5年之内做到全国销售总监一职”。如果面试官接着问“为什么？”，应试者常常会觉得莫名其妙。其实，任何一个具体的职业发展目标都离不开您对个人目前技能地评估以及您为胜任职业目标所需拟定的粗线条的技能发展计划。</p><p>（九）假扮完美</p><p>面试官常常会问：您性格上有什么弱点？您在事业上受过挫折吗？有人会毫不犹豫地回答：没有。其实这种回答常常是对自己不负责任的。没有人没有弱点，没有人没有受过挫折。只有充分地认识到自己的弱点，也只有正确地认识自己所受的挫折，才能造就真正成熟的人格。</p><p>（十）被“引君入瓮”</p><p>面试官有时会考核应试者的商业判断能力及商业道德方面的素养。比如：面试官在介绍公司诚实守信的企业文化之后或索性什么也不介绍，问：“您作为财务经理，如果我（总经理）要求您1年之内逃税1000万元，那您会怎么做？”如果您当场抓耳搔腮地思考逃税计谋，或文思泉涌，立即列举出一大堆方案，都证明您上了他们的圈套。实际上，在几乎所有的国际化大企业中，遵纪守法是员工行为的最基本要求。</p><p>（十一）主动打探薪酬福利</p><p>有些应试者会在面试快要结束时主动向面试官打听该职位的薪酬福利等情况，结果是欲速则不达。具备人力资源专业素养的面试者是忌讳这种行为的。其实，如果招聘单位对某一位应试者感兴趣的话，自然会问及其薪酬情况。</p><p>（十二）不知如何收场</p><p>很多求职应试者面试结束时，因成功的兴奋，或因失败的恐惧，会语无伦次，手足无措。其实，面试结束时，作为应试者，您不妨：表达您对应聘职位的理解；充满热情地告诉面试者您对此职位感兴趣，并询问下一步是什么；面带微笑和面试官握手并谢谢面试官的接待及对您的考虑。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>面试自我介绍</title>
      <link href="/2018/11/08/mian-shi-zi-wo-jie-shao/"/>
      <url>/2018/11/08/mian-shi-zi-wo-jie-shao/</url>
      
        <content type="html"><![CDATA[<p>1、请你自我介绍一下自己好吗？</p><p>回答提示：一般人回答这个问题过于平常，只说姓名、年龄、爱好、工作经验，这些在简历上都有。其实，企业最希望知道的是求职者能否胜任工作，包括：最强的技能、最深入研究的知识领域、个性中最积极的部分、做过的最成功的事，主要的成就等，这些都可以和学习无关，也可以和学习有关，但要突出积极的个性和做事的能力，说得合情合理企业才会相信。企业很重视一个人的礼貌，求职者要尊重考官，在回答每个问题之后都说一句“谢谢”，企业喜欢有礼貌的求职者。</p><p>2、你觉得你个性上最大的优点是什么？</p><p>回答提示：沉着冷静、条理清楚、立场坚定、顽强向上、乐于助人和关心他人、适应能力和幽默感、乐观和友爱。我在北大青鸟经过一到两年的培训及项目实战，加上实习工作，使我适合这份工作。</p><p>3、说说你最大的缺点？</p><p>回答提示：这个问题企业问的概率很大，通常不希望听到直接回答的缺点是什么等，如果求职者说自己小心眼、爱忌妒人、非常懒、脾气大、工作效率低，企业肯定不会录用你。绝对不要自作聪明地回答“我最大的缺点是过于追求完美”，有的人以为这样回答会显得自己比较出色，但事实上，他已经岌岌可危了。企业喜欢求职者从自己的优点说起，中间加一些小缺点，最后再把问题转回到优点上，突出优点的部分，企业喜欢聪明的求职者。</p><p>4、你对薪资的要求？</p><p>回答提示：如果你对薪酬的要求太低，那显然贬低自己的能力；如果你对薪酬的要求太高，那又会显得你分量过重，公司受用不起。一些雇主通常都事先对求聘的职位定下开支预算，因而他们第一次提出的价钱往往是他们所能给予的最高价钱，他们问你只不过想证实一下这笔钱是否足以引起你对该工作的兴趣。</p><p>回答样本一：我对工资没有硬性要求，我相信贵公司在处理我的问题上会友善合理。我注重的是找对工作机会，所以只要条件公平，我则不会计较太多。</p><p>回答样本二：我受过系统的软件编程的训练，不需要进行大量的培训，而且我本人也对编程特别感兴趣。因此，我希望公司能根据我的情况和市场标准的水平，给我合理的薪水。</p><p>回答样本三：如果你必须自己说出具体数目，请不要说一个宽泛的范围，那样你将只能得到最低限度的数字。最好给出一个具体的数字，这样表明你已经对当今的人才市场作了调查，知道像自己这样学历的雇员有什么样的价值。</p><p>5、你对加班的看法？</p><p>回答提示：实际上好多公司问这个问题，并不证明一定要加班，只是想测试你是否愿意为公司奉献。</p><p>回答样本：如果工作需要我会义不容辞加班，我现在单身，没有任何家庭负担，可以全身心的投入工作。但同时我也会提高工作效率，减少不必要的加班。</p><p>6、如果通过这次面试我们录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？</p><p>回答提示：一段时间发现工作不适合我，有两种情况：①如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；②你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。</p><p>7、谈谈你对跳槽的看法？</p><p>回答提示：①正常的“跳槽”能促进人才合理流动，应该支持。②频繁的跳槽对单位和个人双方都不利，应该反对。</p><p>8、工作中难以和同事、上司相处，你该怎么办？</p><p>回答提示：①我会服从领导的指挥，配合同事的工作。②我会从自身找原因，仔细分析是不是自己工作做得不好让领导不满意，同事看不惯。还要看看是不是为人处世方面做得不好，如果是这样的话我会努力改正。③如果我找不到原因，我会找机会跟他们沟通，请他们指出我的不足，有问题就及时改正。④作为优秀的员工，应该时刻以大局为重，即使在一段时间内，领导和同事对我不理解，我也会做好本职工作，虚心向他们学习，我相信，他们会看见我在努力，总有一天会对我微笑的。</p><p>9、你对于我们公司了解多少？</p><p>回答提示：在去公司面试前上网查一下该公司主营业务。如回答：贵公司有意改变策略，加强与国外大厂的OEM合作，自有品牌的部分则透过海外经销商。</p><p>10、最能概括你自己的三个词是什么？</p><p>回答提示：我经常用的三个词是：适应能力强，有责任心和做事有始终，结合具体例子向主考官解释，</p><p>11、你的业余爱好是什么？</p><p>回答提示：找一些富于团体合作精神的，这里有一个真实的故事：有人被否决掉，因为他的爱好是深海潜水。主考官说：因为这是一项单人活动，我不敢肯定他能否适应团体工作。</p><p>12、作为被面试者给我打一下分？</p><p>回答提示：试着列出四个优点和一个非常非常非常小的缺点（可以抱怨一下设施，没有明确责任人的缺点是不会有人介意的）。</p><p>13、你为什么要离开原来的公司?</p><p>回答提示：①回答这个问题时一定要小心，就算在前一个工作受到再大的委屈，对公司有多少的怨言，都千万不要表现出来，尤其要避免对公司本身主管的批评，避免面试官的负面情绪及印象。建议此时最好的回答方式是将问题归咎在自己身上，例如觉得工作没有学习发展的空间，自己想在面试工作的相关产业中多加学习，或是前一份工作与自己的生涯规划不合等等，回答的答案最好是积极正面的。②我希望能获得一份更好的工作，如果机会来临，我会抓住。我觉得目前的工作，已经达到顶峰，即没有升迁机会。</p><p>14、你欣赏哪种性格的人？</p><p>回答提示：诚实、不死板而且容易相处的人、有“实际行动”的人。</p><p>15、你通常如何对待别人的批评？</p><p>回答提示：①沈默是金，不必说什么，否则情况更糟，不过我会接受建设性的批评。②我会等大家冷静下来再讨论。</p><p>16、怎样对待自己的失败？</p><p>回答提示：我们大家生来都不是十全十美的，我相信我有第二个机会改正我的错误。</p><p>17、你为什么愿意到我们公司来工作？</p><p>回答提示：对于这个问题，你要格外小心，如果你已经对该单位作了研究，你可以回答一些详细的原因，像“公司本身的高技术开发环境很吸引我。”、“我同公司出生在同样的时代，我希望能够进入一家与我共同成长的公司。”、“你们公司一直都稳定发展，在近几年来在市场上很有竞争力。”、“我认为贵公司能够给我提供一个与众不同的发展道路。”这都显示出你已经做了一些调查，也说明你对自己的未来有了较为具体的远景规划。</p><p>18、对这项工作，你有哪些可预见的困难？</p><p>回答提示：①不宜直接说出具体的困难，否则可能令对方怀疑应聘者不行。②可以尝试迂回战术，说出应聘者对困难所持有的态度——工作中出现一些困难是正常的，也是难免的，但是只要有坚忍不拔的毅力、良好的合作精神以及事前周密而充分的准备，任何困难都是可以克服。</p><p>19、如果录用了你，你将怎样开展工作？</p><p>回答提示： ①如果应聘者对于应聘的职位缺乏足够的了解，最好不要直接说出自己开展工作的具体办法。②可以尝试采用迂回战术来回答，如“首先听取领导的指示和要求，然后就有关情况进行了解和熟悉，接下来制定一份近期的工作计划并报领导批准，最后根据计划开展工作。”。</p><p>分析：这个问题的主要目的也是了解应聘者的工作能力和计划性、条理性，而且重点想要知道细节。如果向思路中所讲的迂回战术，面试官会认为回避问题，如果引导了几次仍然是回避的话，此人绝对不会录用了。</p><p>20、你希望与什么样的上级共事？</p><p>回答提示：①通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会。②最好回避对上级具体的希望，多谈对自己的要求。③如“做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了。</p><p>分析：这个问题比较好的回答是，希望我的上级能够在工作中对我多指导，对我工作中的错误能够立即指出。总之，从上级指导这个方面谈，不会有大的纰漏。</p><p>21、与上级意见不一时，你将怎么办？</p><p>回答提示：①一般可以这样回答“我会给上级以必要的解释和提醒，在这种情况下，我会服从上级的意见。”②如果面试你的是总经理，而你所应聘的职位另有一位经理，且这位经理当时不在场，可以这样回答：“对于非原则性问题，我会服从上级的意见，对于涉及公司利益的重大问题，我希望能向更高层领导反映。”</p><p>分析：这个问题的标准答案是思路①，如果用②的回答，必死无疑。你没有摸清楚改公司的内部情况，先想打小报告，这样的人没有人敢要。</p><p>22、为什么选择我们公司？</p><p>回答提示：曾经在报章杂志看过关于贵公司的报道，与自己所追求的理念有志一同。而贵公司在业界的成绩也是有目共睹的，而且对员工的教育训练、升迁等也都很有制度。</p><p>分析：去面试前先做功课，了解一下该公司的背景，让对方觉得你真的很有心想得到这份工作，而不只是探探路。</p><p>23、谈谈如何适应办公室工作的新环境？</p><p>回答提示①办公室里每个人有各自的岗位与职责，不得擅离岗位。②根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。③多请示并及时汇报，遇到不明白的要虚心请教。④抓间隙时间，多学习，努力提高自己的政治素质和业务水平。</p><p>24、除了本公司外，还应聘了哪些公司？</p><p>回答提示：很奇怪，这是相当多公司会问的问题，其用意是要概略知道应徵者的求职志向，所以这并非绝对是负面答案，就算不便说出公司名称，也应回答“销售同种产品的公司”，如果应聘的其他公司是不同业界，容易让人产生无法信任的感觉。</p><p>25、你还有什么问题要问吗？</p><p>回答提示：企业的这个问题看上去可有可无，其实很关键，企业不喜欢说“没问题”的人，因为其很注重员工的个性和创新能力。企业不喜欢求职者问个人福利之类的问题，如果有人这样问：贵公司对新入公司的员工有没有什么培训项目，我可以参加吗？或者说贵公司的晋升机制是什么样的？企业将很欢迎，因为体现出你对学习的热情和对公司的忠诚度以及你的上进心。</p><p>26、如果你被录用，何时可以到职？</p><p>回答提示：大多数企业会关心就职时间，最好是回答“如果被录用的话，到职日可按公司规定上班”，但如果还未辞去上一个工作、上班时间又太近，似乎有些强人所难，因为交接至少要一个月的时间，应进一步说明原因，录取公司应该会通融的。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>单身的原因不是死宅就是懒癌，怎么治</title>
      <link href="/2018/11/08/dan-shen-de-yuan-yin-bu-shi-si-zhai-jiu-shi-lan-ai-zen-me-zhi/"/>
      <url>/2018/11/08/dan-shen-de-yuan-yin-bu-shi-si-zhai-jiu-shi-lan-ai-zen-me-zhi/</url>
      
        <content type="html"><![CDATA[<p>单身的原因不是死宅就是懒癌，怎么治？</p><p>很多兄弟找不到女朋友是有原因的，你以为自己命不好，只好投降认输，放弃了追逐爱情的希望，还美名其曰：“单身挺好”。</p><p>单身好不好只有你自己心里清楚。</p><p>我今天想跟大家说，任何追求的失败都是有原因的，不要用运气不好这个借口掩饰自己的缺点了，有这功夫还不如抓紧时间行动起来，认清楚自己的问题！</p><p>其实你自己的要求别太高，不要眼高手低，避免以下四个误区，摆脱单身狗还是指日可待的。</p><p>不要害怕表现自己</p><p>说到表现自己，很多宅男扎心了，就是因为长期不跟女生接触，见了喜欢的妹子话都不会说了，路都不会走了，约会的时候表现得冒冒失失。</p><p>说些情商低的话，妹子潇洒跟你说拜拜，留你一人站在原地空流泪。这样的过程会循环往复，直到你对自己失去信心，再也不敢约妹子出来为止。</p><p>宅男的问题是什么？不够自信啊亲！觉得自己配不上妹子，觉得自己不够有魅力，不敢大胆地表达自己的心意。</p><p>不管你有没有泡妞经验，不管你到底能不能把妹子迷倒，首先你一定要有自信啊，你自己都不相信自己，还指望妹子能主动来发现你的魅力？</p><p>追妹子的第一步，去说话，去社交，去认识更多的人，去大胆地表现自己，你敢于在社交过程中展示自己，才能赢得别人的尊重，妹子才能注意到你！</p><p>　　扩大自己的社交圈</p><p>这都什么年代了，还坐在家里等着幸福来敲门呢，等了这么多年都没人来，你家是不是住得太偏僻了？！</p><p>很多兄弟为什么找不到女朋友，因为首先你就没什么朋友圈，根本一个妹子都不认识，连追都不知道追谁去，解决问题要抓源头。</p><p>你要走出去尽可能多的认识更多的妹子，哪怕认识更多的男人也好啊，朋友圈的扩大会给你带来很多异性资源，在认识妹子的基础上，才能谈追不追的问题！</p><p>而且扩大自己的社交圈不光是为了追妹子，也是为了提升自己，丰富自己，周末不要宅在家，多出去跟朋友聚一聚，多认识几个朋友。</p><p>要知道所有妹子的眼光都聚在社交场合的主角身上，有越多的人喜欢你，就会有更多的人喜欢你！</p><p>把自己的生活推上正能量翻滚的轨道，爱情自然就会来敲门了。</p><p>颜即正义</p><p>外表这个事儿是老生常谈的问题了，没人有义务通过你邋遢的外表去了解你的内在美，所以请注意你的穿着和个人卫生状况。</p><p>妹子的要求其实没你想象的那么高，不要求你有人鱼线八块腹肌还有韩国欧巴的脸，保持脸部清爽不油腻，穿衣整洁有品位，发型中规中矩不奇葩就行了，这些只要稍微努力一下就可以做到。</p><p>如果直男们实在是穿衣无能，建议去优衣库买几件基本款准没错，头发不要染色，也不要搞什么飞机头，去理发店让Tony老师给你剪个正常的直男头，原则只有一个，让你看起来特别精神！</p><p>你自己形象的档次，决定你能追到女生的质量，矮穷矬想泡白富美，不好意思，你不配。</p><p>追妹子要有高效的方法</p><p>表白死是追妹子过程中的雷区，在之前的文章里我已经强调了很多次了。</p><p>比如一看人长得漂亮就扑上去表白，今天跟这个妹子表忠心，明天又被那个妹子迷得神魂颠倒，追来追去都是一场空。</p><p>我有很多哥们，明明条件不错，身边女孩子也很多，可是就是找不到女朋友，别人都觉得困惑，这么好的男孩子怎么没女生喜欢呢？</p><p>原因就是他太心急了，见到喜欢的妹子，没跟人熟悉就告白，吓跑了好多妹子，追妹子要有一个高效的手段，不能靠死心眼来追妹子。</p><p>对于喜欢的妹子，一开始你不要着急，先获得她的好感，然后一步一步加深她对你的熟悉程度，最后到时机成熟了再升级关系。</p><p>最高明的猎人都懂得耐心，狩猎讲究的是布陷阱，然后等待猎物自己走进来，之后收网推到一气呵成。</p><p>最后一点，也是最重要的一点，一定要实践！实践起来！如果你懒癌晚期，学再多的技巧都没用，单身狗都是懒狗，勤快奋斗的人早都抱得美人归了！</p><p>说到勤奋，自然是要活到老学到老，为了让兄弟们快速脱单，坏男孩重磅推出微信聊天大师课，美女导师手把手教你微信撩妹法则，学了这个课，没有你追不到的妹子！戳“一键获取”马上听课！</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/2018/11/08/sheng-huo/"/>
      <url>/2018/11/08/sheng-huo/</url>
      
        <content type="html"><![CDATA[<p>如果可以自由选择，我宁愿每天都宅在家。醒了就玩游戏看电影，饿了就叫外卖或者去楼下的超市买一堆吃的，困了就撸一发睡了。事实上我也有两月的时间是这样度过的，那段时间分不清白昼与黑夜，只记得《古剑奇谭》游戏里一段段凄惨的剧情，《欢乐喜剧人》节目里一个个好玩的故事，还有像《十二公民》这类叫好不叫座的片子……</p><p>        什么也不用做，很舒服！不过你可以来看看我的现在，白天上班工作，下班后给自己安排一个约会。来顿火锅或者西餐，有精力和妹子一起玩个密室动动脑子或者打个台球动动身体，没精力了和妹子找个小店一起看书或者到电影院一起看片。周末还可以一起睡到自然醒，醒来以后还有碗浇头丰盛的面条吃。</p><p>        这两种不同的生活方式你更愿意哪一种？</p><p>        请诚实点回答，不要再骗自己了。</p><p>        那么，在这里爱情解码将通过八周的《魅力游戏》告诉你：有魅力的男生，在哪里都不会孤单。现在，卸载农药关掉AV，我们去认识女孩子。</p><p>        但请稍等！在认识女孩子之前我们需要先做一点儿准备。也特别提醒：请想清楚要加入我们跟着一起做再看接下来的内容，不然也就没有任何意义</p><p>        今天是周五，下班前你可以约一个关系比较熟的女生……或者一个信得过的男生周末一起去逛街，去买衣服！不过在此之前，哪怕你的衣柜里有好几件自我感觉良好的衣服也需要一并收好，它们以后将只会出现在你日常上班的时候。我们要准备的是一个不一样的你，这里有4个要点，请拿一个小本子记下来：</p><p>       1.请搭配一套完整的服饰，至少包含：衣服、裤子、鞋子和皮带；</p><p>       2.请确保搭配出来的这套服饰修身、有型，很精致；</p><p>       3.有了这一套很精致的服饰，请赶紧找理发师做一个发型并且让他告诉你这个发型的日常打理与维护（你这么精致，他会有压力的；）</p><p>       4.请记得这一套服饰每周最少穿1天，最多穿3天；而不穿的时候，请一定要洗好挂起来，保证干净没有褶皱；</p><p>       服饰选的好，你穿起来也会特别的自信， 你的气质也会自然而然地流露出来。后面我们去认识妹子的时候，她绝对放弃抵抗！</p><p>       周末做完第一步，记得奖励自己一支鸭腿。接下来，你需要丰富一些内涵。至少读书与运动这两件事是你必须要做的，它可以让你穿上衣服成为殚见洽闻的才子，脱下衣服成为孔武有力的野兽。那么，这里还有有四个小贴士：</p><p>       1.至少每个月要读完一本书。如果读不进去可以选择知名小说，至少读起来会比较顺畅，比如《活着》、《解忧杂货铺》……</p><p>       2.至少每周要运动两次。不要追求器材与装逼，哪怕是最简单的慢跑半小时；</p><p>       3.除了读书与运动还可以去旅行，见识这广阔的大千世界；或者去学一门才艺，总有可以让你展现的机会；</p><p>       4.甚至还可以做一些挑战自己的事情，比如坚持每周与大家分享这场《魅力游戏》，并指导大家顺利通关；</p><p>       深度作为男人的一个硬指标，是必不可少的。但宽度也同样重要，正如超级夺爱是一个心理咨询师的同时还是一个旅行体验师、一个美食博主、一个互联网的运营策划！这里每一个标签都是都内涵满满，可以慢慢品味。</p><p>       完成这些，也就到了周五。现在的你无论是内在还是外在都有了一个简单的提升，你的魅力也会逐步上升，请坚持改变自己，不要放弃治疗！那么现在，请打理一下自己，这个周末就要认识女孩子了：</p><p>       1.请至少购置好以下的日常基础器具：发泥/发蜡、干胶、洗面奶、剃须刀、鼻毛修剪器、指甲刀、鞋刷子；</p><p>       2.至少每隔一天的出门前请将上述工具依次使用一遍；</p><p>       3.报名一场周末的同城活动，甚至是周边游，在活动中认识同龄的朋友，无论男生还是女生；</p><p>       4.如果害怕报名遇见陌生人，你可以先约一个许久不见老朋友接着再报名一场周末的同城活动；</p><p>      别紧张，你尽管挑选自己喜欢的活动或者约自己最真心的老朋友，下周五的我会在这里与大家继续闯关，解决掉活动中如何认识女孩子的问题。</p><p>       以上通关的每一步，你都可以记录下自己的心路历程或者为自己的改变做一场见证！如果愿意，你也可以发给我。这样会督促你的通关，毕竟下周开始我们就要去认识妹子了！</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>脸部表情，走路姿势，微表情</title>
      <link href="/2018/11/08/lian-bu-biao-qing-zou-lu-zi-shi-wei-biao-qing/"/>
      <url>/2018/11/08/lian-bu-biao-qing-zou-lu-zi-shi-wei-biao-qing/</url>
      
        <content type="html"><![CDATA[<p>脸部表情训练</p><p>  在与人交流或演讲中，如果你有潇洒的风度，高雅的气质，方正的步态，得体的打扮，这些都非常重要。但是，不要忘了，演讲者的脸部，有时对演讲的效果来说，起了非常大的作用。因为脸部表情是感情的睛雨表，听众可以从上面读懂演讲者的情感世界。</p><p>  我国著名的成功学专家、演说家赵菊春先生认为，在演讲中有以下常见的脸部表情：</p><p>  突出下颚表示攻击性行为；缩紧下巴表示畏惧和驯服；抚弄下颚表示掩饰不安或胸有成竹；伤心时嘴角下撇，欢快时嘴角提长，委屈时撅起嘴巴，惊讶时张口结舌，仇恨时咬牙切齿，忍耐时咬住下唇；下颚上抬，把鼻子挺出，是傲慢、自大、倔强的表现；用手摸鼻子，是怀疑对方；用手摸耳垂表示自我陶醉；</p><p>在讲话和演说中，我们可能会表现出七情六欲，这可以用脸部的表情肌去完成，一般认为，表情肌是能够训练的，也就是说，如果我们了解了那些表情肌参与了某种情绪的表演，以后尝试去做就可以了。以下罗列了一些脸部表情与表情肌之间的关系：</p><p>愉快：嘴角向后及上拉，眉毛平展，眼睛平眯，瞳孔放大；</p><p>抑郁：嘴角前及下垂，眉毛紧锁，面孔显长；</p><p>高兴：眉毛上抛，嘴角向上，口微张；</p><p>蔑视：双眼微闭，视角下斜，抬面颊；</p><p>痛苦：皱双眉、半眯双眼、嘴角下拉；</p><p>生气：眼睁圆大，眉毛倒竖，微闭口唇，紧咬牙关；</p><p>当然，脸部表情的熟练运用必须与演讲的内容结合起来，适时、适事、适情、适度是它的原则，切忌晦涩不明、矫揉造作和牵强附会。</p><p>微笑表情训练</p><p>微笑表情训练：</p><p>1、笑容练习操；2、笑容保持操；3、诱导法表情姿态训练；4、诱导动作配合练习；</p><p>5、音乐诱导练习；6、忆情诱导练习； 7、 神姿标准如何？切忌什么神态？</p><p>笑容练习</p><p>1、眉毛上下转动５次，倘若转动不好亦不要紧，只要收缩上眼睑的肌肉就达到了目的。</p><p>2、将黑眼珠上翻慢慢转圈，左转５圏，右转５圈，这一节对消除眼睛疲劳亦很有效。</p><p>3、将食指置于双目中间，做对眼状１０妙，然后放松，重复５次。</p><p>4、将两手食指置于双眼左右，眼珠尽量不看食指保持１０妙，放松。重复５次。</p><p>5、左右眼睛交替闭目，难以闭合的一只要重点练习，倘若双目都能同等程度地一闭一合，</p><p>眼神操练习便达到了及格</p><p>笑容练习操：</p><p>1、食指抵住两边嘴角，慢慢上升，保持１０秒钟</p><p>2、接着做适中的笑脸，嘴角更往上挑，保持１０妙钟，其他部分保持松弛状</p><p>3、嘴角接平瞳孔的延长线，作大笑状，持续１０秒钏钟，复原</p><p>4、手指沿颧骨按住面部，反复做笑容和松弛状，确保肌肉运动</p><p>5、最后放松脸部的肌肉，做一个自已喜欢的笑容。你会发现自已的表情比做操前生动得多</p><p>笑容保持操：</p><p>1、作大笑状，嘴角用食指固定，不让肌肉复原，保持１０秒钟</p><p>2、回到适中的笑，固定嘴角，保持１０秒钟</p><p>3、用食指抿住嘴角回到微笑状，保持１０秒钟</p><p>4、抿嘴，嘴角略微上挑，保持１０秒钟?</p><p>5、最后，食指按住嘴角，尽量嘟嘴，保持１０秒钟，每日坚持做这节操，可增加表情的美感</p><p>有趣的表情训练</p><p>为了准备毕业汇演，现在我们各班都在排练节目。我负责排舞蹈节目，可是一个星期的排练后，发现自己在教幼儿舞蹈或模仿动作时，我一步一步地教，幼儿一遍一遍地学，幼儿缺乏兴趣，注意力不集中，常常是会了这个动作又忘了那个动作，动作连接不上，做得也不到位。老师很卖力地教，越教越生气，幼儿心不在焉地学，不用说舞蹈情感地表达了。</p><p>我们知道，幼儿的思维带有明显的具体性和形象性，也就是我们所说的具体形象思维。他们的记忆以形象记忆为主，它的直观性、鲜明性，使幼儿容易记忆。我就采用设置情境，编小故事的方法，既增加了情趣，又使幼儿很快地掌握了舞蹈动作，也有利于舞蹈情感的表达。如：教小朋友练习笑，排练的时候我就孩子们想象自己是一个快乐的小动物，果然，幼儿一个个动作做得很到位；在做动作时候，许多幼儿都低头含胸，看着自己的脚。我就说：“小动物看到前面有一道漂亮的彩虹，多美啊！”小朋友一个个都能抬头挺胸，眼睛向前看，姿势挺拔、优美。用情节把整个舞蹈串起来，使幼儿能连贯地完成舞蹈动作。把这种方法运用到平时的教学活动中，同样适用。如教幼儿学习模仿动作，小鸟飞、小兔跳、小熊走等都可以设置故事情境，幼儿接受得快，教师教得高兴，教学气氛轻松、愉快。</p><p>教师在教学过程中，应抓住幼儿的年龄特点，采用多种教学手段的交互作用，创造性地进行教学活动，使老师教学新颖、独特、灵活、丰富，从而吸引幼儿的兴趣，培养幼儿的各种能力。</p><p>心理咨询与治疗学实验训练指导手册</p><p>说 明</p><p>心理咨询与治疗学的实验训练，在心理学专业训练中具有重要的意义。具体说来，我们应该本着以下几方面的目的和意义，从多层面多角度地明确实验的要求，设计训练的项目。</p><p>第一，通过本课程的实验训练，在于弥补课堂理论教学的不足，激发学生的学习兴趣，培养学生的科学态度，促进学生对心理咨询与治疗理论的理解和把握，体验和感受心理咨询与治疗双方角色的想法和情感，为拓展学生在心理咨询与治疗方面的技能奠定良好的基础，提高心理咨询与治疗学课程的课堂教学质量。</p><p>第二，通过具体的实验训练项目，训练学生在心理咨询与治疗方面的实际操作技能，培养学生运用心理咨询与治疗理论的实际工作能力，强化学生在应用心理学方面的综合素质，为学生将来就业尽早适应并顺利开展心理咨询与治疗活动，乃至于整个心理健康教育工作，奠定良好的技能条件。</p><p>第三，通过实验训练项目，应该让学生真切地感受到科学与人文在心理学事业中的有效融合，树立学生良好的科学观，以便在心理学专业素养上更上一个台阶。</p><p>第四，这些实验训练课程，还有助于提高学生在心理咨询与治疗方向的科研能力和创新能力。</p><p>     要实现上述意义，达到预期的教学目的，在实验教学过程中要求每个学生在各个实验或训练项目上，都必须积极主动地开展实验和训练，并且要在每一个项目上切实地得到锻炼。由于心理咨询与治疗学的实验训练除了具有医学特色以外，还带着比较浓厚的人文色彩，与物理、化学等自然学科实验具有很大的区别，从而要求在实验训练过程中必须结合不同地区、不同对象的人文特点，灵活地把握实验训练项目的技术要领，以便在未来的工作岗位中得到更加灵活的运用。</p><p>第一部分  专业形象基础素质训练</p><p>项目一  表情训练</p><p>一、训练目的</p><p>认识自己的表情，理解本人各种表情所表达的确切信息，避免表情误差，并学会借助不同语境和咨询需要，进行准确应用，做到情达意、意传情。</p><p>二、训练导语</p><p>心理咨询与治疗，是依赖人际上的良好沟通来实现的。表情是人际交往的重要途径。能否正确认识和应用自己的表情，直接影响到专业工作者的咨询与治疗效果。</p><p>在日常生活中，人们往往对自己的表情是忽视的。要么自己不知道自己的表情，是否准确表达了内心的思想感情，要么不知道别人是否能够准确明白自己的表情所要表达的意思。实际上，这样的误差所造成的误会，是很常见的。比如，有的人因为对方的成绩而内心很高兴，自然就高兴地笑了起来，他自己感觉这是高兴的心情在表情上的直接流露。可是，别人怎么看，他当时笑起来都是像在哭，或者笑得很尴尬，好像总有什么心事没有说出来似的，让人感觉似乎心存几分嫉妒。</p><p>像上面类似的情不达意，或者意不传情的例子，每个人或多或少都有。就许多职业而言，对工作是无大的妨碍的。但是，对于心理咨询与治疗人员来说，这就需要进行专业训练了。</p><p>（一）认识自己的面部表情</p><p>内容：认识自己未训练之前的各种基本表情，所表达的人文信息。</p><p>方法与步骤：</p><p>1、对着镜子，酝酿不同的心情，选择自己在喜、怒、哀、乐、惧等五个方面具有代表性的表情脸谱。无法表达的人，需要反复练习，以自以为能够准确选择为止。</p><p>2、面对摄像系统，录制自己的五种表情脸谱。</p><p>3、小组观看，每人反馈对自己表情的理解，并提出修改意见。</p><p>4、对照小组成员的理解和修改意见，对着镜子进行改进和训练。可以由小组成员给予帮助。</p><p>5、在单人镜子训练时要特别注意体验表情肌肉的状态，并巩固下来。日常生活中要保持留意和应用。</p><p>6、再由摄像系统拍摄矫正后的表情脸谱。</p><p>7、以课件的形式，撰写实验训练报告。报告包括：（1）自己原来面部表情的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）前后表情有何不同，如何进一步改进，如何巩固，如何应用。</p><p>（二）特定面部表情训练</p><p>内容：对常见的微笑、喜悦、忧虑、愠怒、惊讶、悲伤等，进行认识和训练。</p><p>方法和步骤：</p><p>1、对着镜子，分别酝酿上述心情，选择自己在微笑、喜悦、忧虑、愠怒、惊讶、悲伤等六个方面具有代表性的表情脸谱。无法表达的人，需要反复练习，以自以为能够准确选择为止。</p><p>2、面对摄像系统，录制自己上述的六种表情脸谱。</p><p>3、小组观看，每人反馈对自己表情的理解，并提出修改意见。</p><p>4、对照小组成员的理解和修改意见，对着镜子进行改进和训练。可以由小组成员给予帮助。感觉有明显进步后，可以进入下一环节。</p><p>5、在单人镜子训练时要特别注意和体验表情肌肉的状态，并巩固下来。日常生活中要保持留意和应用。</p><p>6、再由摄像系统拍摄矫正后的表情脸谱。</p><p>7、以课件的形式，撰写实验训练报告。报告包括：（1）自己原来面部表情的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）前后表情有何不同，如何进一步改进，如何巩固，如何应用。</p><p>（三）面部情达意、意传情训练</p><p>内容：在模拟情境中，就咨询与治疗过程常用的表情，比如关心、理解、赞许、同情、疑义、异议等进行学习和训练。</p><p>方法和步骤：</p><p>1、运用上述训练的技巧，酝酿自己的相应的心情，首先对着镜子，就关心、理解、赞许、同情、疑义、异议等表情进行尝试练习。</p><p>2、小组成员模拟来访者说一段情节，由学生做出关心、理解、赞许、同情、疑义、异议等六种表情，用摄像系统拍摄下来。</p><p>3、小组讨论，提出反馈意见和改进的建议。</p><p>4、单人对着镜子进行训练，感觉有明显进步后，可以进入下一环节。</p><p>5、小组成员再次模拟来访者说另一段情节，由学生做出关心、理解、赞许、同情、疑义、异议等六种表情，用摄像系统拍摄下来。</p><p>6、以课件的形式，撰写实验训练报告。报告包括：（1）自己原来面部表情的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）前后表情有何不同，如何进一步改进，如何巩固，如何应用。</p><p>项目二  姿势训练</p><p>一、训练目的</p><p>认识自己平时的姿势，掌握几种基本姿势的状态，理解正确姿势的含义和意义，学会树立良好的从业者姿势形象，以健康向上、高尚优雅的姿势和状态，服务于学校以及大众社会。</p><p>二、训练导语</p><p>姿体语言反映了主体的身体状态、内心思想和情感状态，同时也反映了主体的个性特点和修养水平。在日常生活中，许多人是很随意的。在熟悉的朋友之间，姿体语言的影响相对要小一些。但是，在平时接触比较少而每次接触都有重要意义的场合下，姿体语言往往会起着微妙的作用。心理咨询与治疗工作就是属于这一类活动。</p><p>但是，一些专业工作者的某些下意识的动作和姿势，往往并不为他（她）自己所觉察。比如，说话时喜欢用手不断地指划对方，高架二郎腿晃晃悠悠地说话等等。因此，认识自己的习惯动作和姿势，并结合专业工作的需要进行训练，就显得很有必要了。</p><p>语气语调训练必须结合表情训练的成果，否则，被视为训练不合格。</p><p>（一）坐姿练习</p><p>内容：1、腿部姿势练习：并腿姿、侧腿姿、低位架腿姿等。2、手和躯干部位姿势练习：平手直正姿、傍手侧倾姿、夹板书写姿等。</p><p>方法和步骤:</p><p>1、小组交流，分别头部、躯干、手、腿等部位，相互指出对方的习惯坐姿，包括好的习惯姿势和不良的习惯姿势。每个学生记录下自己的情况。</p><p>2、单人对着落地镜，再现同学们所指出的不良的习惯坐姿，并一一认识其可能造成的负面影响，并将其影响记录在实验记录本上。对不良的习惯坐姿进行摄像。</p><p>3、小组观摩（1）腿部姿势练习：并腿姿、侧腿姿、低位架腿姿等；（2）手和躯干部位姿势练习：平手直正姿、傍手侧倾姿、夹板书写姿等。</p><p>4、单人对着落地镜进行练习。小组成员进行指导、评估和矫正。在练习所观摩的坐姿时，对正确的姿势定格体验20秒钟，感受身体每个部位的状态。</p><p>5、以平时节奏，落座一次即可达到标准姿势，可视为实验室熟练状态。熟练每种姿势后，可以进入下一步骤。</p><p>6、对一次性落座的达标状态进行摄像。</p><p>7、以课件的形式，撰写实验训练报告。报告包括：（1）自己原来坐姿的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）前后坐姿有何不同，如何进一步改进，如何巩固，如何应用。</p><p>（二）立姿练习</p><p>内容：立正姿、稍息姿、夹物姿、捧物姿、挎物姿。</p><p>方法和步骤：</p><p>1、小组交流，分别头部、躯干、手、腿等部位，相互指出对方的习惯立姿，包括好的习惯姿势和不良的习惯姿势。每个学生记录下自己的情况。</p><p>2、单人对着落地镜，再现同学们所指出的不良的习惯立姿，并一一认识其可能造成的负面影响，并将其影响记录在实验记录本上。对不良的习惯立姿进行摄像。</p><p>3、小组观摩优雅的立正姿、稍息姿、夹物姿、捧物姿、挎物姿等。</p><p>4、单人对着落地镜进行练习。小组成员进行指导、评估和矫正。在练习所观摩的立姿时，对正确的姿势定格体验20秒钟，感受身体每个部位的状态。</p><p>5、行走3米，以平时节奏，定格一次站立姿势即可达到标准姿势，可视为实验室熟练状态。熟练每种姿势后，可以进入下一步骤。</p><p>6、对每个一次性定格的达标状态进行摄像。</p><p>7、以课件的形式，撰写实验训练报告。报告包括：（1）自己原来立姿的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）前后立姿有何不同，如何进一步改进，如何巩固，如何应用。</p><p>（三）行走姿势练习</p><p>内容：猫步、军步。</p><p>方法和步骤：</p><p>1、小组交流，分别头部、躯干、手、腿、脚等部位，相互指出对方的习惯行走姿势，包括好的习惯姿势和不良的习惯姿势。每个学生记录下自己的情况。</p><p>2、单人对着落地镜，再现同学们所指出的不良的习惯行走姿势，并一一认识其可能造成的负面影响，并将其影响记录在实验记录本上。对不良的习惯行走姿势进行摄像。</p><p>3、小组观摩漂亮优雅的猫步、端庄大方的军步等。</p><p>4、单人对着落地镜进行练习。女生学习猫步，男生学习军步。小组成员进行指导、评估和矫正。在练习所观摩的行走姿势时，对正确的姿势定格体验20秒钟，感受身体每个部位的状态。</p><p>5、行走3米，以平时节奏，自如完成一段行走姿势即可达到标准姿势，可视为实验室熟练状态。熟练行走姿势后，可以进入下一步骤。</p><p>6、对一段行走姿势的达标状态进行摄像。</p><p>7、以课件的形式，撰写实验训练报告。报告包括：（1）自己原来行走姿势的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）前后行走姿势有何不同，如何进一步改进，如何巩固，如何应用。</p><p>（四）姿势的连续动作组合练习</p><p>内容：上述（一）、（二）、（三）的不同组合练习，注意区分男女姿势的区别，为此，要求按性别进行分组训练。</p><p>方法和步骤：</p><p>1、每人对着落地镜，回顾原来（一）、（二）、（三）的练习成果。</p><p>2、每人对着落地镜，按行走―站立―行走―落座―站立―行走―落座的顺序，进行练习。</p><p>3、对第一轮组合练习进行摄像。</p><p>4、反复练习，直到小组成员评估合格为止。</p><p>5、对熟练后的最后一轮组合动作，进行摄像。</p><p>6、以课件方式，提交训练报告。报告包括：（1）自己原来日常姿势的特点，存在哪些不足。（2）如何进行矫正，有何感受和体会。（3）与新的训练姿势有何不同，如何进一步改进，如何巩固，如何应用。</p><p>项目三  语气语调训练</p><p>一、训练目的</p><p>认识自己语气语调的特点，熟练常用的语气语调，使用正确的语气和语调，准确表达自己的思想和感情，同时，借此养成平时注意并打造出色语言艺术水平的好习惯。</p><p>二、训练导语</p><p>在很大的程度上，心理咨询与治疗是一门语言的交流艺术。语言是心理咨询与治疗的内容载体，也是有效咨询与治疗的重要工具。语言的修养是一个长期的积累过程，与人们各方面的人文素养有着极为密切的联系。因此，一位出色的心理咨询与治疗家，必须是一位平时非常善于积累和应用语言艺术的有心人。</p><p>在日常交往中，人们容易产生许多误解。其中，重要的就是在语言本身的沟通上出现了麻烦。事实上，谁愿意有意造成误解呢？看来，语言的沟通是人们社会交往中的一大难题。</p><p>要训练学生具有良好的沟通能力，需要从许多方面进行训练。应该说，我们整个心理咨询与治疗实验训练手册，都在从不同层面上训练学生的语言沟通技巧。当然，就语言的语法修辞而言，最直接的就算这个语气语调训练了。</p><p>语气语调训练必须结合表情训练的成果，否则，被视为训练不合格。</p><p>（一）陈述语气练习</p><p>（二）疑问语气练习</p><p>疑问：这美不美？（问而不答）</p><p>反问：这难道不美吗？（问中有答）</p><p>设问：这美不美？美。（自问自答）</p><p>（三）反问语气练习</p><p>（四）感叹语气练习</p><p>（五）祈使语气练习</p><p>（六）复句语调练习</p><p>（七）关键实词语调练习</p><p>（八）语句节奏练习</p><p>表情训练的方法和要领</p><p>谈到这个话题的时候，大概很多朋友的第一反应就是“长相当然是天生的！”。因为除了美容和整容之外，人们没有其他的改变相貌的方法。</p><p>但是，我们常有这样的经验，有的人在小的时侯长得很漂亮，可长大以后其相貌却不像预期的那么出众，人们俗称这是‘长走样儿了’。也有的人小的时候看起来很一般，但随着年龄的增长却变得越来越漂亮。这都是为什么呢？</p><p>笔者曾学过表演，记得很多同学甚至老师都认为，经过表情训练的人会比以前更漂亮些，于是我就对此进行了研究。</p><p>结果发现，人在作表情的时候，脸上会出现纹理，这些纹理可以分成两种，一种是皱纹，一种是表情纹，而表情纹的状态可以决定皱纹的多少，可以决定面部的轮廓，还可以决定脸型是否对称。而表情纹是可以通过表情训练来改变的！</p><p>除此之外，相貌还跟人的体质有关，人要是胖，则面部显得臃肿，而且常伴有双下巴。要是瘦并有溜肩的话，则可能因为肩部肌肉不够发达，而不能更好地防止肩膀下溜，而溜肩还会压迫脊柱造成驼背，驼背又会带动面部肌肉下坠。</p><p>胖瘦和溜肩的问题都可以通过健美训练而解决，健美是一门很专业的学问。</p><p>另外，相貌还跟保养有关系。</p><p>笔者在对以上的与相貌有关的知识进行了搜集、研究和整理之后，认为除了高鼻梁和双眼皮是遗传的之外，其他方面则都是可以通过训练而改变的。再加上美容和化妆的辅助，就可以得出结论：对正常人的相貌而言，主要的影响是来自后天而不是先天。</p><p>第一章 美貌的标准</p><p>美貌的标准是什么呢？对于这个问题，研究美容与化妆的人们已经有了一些共识。我把这些共识和自己的新发现融汇、整理之后，把美貌的标准归纳为五条：</p><p>（1）因为杂乱的图象相对于规则的图象而言是丑的。所以，美的相貌应该是‘规则’的。说白了，就是长得精致，还要左右脸对称，而且在作表情的时候，没有兜兜齿、双下巴、鱼尾纹等几十种问题。这些都可以通过对表情的训练而做到，具体内容见第二章。</p><p>（2）体内的脂肪含量适度，身姿挺拔（这两者和长相的关系我已经在序言中提过）。这两个要求可以通过健美训练而做到，具体内容见第三章。</p><p>（3）头面部的保养较好，没有影响相貌的疾病。保养方法见第四章。</p><p>（4）有阳刚或阴柔之美，这话的意思是，男性的眉型要浓；女性则要肌肤滑嫩，眉型要相对纤细。换句话说，就是性征都要明显。使性征变得更明显的途径，在附录一中有介绍。</p><p>（5）有双眼皮。双眼皮能使眼睛显得更大一点儿。不喜欢留单眼皮的朋友，可以去美容院解决这个问题。</p><p>第二章 表情训练的方法和要领</p><p>（1）表情训练的方法：</p><p>人有四种基本表情，即喜、怒、哀和惧，只练这四种就足矣了。在训练开始之前，先要了解表情纹、喜气、怒气、哀气和惧气的概念。</p><p>（1）表情纹、喜气、怒气、哀气和惧气的概念：</p><p>1、人在作表情的时候，脸上常常会出现纹理，这些纹理可以分成两种，一种是皱纹，另一种就是表情纹了。表情纹一共有四对，可以分别叫做上位笑纹、中位笑纹、下位笑纹和怒纹。如图1：</p><p>而且，女性的下位笑纹一般都比男性的短。某些女性的下位笑纹因为非常短，而且肌肤又很细腻，所以她们的下位笑纹就呈现为酒窝了（酒窝又叫梨涡）。有没有下位笑纹，对女性相貌的影响不大，而对男性的相貌则就有很明显的影响。</p><p>2、当人喜笑颜开时，有一种气使脸上的肌肉膨起，这种气俗称喜气。</p><p>3、人在生气的时候，有一种气使眉毛皱起，这种气俗称怒气。</p><p>4、人在哀伤时，有一种气冲向双眼并催出了眼泪，这种气可以叫作哀气。</p><p>5、当人恐惧的时候，仍有一种气使头皮发怵而后颤，有的人还会双耳略后移，这种气可以叫作惧气。</p><p>（2）对‘喜’的训练</p><p>请朋友们先准备好一面小镜子，镜子的大小以能看到自己面部的全貌为宜，以后对所有表情的训练都会用到它。</p><p>在四种基本表情中，人在笑的时候，所出现的问题是最多的，所以对笑的训练也是最困难的。</p><p>问题一：有些人在笑的时候或不张嘴；或张得很大；或下巴前伸（有些前伸严重的人在闭嘴时，下牙槽会咬合在上牙槽的外面，俗称兜兜齿。）；或下巴左歪右斜；或下巴后缩而导致双下巴。</p><p>问题一的解决方法：有这些坏习惯的，可以利用镜子矫正，养成了正确的习惯之后，问题就会得到解决。还有，偏胖的应该去减肥，因为肥胖的人更容易出现双下巴，减肥的方法见第三章第二节。</p><p>问题二：有些人在笑时中位笑纹的位置偏外，离外眼角很近，如图2：</p><p>问题三：有些人在笑的时候，外眼角会出现皱纹，叫做鱼尾纹，鱼尾纹严重的，能挤得眼睛眯成了一条缝隙，俗称眯缝眼。</p><p>问题四：有些人在笑时牙肉尽露。而严重的会上唇外翻，并且上唇比较厚。</p><p>问题五：有些人在笑的时候下位笑纹向上有延长，如图3：</p><p>问题六：有些人在笑时，或是左右脸的中位笑纹不够对称，或是中位笑纹不够流畅，或是中位笑纹不够清晰（对称的表情纹能使左右脸变得更对称，流畅的表情纹能使脸形变得更规则。）。</p><p>问题二至六的解决方法：通过训练，使自己在笑的时候，脸上有两条标准的中位笑纹儿，就可以解决这些问题（有皮肤病的要先治病再进行对纹理的练习。）。</p><p>具体作法如下：</p><p>首先，作出大笑的表情并保持住。将大拇指颇用力地抵在嘴角旁边的点上，从大拇指抵着的点到鼻头旁边，就会出现一道中位笑纹。</p><p>然后调整这道纹理的形成位置，男性的要偏外一点儿，以绕过胡须，因为有胡须的区域内很难练出表情纹，但中位笑纹的形成位置也不能太偏外，否则就会像图2那样（表情纹的最佳形成位置一旦确定，在以后的练习中就不要再改来改去，这样才能练出这条表情纹来。还要注意的是，必须使左右脸的中位笑纹对称、流畅。</p><p>然后，用食指把外眼角那边的肌肉，揉向中位笑纹这边，使中位笑纹暂时变得更深。</p><p>然后在不让中位笑纹消失的情况下，再大笑一次，这次一定要真笑。在笑的同时，尝试控制中位笑纹和外眼角之间的喜气，使其都尽量向中位笑纹靠拢，这可以避免外眼角出现鱼尾纹；同时，要保持中位笑纹的清晰，这是为了拦截向中位笑纹靠拢的喜气，以避免喜气流到上唇并使上唇外翻，而露出牙肉。要用这些方法尽可能地体会出，那些有标准的中位笑纹的人，他们在笑时脸上是什么感觉。</p><p>最后，记住这种感觉。再尝试做到在不用手的情况下，也能随时找到这种感觉。</p><p>以后当你做到时，你想要的中位笑纹就会趋于清晰了。还有一些训练要领在本章末。</p><p>问题七：有些人在笑的时候，眼睛底下会出现眼袋（请注意，有上位笑纹的人在笑时，他们的上位笑纹和眼睛之间的肌肉也会膨起，但这并不是眼袋。）。</p><p>问题八：有些人在笑时，或是左右脸的上位笑纹不够对称，或是上位笑纹不够流畅，或是上位笑纹不够清晰。</p><p>问题七和八的解决方法：：通过练习，使自己在笑的时候，双眼底下有两条标准的上位笑纹儿，就能解决这两个问题。具体作法如下：</p><p>首先，取一根牙签并除尖去刺，做成自制的木签。</p><p>然后作出大笑的表情并保持住，将木签的一端横抵在眼睛底下，从签头到内眼角就会出现一道上位笑纹来，调整木签的位置，不要让木签压到眼球。还要注意使左右脸的上位笑纹对称、流畅。</p><p>然后，在不让上位笑纹消失的情况下，再大笑一次，并且要真笑，同时要保持上位笑纹的清晰，这是为了拦截某些流向眼底的喜气，以避免喜气使眼底出现眼袋。要用这些方法尽可能地体会出，那些有标准的上位笑纹的人，他们在笑时脸上是什么感觉。</p><p>最后，记住这种感觉，再尝试做到在不用木签的情况下，也能随时找到这种感觉。</p><p>以后当你做到时，你想要的上位笑纹就会若隐若现了。训练要领见本章末。</p><p>问题九：有些人在笑的时候，下位笑纹的位置离下唇很近.</p><p>问题十：有些人在笑时下唇外翻，而且下唇比较厚。</p><p>问题十一：有些人在笑的时候，下位笑纹内侧显得比较消瘦。</p><p>问题十二：有些人在笑时中位笑纹向下有延长.</p><p>问题十三：有些人在笑时，或是左右脸的下位笑纹不够对称，或是下位笑纹不够流畅，或是下位笑纹不够清晰。</p><p>问题九至十三的解决方法：通过训练，使自己在笑的时候，脸上有两条标准的下位笑纹儿，就能解决这些问题，具体作法如下：</p><p>首先，取一根牙签并除尖去刺，做成自制的木签。</p><p>然后，作出大笑的表情并保持住。想象自己的脸上有两条标准的下位笑纹，再将木签的一端，力度适中地斜抵在想象中的，左脸或右脸的下位笑纹的中间，就会抵出一道下位笑纹。</p><p>然后调整这道纹理的形成位置，不能太靠近下唇，否则就会像图4那样。还要调整并选择木签的发力方向，看朝哪个发力方向能获得最好看的脸形。还要注意使左右脸的下位笑纹对称、流畅。</p><p>然后，在不让下位笑纹消失的情况下，再大笑一次，并且要真笑，在笑的同时，尝试控制下唇处的喜气，使其都尽量向下位笑纹靠拢，这可以避免下唇外翻和变厚。同时，要保持下位笑纹的清晰，这是为了拦截从下唇向下位笑纹靠拢的喜气，以避免下位笑纹和下唇之间因喜气流失而变瘦。要用这些方法尽可能地体会出，那些有标准的下位笑纹的人，他们在笑时脸上是什么感觉。</p><p>最后，记住这种感觉。再尝试做到在不用木签的情况下，也能随时找到这种感觉。</p><p>以后当你做到时，你想要的下位笑纹就会趋于清晰了。训练要领见本章末。</p><p>（3）对‘怒’的训练</p><p>问题一：有些人在生气的时候会咬牙切齿，严重的能咬坏牙齿。</p><p>问题一的解决方法：只要在作愤怒的表情时注意控制，不难改掉这个习惯。</p><p>问题二：有些人的两眉头的间距很宽（眉毛包括眉头、眉峰和眉梢）。</p><p>问题三：有些人的眉梢下掉，俗称掉梢眉，严重的在发怒时，眼睛会被眉毛压成三角眼。</p><p>问题四：有些人在眉心有增生的眉毛，严重的会把两条眉毛连成一条，俗称连心眉。</p><p>问题五：有些人在生气时，或是左右脸的怒纹不够对称，或是怒纹不够流畅，或是怒纹不够清晰。</p><p>问题二至五的解决方法：通过训练，使自己在发怒的时候，两眉头之间有两条标准的怒纹，就可以解决这些问题（眉型有问题的，还可以去美容院修眉，但这不是长久之计。）。具体作法如下：</p><p>首先，取两根牙签并除尖去刺，做成自制的木签。</p><p>然后作出大怒的表情并保持住，用一只手将两根木签力度适中地，在左右眉头之间压出两道怒纹，调整两根木签的间距，不能太近或太远，如果太近的话，怒纹就会相互影响而很难成形，太远的话，则会使左右眉头的间距变得太宽。还要注意使左右脸的怒纹对称、流畅。</p><p>然后，用另一只手把眉梢那边的肌肤，揉向怒纹这边，使怒纹暂时变得更深。</p><p>然后，在不让怒纹消失的情况下，保持睁眼，并尝试在眉梢不压眼睛的前提下皱动眉毛，使眉梢那边的怒气向怒纹尽量靠拢，这能避免掉梢眉以及三角眼的出现。同时，要保持怒纹的清晰，这是为了截住向怒纹靠拢的怒气，以预防连心眉。要用这些方法尽量地体会出，那些有标准的怒纹的人，他们在发怒时脸上是什么感觉。</p><p>最后，记住这种感觉。尝试做到在不用木签的情况下，也能随时找到这种感觉。</p><p>以后当你做到时，你想要的怒纹就会趋于清晰了。训练要领见本章末。</p><p>问题六：有些人在努力睁眼、或将眼睛上翻着看东西时，额头上会出现一些皱纹，俗称抬头纹。抬头纹严重的会导致眉峰偏高。</p><p>问题六的解决方法：首先，因为有掉梢眉的人在扬眉时更容易形成抬头纹，所以要减少抬头纹的话，就得练出标准的怒纹以矫正掉梢眉（训练方法见前）；其次，要养成控制眉毛上扬高度的习惯；最后，当人昏昏欲睡的时候，往往会不自觉地将眉毛上扬，从而出现抬头纹，所以每当这种时候都要特别注意控制。</p><p>（4）对“哀”的训练</p><p>有些人在哭的时候总是不会流眼泪。</p><p>该问题的解决方法：人在打呵欠的时候，会有轻度的气冲双眼的感觉，试着加强这种感觉，就会使双眼涌出泪花。不会主动地打呵欠的，可以挺拔身姿并举起双臂，这能使呵欠更容易打得出来。</p><p>（5）对“惧”的训练</p><p>有些人在恐惧的时候不会使头皮向后颤动。</p><p>该问题的解决方法：把手轻按着头顶，进入恐惧的情绪，并尝试用这情绪使头皮后移。</p><p>（2）表情训练的要领：</p><p>（1）那些拥有标准的表情纹的人，他们在作表情时脸上是什么感觉呢？为了使自己更容易体会到这些感觉，你可以先搜集一些俊男靓女的影像，然后在进行表情训练时模仿他们的表情，届时最好是男模仿男，女模仿女。还有一种方法是，用左右脸相互模仿的办法找感觉。</p><p>（2）如果把一条表情纹比作一条线的话，那么，你既可以对整条线进行练习，也可以对线上的某个点，进行单独练习。</p><p>（3）表情训练见效之后，在短期内你会对新的表情不太习惯，这时候你需要注意的是，别走回到老路上去。</p><p>（4）表情纹的改变也绝非是一蹴而就，要有耐心。</p><p>（5）要养成这样的表情习惯：当人在哀伤到哭的时候，最酷的哭法是，在面部显得很平静的同时，使泪水从眼眶涌出。当人在情绪特别强的时候，比如在捧腹大笑、勃然大怒、嚎啕大哭或极度恐惧的时候，脸上可以出现所有的表情纹，也可以流泪（眼泪不只是在哭的时候才有，还可以在情绪强烈的时候，被笑出来、气出来或吓出来。）。之所以要遵循这些表情习惯，是因为这样有利于情绪的发泄（发泄情绪是表情的最主要的作用）。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>成功的第一步：放弃20件你很想做的事</title>
      <link href="/2018/11/08/cheng-gong-de-di-yi-bu-fang-qi-20-jian-ni-hen-xiang-zuo-de-shi/"/>
      <url>/2018/11/08/cheng-gong-de-di-yi-bu-fang-qi-20-jian-ni-hen-xiang-zuo-de-shi/</url>
      
        <content type="html"><![CDATA[<p>在一个人的认知资源有限的情况下，一段时间里如果有太多的目标，那么很可能哪个都无法完成。</p><p>MikeFlint是巴菲特的私人飞行员，还曾为美国四任总统开过飞机，但他仍在事业上有更高的追求。</p><p>有一次，他和巴菲特在探讨他的职业生涯目标。巴菲特让他先写下自己认为的职业生涯最重要的25个目标。然后，巴菲特让他看着这个清单，圈出他认为最重要的5个。</p><p>最后，巴菲特问他：你现在知道该怎么做了么？</p><p>Flint答：知道了。我现在会马上开始着手于实现这5个目标。至于另外20个，并没有那么紧急。所以可以放在闲暇的时间去做，然后慢慢把它们实现。</p><p>巴菲特听完后说到：不，Mike，你搞错了。那些你并没有圈出来的目标，不是你应该在闲暇时间慢慢完成的事，而是你应该尽全力避免去做的事。</p><p>你应该像躲避瘟疫一样躲避它们，不花任何的时间和注意力在它们上面。</p><p>这让我想到了三件事：</p><p>一、“如何让自己的目标变少”非常重要</p><p>对于个人还是企业，最可怕的状态是什么？</p><p>是“什么都能做”，“所有方向都可以是方向”。</p><p>这意味着你没有具体的目标，并且什么都不愿舍弃，最后一定就会什么都做不好。</p><p>脱离这种状态，最关键的一点是：将开放式的问题变成封闭式的问题。</p><p>比如，滴滴早期找到了“五分钟内叫到出租车”的这么一个封闭式的目标。</p><p>这就意味着，它一开始不需要去开拓专车或快车，不需要优化用户乘坐出租车的体验（比如培训司机，在车内放上水、纸巾或者杂志）。</p><p>而只需要围绕着如何覆盖更多的车，以及优化匹配算法来执行。</p><p>这样整个公司的目标就是极其明确的。</p><p>二、专注非常重要</p><p>在一个人的认知资源有限的情况下，一段时间里如果有太多的目标，那么很可能哪个都无法完成。</p><p>尽管“专注”和“聚焦”的概念已经被现代人提及的太多，但真正能做到准确地辨识自己的欲念，去除自己不真正需要的东西的人，还是很少。</p><p>三、比起“有所为”，“有所不为”可能更加重要</p><p>这可能和查理·芒格所说的“Invert，alwaysinvert.”有相通之处。</p><p>没有被选中的那20件事，其实也是你感兴趣的或者有意义的，所以就很容易找到各种合理的理由在那些目标上花时间。</p><p>但它们才是默默消耗掉时间，转移你的注意力，又不能真正产出成果的事情。</p><p>这种目标比看起来明显就很愚蠢的东西更加危险。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>投资自己</title>
      <link href="/2018/11/08/tou-zi-zi-ji/"/>
      <url>/2018/11/08/tou-zi-zi-ji/</url>
      
        <content type="html"><![CDATA[<p>我主要是在以下几个方面进行投资的：</p><p>健康</p><p>身体是革命的本钱。没有一个强健的身体别的说再多也没用。</p><p>以下是我的具体行动：</p><ul><li><p>  体检</p></li><li><p>  我每季度都会根据自己的身体反应做个常规小检查，每年做一次全面体检。这需要一定的金钱，一定的时间。</p></li><li><p>  日常保健</p></li></ul><p>我会针对自己的身体情况做针对性的一些保养。比如我有轻度慢性胃炎，所以平时会喝点健胃的茶。有咽炎，平时就会含点含片什么的。这需要一点金钱。</p><ul><li>  睡眠</li></ul><p>为什么把睡眠单独出来说呢？因为睡眠真的是太重要了。这个在之后的精力管理也会提及。为了睡个好觉，我买了能买得起的最优质的床上用品，事实证明这笔钱花的很值！</p><ul><li>  运动</li></ul><p>光睡好觉可不够，还需要动静结合。亲身体验觉得平时多运动有利于大脑思维的锻炼以及精力水平的提高。在运动方面的投资主要是跑鞋以及运动衣物。我买的是ASCIS KAYANO20 以及nike跑步系列各种衣物。贵是贵了点，但是因为有坚持跑步，所以觉得这笔钱花的也很值！</p><ul><li>  口腔健康</li></ul><p>在口腔护理的道路上，一定要未雨绸缪。不要等到症状出现了再亡羊补牢。除了基本的每天刷牙漱口，最好还要学会使用牙线。如果口腔状况自我感觉不好，定期去口腔科检查治疗。去正规医院做个口腔检查不会很贵，但是不要拖延。</p><p>家庭</p><p>我是一个家庭观念比较重的人，所以将其放在了第二位。对父母的投资我觉得可以分成两个方面。</p><ul><li>  精神方面</li></ul><p>父母其实非常需要子女的陪伴，我在外地上大学，但是学期中如果有时间的话尽量会抽时间回家陪陪父母。在父母给我打电话的时候，无论他们说什么我都尽可能地耐心听。有时候他们会唠叨，会讲一些年轻人觉得琐屑而且没用的东西。可是我的不耐烦会伤害到他们，所以只要手边没有特别紧急的事情，我都会耐心地听他们说。这个方面的投资主要是时间。</p><ul><li>  物质方面</li></ul><p>我还只是个在校生，自己的经济来源无非是他们给的生活费以及我课余兼职的一些收入。但还是能够匀出一点钱给他们买点小东西的。送父母什么好其实在知乎上有专门的回答，题主可以去参照一下。最近打算攒钱给他们买个ipad，让他们也体验一下高科技，丰富他们的娱乐生活，以及方便和我视频通话什么的。其实送父母东西不一定要多贵重，有这份心意他们就会很开心了。这方面的投资主要是你的钱与挑礼物的精力啦。不要吝啬！因为现在不花，以后你极有可能会后悔的。</p><p>人脉</p><p>其实我挺不喜欢人脉这个词，总觉得这个词的功利气息比较浓厚。但是找不到更好的词来替代，所以暂且用它吧。我觉得广泛地真诚地去结交朋友，对自己的发展有所帮助。我交朋友主要看人品与三观。人品不行，三观不合的就免了，浪费彼此的时间与精力。在Omnifocus里面我的人脉文件夹里面有两个project，一个是维持，一个是开拓。下面我大致介绍一下：</p><ul><li>  维持</li></ul><p>维持，顾名思义，便是维持现有的关系。由于自己的时间精力有限，所以我只会在几个“基友”身上专门抽出时间娱乐交流什么的。普通朋友的话就不写在日程里面了，不过这并不代表我不重视与普通朋友的关系。在平时有机会也可以一起吃饭娱乐玩耍，只是没有刻意安排罢了。</p><ul><li>  开拓</li></ul><p>年轻人总不能满足且局限于自己的圈子。所以开拓自己的人脉还是很有用的。想要开拓首先要走出自己的小圈子，认识新朋友的机会其实无处不在，关键看你的态度真诚与否，沟通技巧是否得当，以及自身是否有价值（思想\物质）。</p><p>无论是维持还是开拓，都需要付出一定的时间精力金钱。不过，对人脉的投资能够让你的路走的更顺利。还有给题主一个建议：对人脉的投资不要太“势利”，不要“趋炎附势”。对所有人应该一视同仁真诚地去看待，你最后会发现他们会像乔布斯所说的那些dot，会慢慢连在一起，形成一个体系。我也要提醒一句，每个人都不是完美的，交友的时候虽然没必要吹毛求疵，但是一定要远离“小人”，不要在他们身上浪费任何时间精力，一点价值都没有。</p><p>爱情</p><p>不要以为爱情是理所当然的。无论是得到爱情还是维持爱情，都需要付出。在爱情上的投资或许能让你收获一个一生的伴侣，在爱情中的付出亦是宝贵的历练，能够让你成长。我现在没有女朋友。爱情已经是对于我而言已经是历史上的事情了。为了保持答案的完整性，我还是写一下这部分内容吧。</p><ul><li>  对方的需要</li></ul><p>我挺擅长解决问题的。对方一旦有什么事情，我就会把对方的事情放在心上。所以在对方眼里我一直是一个非常靠谱的人。因为我各个方面都能够照顾到。不过这真的挺需要时间和精力的，但是要是对的人，付出再多又有什么关系呢？</p><ul><li>  不失浪漫</li></ul><p>年轻人如果丢了浪漫，那真的意味着失去了很多。带她去情调氛围好点的餐厅吃饭啊，时不时看看电影啊，去有美景的地方一起游玩啊，特殊的日子送上一份惊喜啊等等。这真的是年轻人的特权，所以不要吝啬金钱时间精力，好好地去体验一下爱情之美吧。</p><ul><li>  共同成长</li></ul><p>这点是为了补充第二点。热恋中的人通常是失去理智的，所以罗曼蒂克虽好，但也需适量。你要明白你要找一个能让你成长的人，而不是找一个只能和你亲昵的人。如果运用得当，爱可以是逐梦最好的驱动力。所以不要忘了，发掘出你们可以共同追求的东西，一起努力，一起成长！</p><p>形象</p><p>虽说在外型上很多东西是爹妈给的无法改变，但是自己能改善的还是尽力改善吧。把自己的形象打理的整洁得体，也是一种对自己和对他人的尊重。我是在以下几个方面进行改善的：</p><ul><li>  护肤</li></ul><p>从小喜欢烈日底下打球，所以肤色偏深。现在有点后悔，在尽力改善。每天早晚洁面爽肤保湿常规护理，每周做一次面膜改善肤质。坚持半年多了，还是有收到一点效果。这方面的投资回报不会立竿见影，要不断地坚持才能看到效果。</p><ul><li>  衣着</li></ul><p>从只会穿运动服到现在慢慢地走向休闲风，从穿衣松松垮垮到现在的整洁干练，我摸索了蛮久的。想在这方面做好其实需要付出挺多的，题主你可以权衡取舍一下，毕竟买高质量的衣服鞋子意味着一大笔钱的付出，逛街意味着大块大块的时间，研究搭配与变化更是要耗掉你不少的精力。不过最起码的，要做到衣服干净整洁合体。</p><ul><li>  身高</li></ul><p>我本人身高不高，所以在身高方面需要刻意下一点功夫。平时我会花点钱在钙片和蛋白粉上，抽出时间做做拉伸什么的。这笔投资在年轻的时候才有效果，岁数过了就很难再长高了。很后悔到了大学才有这个觉悟，也只能尽力弥补了。</p><ul><li>  体型</li></ul><p>我体型偏瘦，而且怎么吃都吃不胖。所以我在健身上做了一点研究。因为个人原因健身计划近期内无法开展，但还是完善一下这一部分吧。因为去健身房的条件不足，所以我选择的是无器械健身。这需要一张瑜伽垫，一对哑铃，学校操场旁的单双杠。平时的营养也需要注意加强。因为自己还没怎么实行，所以具体的经验也不好说。推荐《无器械健身》 这本书以及imuscle这个软件。</p><p>阅读</p><p>实在难以用言语形容阅读于我的重要性。在我看来，没有阅读的日子是难以置信的。因为在阅读的过程中，你会发现自己是多么地无知。你会发现随着你阅读量的积累，对很多事情会产生一个崭新的认识。阅读的好处无需赘述，阅读的内容也因人而异，我想告诉你的是，坚持每天读书！不管每天有没有时间，一定要坚持，哪怕只能看一页。久而久之，你就会发现你已经离不开阅读。那么恭喜你，你养成了一个终身受益的好习惯。</p><p>我基本是在iPad或是Mac上看电子书，所以纸质书的成本几乎没有。主要的投入便是看书的时间，以及看书时思考所需要的精力。</p><p>专业积累</p><p>其实比较普适的几个方面已经写完了。接下来的两个方面比较个性化，所以就写得简练一点。我的专业是经管类的。我在专业积累方面的投资主要在下面两个方面：</p><ul><li>  商业-企业-创业</li></ul><p>我平时有关注这三个方面的内容，主要的渠道是书籍，杂志，网上的论坛，以及与学长学姐或是在职的朋友的交流。毕竟这与自己的职业生涯息息相关，早做点准备总是好的。这方面的投资主要是时间，一定要与时俱进，尤其是在现在的信息时代。一个过时的资讯就能让你吃不少亏。</p><ul><li>  移动互联网</li></ul><p>这个与我的专业也有些许的关联吧。在Appstore上体验过很多优秀的应用之后，开始觉得这个行业潜力无穷，所以在这方面也下了一点功夫。现在在自学IOS应用开发，希望有志同道合的朋友可以联系我。</p><p>生产工具</p><p>投资在生产工具上，能够在付出同样的时间精力时，取得更大的收益。我认为值得投资的：</p><ul><li>  苹果三件套及applestore里的付费应用</li></ul><p>我本人是用5S，iPadAir，MBA。这三者配套使用效果最佳。如果要单买，建议先买MAC。它们能够让你做事情的质量与效率得到质的飞跃。苹果是一个能够激发人灵感的公司，产品的很多设计非常独到。当然也没有必要一定要购买苹果的产品，不过在这些产品上多花点钱，能够很大程度上提高你的效率。</p><ul><li>  一套优质的书写工具</li></ul><p>这个在知乎上也有推荐。强烈推荐LAMY和PILOT G-2。因为我是学生，平时需要用到书写的地方比较多，在文具上下了一点功夫之后，书写的舒适度提升不少。我觉得这些钱花的也挺值的。</p><p>原始资本的积累</p><ul><li>  金钱</li></ul><p>我的经济来源主要来自父母给的每个月一千多的生活费以及自己课外的兼职收入。课外兼职因人而异。毕竟经济基础决定上层建筑，如果不是自己有点收入，也不会有这么多预算进行投资。想告诉题主的则是，一开始赚钱不要想着赚大钱，钱总是越赚越大的。要循序渐进，更要懂得圆通灵活。</p><ul><li>  时间</li></ul><p>这就涉及到时间管理的内容了。在这里我不想详细阐述。我所认为时间管理很关键的一点是时间规划。有时候你不一定会按着规划来，但是事先有个规划会让你做事情有条不紊。推荐几本书：《与时间做朋友》《暗时间》《高效能人士的七个习惯》</p><ul><li>  精力</li></ul><p>这便是精力管理的内容。同样，不详细阐述，因为这篇答案已经够长了。题主如果有什么想问的可以私下交流。精力管理的核心几点，规律健康饮食，规律优质睡眠，规律适量运动，适度节制欲望。在这方面知乎上亦有不少精彩答案，题主可以去借鉴一下。只要跳出了原先的恶性循环，慢慢养成习惯，你会发现你的精力水平能够提升一个档次。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摆脱过时的金钱观</title>
      <link href="/2018/11/08/bai-tuo-guo-shi-de-jin-qian-guan/"/>
      <url>/2018/11/08/bai-tuo-guo-shi-de-jin-qian-guan/</url>
      
        <content type="html"><![CDATA[<p>一、去上学</p><p>1，学术教育，专业教育，缺少财务教育。</p><p>2，财务报表，收支表，资产负债表。</p><p>3，学校把我们培育成很好的雇员，街头智慧更重要。</p><p>4，学校没有教投资、法律、税务、历史。</p><p>5，依赖公司，依赖政府，依赖养老金。</p><p>6，学习金字塔，最差的学习方式是读书和听课，最佳的学习方式是模拟训练和玩游戏。</p><p>二、找份工作</p><p>1，E缴的税最多，然后是S，缴最少的是B和I。</p><p>2，工作是风险最高的职业。</p><p>3，如果没有足够多的财商，就只能找份工作了。</p><p>4，工作只比破产好一点点。</p><p>5，客户永远只有一个，就是你的老板</p><p>6，财务保障比工作保障重要的多。E和S从错误中接受惩罚，B和I因犯错越来越有钱。</p><p>三、努力工作</p><p>1，想办法让其他人为你工作，想办法让钱为你工作。</p><p>2，富人不为钱工作，努力工作就要缴更多的税。</p><p>3，为建立资产而工作，E，S和B、I最大区别就是，E、S只关注他们的收入，而B、I则专注于他们的资产。</p><p>4，资产就是能把钱放入你口袋的东西，无论你工作与否。负债就是把钱从你口袋拿走的东西。</p><p>5，钞票越来越没有价值，国家一直在印制钞票。</p><p>四、存钱</p><p>1，钱已不再是钱，只是一种货币，一种债务。存钱是愚蠢的行为，黄金才是真正的钱，真正的钱能够维持其购买力。</p><p>2，印制钞票就会产生通货膨胀。</p><p>五、房子不是资产</p><p>1，自住的房子是负债，出租的房子是资产，一个掏钱，一个收钱。</p><p>2，贷款的金额不要比房子的价值高</p><p>3，房子是最容易杠杆操作的一种资产。</p><p>4，主要的资产有四类：企业，房地产，有价证券（股票），商品（黄金）</p><p>5，分散投资四类资产。</p><p>六、量入为出</p><p>1，只有一份工作，没有其他的收入，你就只能过量入为出的生活。</p><p>2，真正的关键是提高收入，努力提高收入。</p><p>3，订立目标，健康目标，资产目标。想变富有的关键就是不断地增加资产。</p><p>4，先建立资产，然后用资产所带来的现金流去支付想买的东西。</p><p>5，绝对不要过量入为出的生活，要想办法增加资产以创造新的现金流。</p><p>6，E、S变穷的四个原因：税，债务，通货膨胀，退休。努力增加财商，早日跨入B、I项。</p><p>7，接受财务教育，负起人生的责任。</p><p>七、分散投资</p><p>1，基金是最差的投资方式，他让别人富有。</p><p>2，不要进行长期投资纸资产。</p><p>3，工资收入、组合收入、被动收入。</p><p>4、分散投资不同的产品。</p><p>八、远离债务</p><p>1，不要滥用信用卡和贷款，那是缺乏财商的表现。</p><p>2，经营企业和房地产能有好的债务。</p><p>3，资本利得和现金流，现金流更稳定。资本利得算得上是赌博。同时投资资本利得和现金流。</p><p>4，房地产是最容易使用杠杆的投资，贷款有房客来缴。</p><p>5，好的债务。</p><p>6，如果一开始就为了资本利得而投资，有一天你终将输掉一切。</p>]]></content>
      
      
      <categories>
          
          <category> 励志 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7 快速搭建zabbix</title>
      <link href="/2018/08/07/zhuan-zai-centos7-kuai-su-da-jian-zabbix/"/>
      <url>/2018/08/07/zhuan-zai-centos7-kuai-su-da-jian-zabbix/</url>
      
        <content type="html"><![CDATA[<p>本笔记是基于CentOS 7下最小化安装的操作系统搭建的Zabbix3.0环境，用于做一些监控项的测试及运维自动化的测试。 前面是学习步骤的记录，后面有快速部署的命令，安装操作系统后，copy/paste就可以快速搭建一个LAMP或LNMP的Zabbix环境。</p><h2 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h2><pre class="line-numbers language-none"><code class="language-none">系统版本：CentOS Linux release 7.2.1511 (Core)内核版本：3.10.0-327.el7.x86_64Httpd版本：2.4.6-40.el7.centosMariaDB版本：5.5.47-1.el7_2PHP版本：5.4.16-36.el7_1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# setenforce 0[root@master ~]# sed -i &quot;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;g&quot; &#x2F;etc&#x2F;selinux&#x2F;config[root@master ~]# rpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-CentOS-7[root@master ~]# yum install epel-release.noarch wget vim gcc gcc-c++ lsof chrony tree nmap unzip rsync -y[root@master ~]# rpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基于LAMP环境的Zabbix3-0"><a href="#基于LAMP环境的Zabbix3-0" class="headerlink" title="基于LAMP环境的Zabbix3.0"></a>基于LAMP环境的Zabbix3.0</h2><hr><h3 id="LAMP环境安装"><a href="#LAMP环境安装" class="headerlink" title="LAMP环境安装"></a>LAMP环境安装</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# yum install httpd mariadb mariadb-server mariadb-client php php-mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装Zabbix服务"><a href="#安装Zabbix服务" class="headerlink" title="安装Zabbix服务"></a>安装Zabbix服务</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# rpm -ivh http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpm[root@master ~]# rpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX[root@master ~]# yum install zabbix-server-mysql zabbix-web-mysql zabbix-get zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# mysql -uroot -pMariaDB [(none)]&gt; CREATE DATABASE zabbix DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;MariaDB [(none)]&gt; GRANT ALL ON zabbix.* TO &#39;zabbix&#39;@&#39;%&#39; IDENTIFIED BY &#39;zabbix&#39;;MariaDB [(none)]&gt; quit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# cd &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-server-mysql-3.0.3&#x2F;[root@master zabbix-server-mysql-3.0.3]# zcat create.sql.gz  mysql -uroot -p zabbix[root@master zabbix-server-mysql-3.0.3]# cd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# vim &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.confDBHost&#x3D;localhostDBName&#x3D;zabbixDBUser&#x3D;zabbixDBPassword&#x3D;zabbix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述配置文件中，我们只需要关注DBHost、DBName、DBUser、DBPassword几项即可。这几项是配置zabbix server连接mysql数据库的参数。</p><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;zabbix.confphp_value date.timezone Asia&#x2F;Chongqing<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中php_value date.timezone Asia/Chongqing主要是定义php的时区</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# systemctl start httpd[root@master ~]# systemctl start zabbix-server[root@master ~]# systemctl start zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过 <a href="https://link.jianshu.com/?t=http://ip/zabbix">http://ip/zabbix</a> 访问 默认用户名/密码：Admin/zabbix，注意用户名也区分大小写</p><pre class="line-numbers language-none"><code class="language-none"># 配置中重写了访问路径[root@master ~]# vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;zabbix.confAlias &#x2F;zabbix &#x2F;usr&#x2F;share&#x2F;zabbix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="基于LNMP环境的Zbbix3-0"><a href="#基于LNMP环境的Zbbix3-0" class="headerlink" title="基于LNMP环境的Zbbix3.0"></a>基于LNMP环境的Zbbix3.0</h2><hr><h3 id="LNMP环境安装"><a href="#LNMP环境安装" class="headerlink" title="LNMP环境安装"></a>LNMP环境安装</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# yum install nginx mariadb mariadb-server mariadb-client php php-mysql php-fpm -y&#x2F;run&#x2F;php-fpm&#x2F;php-fpm.pid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="安装Zabbix服务-1"><a href="#安装Zabbix服务-1" class="headerlink" title="安装Zabbix服务"></a>安装Zabbix服务</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# rpm -ivh http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpm[root@master ~]# rpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIX[root@master ~]# yum install zabbix-server-mysql zabbix-web-mysql zabbix-get zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="修改文件属主和属组"><a href="#修改文件属主和属组" class="headerlink" title="修改文件属主和属组"></a>修改文件属主和属组</h3><p>zabbix的rpm包里默认编译apache为文件拥有者，把httpd服务替换为nginx服务，相应文件的拥有者需要进行对应的更改。</p><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# ll &#x2F;etc&#x2F;zabbix&#x2F;total 28drwxr-x---. 2 apache apache    32 Apr 20 09:41 web-rw-r--r--. 1 root   root   10341 Apr 20  2016 zabbix_agentd.confdrwxr-xr-x. 2 root   root      37 Apr 20 09:41 zabbix_agentd.d-rw-r-----. 1 root   zabbix 14876 Apr 20  2016 zabbix_server.conf[root@master ~]# chown nginx:nginx &#x2F;etc&#x2F;zabbix&#x2F;web&#x2F;[root@master ~]# ll -d &#x2F;var&#x2F;log&#x2F;php-fpmdrwxrwx---. 2 apache root 6 Jun 23  2015 &#x2F;var&#x2F;log&#x2F;php-fpm[root@master ~]# chown nginx &#x2F;var&#x2F;log&#x2F;php-fpm[root@master ~]# ll -d &#x2F;var&#x2F;log&#x2F;php-fpmdrwxrwx---. 2 apache root 22 Apr 20 09:53 &#x2F;var&#x2F;log&#x2F;php-fpm[root@master ~]# ll -d &#x2F;var&#x2F;lib&#x2F;php&#x2F;sessiondrwxrwx---. 2 root apache 44 Apr 20 10:22 &#x2F;var&#x2F;lib&#x2F;php&#x2F;session[root@master ~]# chown root:nginx &#x2F;var&#x2F;lib&#x2F;php&#x2F;session&#x2F;[root@master ~]# ll -d &#x2F;var&#x2F;lib&#x2F;php&#x2F;sessiondrwxrwx---. 2 root nginx 44 Apr 20 10:28 &#x2F;var&#x2F;lib&#x2F;php&#x2F;session[root@master ~]# cp -r &#x2F;usr&#x2F;share&#x2F;zabbix &#x2F;var&#x2F;www[root@master ~]# chown nginx:nginx -R &#x2F;var&#x2F;www&#x2F;zabbix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改php配置"><a href="#修改php配置" class="headerlink" title="修改php配置"></a>修改php配置</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# sed -i &#39;s&#x2F;^user &#x3D; .*&#x2F;user &#x3D; nginx&#x2F;&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf[root@master ~]# sed -i &#39;s&#x2F;^group &#x3D; .*&#x2F;group &#x3D; nginx&#x2F;&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf[root@master ~]# sed -i &#39;s&#x2F;^;date.timezone &#x3D;&#x2F;date.timezone &#x3D; Asia\&#x2F;Shanghai&#x2F;&#39; &#x2F;etc&#x2F;php.ini[root@master ~]# sed -i &#39;s&#x2F;^post_max_size &#x3D;.*&#x2F;post_max_size &#x3D; 16M&#x2F;&#39; &#x2F;etc&#x2F;php.ini[root@master ~]# sed -i &#39;s&#x2F;^max_execution_time &#x3D;.*&#x2F;max_execution_time &#x3D; 300&#x2F;&#39; &#x2F;etc&#x2F;php.ini[root@master ~]# sed -i &#39;s&#x2F;^max_input_time &#x3D;.*&#x2F;max_input_time &#x3D; 300&#x2F;&#39; &#x2F;etc&#x2F;php.ini<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# mysql -uroot -pMariaDB [(none)]&gt; CREATE DATABASE zabbix DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;MariaDB [(none)]&gt; GRANT ALL ON zabbix.* TO &#39;zabbix&#39;@&#39;%&#39; IDENTIFIED BY &#39;zabbix&#39;;MariaDB [(none)]&gt; quit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导入数据-1"><a href="#导入数据-1" class="headerlink" title="导入数据"></a>导入数据</h3><pre class="line-numbers language-none"><code class="language-none">[root@master zabbix-server-mysql-3.0.3]# cd &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-server-mysql-3.0.3&#x2F;[root@master zabbix-server-mysql-3.0.3]# zcat create.sql.gz  mysql -uroot -p zabbix[root@master zabbix-server-mysql-3.0.3]# cd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="配置nginx虚拟主机"><a href="#配置nginx虚拟主机" class="headerlink" title="配置nginx虚拟主机"></a>配置nginx虚拟主机</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;zabbix.confserver &#123;    root &#x2F;var&#x2F;www;    index index.php index.html;    access_log   &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access_zabbix.log;    error_log   &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error_zabbix.log;    location ~ \.php$ &#123;        fastcgi_pass 127.0.0.1:9000;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        include fastcgi_params;        fastcgi_buffer_size 128k;        fastcgi_buffers 4 256k;        fastcgi_busy_buffers_size 256k;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>YUM安装的nginx服务，主配置文件里有server项配置，需要进行注销</p><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# cp &#x2F;etc&#x2F;nginx&#x2F;nginx.conf &#x2F;etc&#x2F;nginx&#x2F;nginx.conf.bak[root@master ~]# sed -i &#39;35,54s&#x2F;^&#x2F;#&#x2F;&#39; &#x2F;etc&#x2F;nginx&#x2F;nginx.conf[root@master ~]# vim &#x2F;etc&#x2F;nginx&#x2F;nginx.conf[root@master ~]# cat &#x2F;etc&#x2F;nginx&#x2F;nginx.conf# For more information on configuration, see:#   * Official English Documentation: http:&#x2F;&#x2F;nginx.org&#x2F;en&#x2F;docs&#x2F;#   * Official Russian Documentation: http:&#x2F;&#x2F;nginx.org&#x2F;ru&#x2F;docs&#x2F;user nginx;worker_processes auto;error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log;pid &#x2F;run&#x2F;nginx.pid;events &#123;    worker_connections 1024;&#125;http &#123;    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  main;    sendfile            on;    tcp_nopush          on;    tcp_nodelay         on;    keepalive_timeout   65;    types_hash_max_size 2048;    include             &#x2F;etc&#x2F;nginx&#x2F;mime.types;    default_type        application&#x2F;octet-stream;    # Load modular configuration files from the &#x2F;etc&#x2F;nginx&#x2F;conf.d directory.    # See http:&#x2F;&#x2F;nginx.org&#x2F;en&#x2F;docs&#x2F;ngx_core_module.html#include    # for more information.    include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;#    server &#123;#        listen       80 default_server;#        listen       [::]:80 default_server;#        server_name  _;#        root         &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;##        # Load configuration files for the default server block.#        include &#x2F;etc&#x2F;nginx&#x2F;default.d&#x2F;*.conf;##        location &#x2F; &#123;#        &#125;##        error_page 404 &#x2F;404.html;#            location &#x3D; &#x2F;40x.html &#123;#        &#125;##        error_page 500 502 503 504 &#x2F;50x.html;#            location &#x3D; &#x2F;50x.html &#123;#        &#125;#    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# systemctl start mariadb[root@master ~]# systemctl start php-fpm[root@master ~]# systemctl start nginx[root@master ~]# systemctl start zabbix-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Zabbix-Agent"><a href="#Zabbix-Agent" class="headerlink" title="Zabbix Agent"></a>Zabbix Agent</h2><hr><h3 id="Zabbix-Agent安装"><a href="#Zabbix-Agent安装" class="headerlink" title="Zabbix Agent安装"></a>Zabbix Agent安装</h3><pre class="line-numbers language-none"><code class="language-none">[root@client01 ~]# rpm -ivh http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpm[root@client01 ~]# rpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-7[root@client01 ~]# yum install zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h3><pre class="line-numbers language-none"><code class="language-none">[root@client01 ~]# vim &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.confServer&#x3D;192.168.60.103ServerActive&#x3D;192.168.60.103Hostname&#x3D;client01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启用Zabbix-Agent"><a href="#启用Zabbix-Agent" class="headerlink" title="启用Zabbix Agent"></a>启用Zabbix Agent</h3><pre class="line-numbers language-none"><code class="language-none">[root@client01 ~]# systemctl start zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Zabbix-Get的使用"><a href="#Zabbix-Get的使用" class="headerlink" title="Zabbix-Get的使用"></a>Zabbix-Get的使用</h2><p>Zabbix-Get是Zabbix中的一个应用程序，用于Zabbix-Server到Zabbix-Agent的数据获取，通常可以用来测试Agent的配置是否正确。 使用帮助</p><pre class="line-numbers language-none"><code class="language-none">usage:  zabbix_get -s host-name-or-IP [-p port-number] [-I IP-address] -k item-key  zabbix_get -s host-name-or-IP [-p port-number] [-I IP-address]                --tls-connect cert --tls-ca-file CA-file                [--tls-crl-file CRL-file] [--tls-agent-cert-issuer cert-issuer]                [--tls-agent-cert-subject cert-subject]                --tls-cert-file cert-file --tls-key-file key-file -k item-key  zabbix_get -s host-name-or-IP [-p port-number] [-I IP-address]                --tls-connect psk --tls-psk-identity PSK-identity                --tls-psk-file PSK-file -k item-key  zabbix_get -h  zabbix_get -V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试 Agent 配置</p><pre class="line-numbers language-none"><code class="language-none">[root@master zabbix-server-mysql-3.0.3]# zabbix_get -s 192.168.60.104 -k system.unameLinux client01 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="zabbix用户忘记密码"><a href="#zabbix用户忘记密码" class="headerlink" title="zabbix用户忘记密码"></a>zabbix用户忘记密码</h2><p>进入数据库直接更改密码</p><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# mysql -uroot -pMariaDB [(none)]&gt; use zabbixReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -AMariaDB [zabbix]&gt; select userid, alias, name, passwd from users;+--------+-------+--------+----------------------------------+ userid  alias  name    passwd                           +--------+-------+--------+----------------------------------+      1  Admin  Zabbix  *DEEF4D7D88CD046ECA02A80393B7780       2  guest          d41d8cd98f00b204e9800998ecf8427e +--------+-------+--------+----------------------------------+2 rows in set (0.00 sec)MariaDB [zabbix]&gt; update users set passwd&#x3D;md5(&#39;zabbix&#39;) where userid&#x3D;&#39;1&#39;;Query OK, 1 row affected, 1 warning (0.00 sec)Rows matched: 1  Changed: 1  Warnings: 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Grafana-2-6"><a href="#Grafana-2-6" class="headerlink" title="Grafana 2.6"></a>Grafana 2.6</h2><pre class="line-numbers language-none"><code class="language-none">[root@master ~]# yum install https:&#x2F;&#x2F;grafanarel.s3.amazonaws.com&#x2F;builds&#x2F;grafana-2.6.0-1.x86_64.rpm[root@master ~]# systemctl start grafana-server[root@master ~]# yum install https:&#x2F;&#x2F;grafanarel.s3.amazonaws.com&#x2F;builds&#x2F;grafana-2.6.0-1.x86_64.rpm[root@master ~]# cp -r grafana-zabbix-2.5.1&#x2F;zabbix&#x2F;  &#x2F;usr&#x2F;share&#x2F;grafana&#x2F;public&#x2F;app&#x2F;plugins&#x2F;datasource&#x2F;[root@master ~]# systemctl restart grafana-server[root@master ~]# mkdir &#x2F;var&#x2F;lib&#x2F;grafana&#x2F;plugins[root@master ~]# cd &#x2F;var&#x2F;lib&#x2F;grafana&#x2F;plugins[root@master plugins]# git clone https:&#x2F;&#x2F;github.com&#x2F;alexanderzobnin&#x2F;grafana-zabbix-app[root@master plugins]# cd grafana-zabbix-app&#x2F;[root@master grafana-zabbix-app]# git pull[root@master grafana-zabbix-app]# systemctl restart grafana-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CentOS-7下最小化安装系统之快速部署Zabbix3-0测试环境"><a href="#CentOS-7下最小化安装系统之快速部署Zabbix3-0测试环境" class="headerlink" title="CentOS 7下最小化安装系统之快速部署Zabbix3.0测试环境"></a>CentOS 7下最小化安装系统之快速部署Zabbix3.0测试环境</h2><h3 id="基于LAMP环境的Zabbix3-0测试环境"><a href="#基于LAMP环境的Zabbix3-0测试环境" class="headerlink" title="基于LAMP环境的Zabbix3.0测试环境"></a>基于LAMP环境的Zabbix3.0测试环境</h3><pre class="line-numbers language-none"><code class="language-none"># 初始环境调整setenforce 0sed -i &quot;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;g&quot; &#x2F;etc&#x2F;selinux&#x2F;configyum install epel-release.noarch wget vim gcc gcc-c++ lsof chrony tree nmap unzip rsync -yrpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-7# LAMP环境部署yum install httpd mariadb mariadb-server mariadb-client php php-mysql -ysystemctl start mariadb# MariaDB数据库安全调整mysql -e &quot;DELETE FROM mysql.user WHERE User&#x3D;&#39;&#39;&quot;mysql -e &quot;DELETE FROM mysql.user WHERE User&#x3D;&#39;root&#39; AND Host NOT IN (&#39;localhost&#39;, &#39;127.0.0.1&#39;, &#39;::1&#39;)&quot;mysql -e &quot;DROP DATABASE test;&quot;mysql -e &quot;DELETE FROM mysql.db WHERE Db&#x3D;&#39;test&#39; OR Db&#x3D;&#39;test\\_%&#39;&quot;mysql -e &quot;FLUSH PRIVILEGES&quot;# 创建Zabbix服务端的数据库和使用的账号mysql -e &quot;CREATE DATABASE zabbix DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;&quot;mysql -e &quot;GRANT ALL ON zabbix.* TO &#39;zabbix&#39;@&#39;%&#39; IDENTIFIED BY &#39;zabbix&#39;;&quot;# Zabbix应用部署rpm -ivh http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpmrpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIXyum install zabbix-server-mysql zabbix-web-mysql zabbix-get zabbix-agent -y# 导入Zabbix服务端的表结构cd &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-server-mysql-3.0.3&#x2F;zcat create.sql.gz  mysql -uroot zabbixcdsed -i &#39;&#x2F;^# DBPassword&#x3D;&#x2F;a \\nDBPassword&#x3D;zabbix&#39; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf#sed -i &#39;s&#x2F;^;date.timezone &#x3D;&#x2F;date.timezone &#x3D; Asia\&#x2F;Shanghai&#x2F;&#39; &#x2F;etc&#x2F;php.inised -i &#39;s@# \(php_value date.timezone \).*@\1Asia&#x2F;Shanghai@&#39; &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;zabbix.confsystemctl start httpdsystemctl start zabbix-agentsystemctl start zabbix-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过 <a href="https://link.jianshu.com/?t=http://ip/zabbix">http://ip/zabbix</a> 访问 默认用户名/密码：Admin/zabbix</p><h3 id="基于LNMP环境的Zabbix3-0测试环境"><a href="#基于LNMP环境的Zabbix3-0测试环境" class="headerlink" title="基于LNMP环境的Zabbix3.0测试环境"></a>基于LNMP环境的Zabbix3.0测试环境</h3><pre class="line-numbers language-none"><code class="language-none"># 初始环境调整setenforce 0sed -i &quot;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;g&quot; &#x2F;etc&#x2F;selinux&#x2F;configyum install epel-release.noarch wget vim gcc gcc-c++ lsof chrony tree nmap unzip rsync -yrpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-EPEL-7# LNMP环境部署yum install nginx mariadb mariadb-server mariadb-client php php-mysql php-fpm -ycat &gt; &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;zabbix.conf &lt;&lt; \EOFserver &#123;    root &#x2F;var&#x2F;www;    index index.php index.html;    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access_zabbix.log;    error_log   &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error_zabbix.log;    location ~ \.php$ &#123;        fastcgi_pass 127.0.0.1:9000;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        include fastcgi_params;        fastcgi_buffer_size 128k;        fastcgi_buffers 4 256k;        fastcgi_busy_buffers_size 256k;    &#125;&#125;EOFsed -i &#39;35,54s&#x2F;^&#x2F;#&#x2F;&#39; &#x2F;etc&#x2F;nginx&#x2F;nginx.confsed -i &#39;s&#x2F;^;date.timezone &#x3D;&#x2F;date.timezone &#x3D; Asia\&#x2F;Shanghai&#x2F;&#39; &#x2F;etc&#x2F;php.inised -i &#39;s&#x2F;^post_max_size &#x3D;.*&#x2F;post_max_size &#x3D; 16M&#x2F;&#39; &#x2F;etc&#x2F;php.inised -i &#39;s&#x2F;^max_execution_time &#x3D;.*&#x2F;max_execution_time &#x3D; 300&#x2F;&#39; &#x2F;etc&#x2F;php.inised -i &#39;s&#x2F;^max_input_time &#x3D;.*&#x2F;max_input_time &#x3D; 300&#x2F;&#39; &#x2F;etc&#x2F;php.inised -i &#39;s&#x2F;^user &#x3D; .*&#x2F;user &#x3D; nginx&#x2F;&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.confsed -i &#39;s&#x2F;^group &#x3D; .*&#x2F;group &#x3D; nginx&#x2F;&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.confchown nginx &#x2F;var&#x2F;log&#x2F;php-fpmsystemctl start mariadb# MariaDB数据库安全调整mysql -e &quot;DELETE FROM mysql.user WHERE User&#x3D;&#39;&#39;&quot;mysql -e &quot;DELETE FROM mysql.user WHERE User&#x3D;&#39;root&#39; AND Host NOT IN (&#39;localhost&#39;, &#39;127.0.0.1&#39;, &#39;::1&#39;)&quot;mysql -e &quot;DROP DATABASE test;&quot;mysql -e &quot;DELETE FROM mysql.db WHERE Db&#x3D;&#39;test&#39; OR Db&#x3D;&#39;test\\_%&#39;&quot;mysql -e &quot;FLUSH PRIVILEGES&quot;# 创建Zabbix服务端的数据库和使用的账号mysql -e &quot;CREATE DATABASE zabbix DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;&quot;mysql -e &quot;GRANT ALL ON zabbix.* TO &#39;zabbix&#39;@&#39;%&#39; IDENTIFIED BY &#39;zabbix&#39;;&quot;# Zabbix应用部署rpm -ivh http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpmrpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-ZABBIXyum install zabbix-server-mysql zabbix-web-mysql zabbix-get zabbix-agent -y# 导入Zabbix服务端的表结构cd &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-server-mysql-3.0.3&#x2F;zcat create.sql.gz  mysql -uroot zabbixcd# 文件权限修改chown nginx:nginx -R &#x2F;etc&#x2F;zabbix&#x2F;web&#x2F;cp -r &#x2F;usr&#x2F;share&#x2F;zabbix &#x2F;var&#x2F;wwwchown nginx:nginx -R &#x2F;var&#x2F;www&#x2F;zabbixchown root:nginx &#x2F;var&#x2F;lib&#x2F;php&#x2F;sessionsed -i &#39;&#x2F;^# DBPassword&#x3D;&#x2F;a \\nDBPassword&#x3D;zabbix&#39; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.confsystemctl start nginxsystemctl start php-fpmsystemctl start zabbix-agentsystemctl start zabbix-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过 <a href="https://link.jianshu.com/?t=http://ip/zabbix">http://ip/zabbix</a> 访问 默认用户名/密码：Admin/zabbix</p><h3 id="Zabbix-Agent快速部署"><a href="#Zabbix-Agent快速部署" class="headerlink" title="Zabbix Agent快速部署"></a>Zabbix Agent快速部署</h3><pre class="line-numbers language-none"><code class="language-none">setenforce 0sed -i &quot;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;g&quot; &#x2F;etc&#x2F;selinux&#x2F;configyum install vim lsof chrony -yrpm -ivh http:&#x2F;&#x2F;repo.zabbix.com&#x2F;zabbix&#x2F;3.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-3.0-1.el7.noarch.rpmrpm --import &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-CentOS-7yum install zabbix-agent -ysed -i &#39;s&#x2F;^Server&#x3D;.*&#x2F;Server&#x3D;192.168.60.103&#x2F;&#39; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.confsed -i &#39;s&#x2F;^ServerActive&#x3D;.*&#x2F;ServerActive&#x3D;192.168.60.103&#x2F;&#39; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.confsed -i &#39;s&#x2F;^Hostname&#x3D;.*&#x2F;Hostname&#x3D;client01&#x2F;&#39; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.confsystemctl start zabbix-agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> el </tag>
            
            <tag> 版本 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
